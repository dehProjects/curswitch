ARM GAS  /tmp/cc8fSdSQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f1xx_hal_timebase_tim.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_InitTick,"ax",%progbits
  20              		.align	2
  21              		.global	HAL_InitTick
  22              		.thumb
  23              		.thumb_func
  25              	HAL_InitTick:
  26              	.LFB64:
  27              		.file 1 "Src/stm32f1xx_hal_timebase_tim.c"
   1:Src/stm32f1xx_hal_timebase_tim.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f1xx_hal_timebase_tim.c **** /**
   3:Src/stm32f1xx_hal_timebase_tim.c ****   ******************************************************************************
   4:Src/stm32f1xx_hal_timebase_tim.c ****   * @file    stm32f1xx_hal_timebase_TIM.c 
   5:Src/stm32f1xx_hal_timebase_tim.c ****   * @brief   HAL time base based on the hardware TIM.
   6:Src/stm32f1xx_hal_timebase_tim.c ****   ******************************************************************************
   7:Src/stm32f1xx_hal_timebase_tim.c ****   * This notice applies to any and all portions of this file
   8:Src/stm32f1xx_hal_timebase_tim.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/stm32f1xx_hal_timebase_tim.c ****   * USER CODE END. Other portions of this file, whether 
  10:Src/stm32f1xx_hal_timebase_tim.c ****   * inserted by the user or by software development tools
  11:Src/stm32f1xx_hal_timebase_tim.c ****   * are owned by their respective copyright owners.
  12:Src/stm32f1xx_hal_timebase_tim.c ****   *
  13:Src/stm32f1xx_hal_timebase_tim.c ****   * Copyright (c) 2019 STMicroelectronics International N.V. 
  14:Src/stm32f1xx_hal_timebase_tim.c ****   * All rights reserved.
  15:Src/stm32f1xx_hal_timebase_tim.c ****   *
  16:Src/stm32f1xx_hal_timebase_tim.c ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/stm32f1xx_hal_timebase_tim.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/stm32f1xx_hal_timebase_tim.c ****   *
  19:Src/stm32f1xx_hal_timebase_tim.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/stm32f1xx_hal_timebase_tim.c ****   *    this list of conditions and the following disclaimer.
  21:Src/stm32f1xx_hal_timebase_tim.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/stm32f1xx_hal_timebase_tim.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/stm32f1xx_hal_timebase_tim.c ****   *    and/or other materials provided with the distribution.
  24:Src/stm32f1xx_hal_timebase_tim.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/stm32f1xx_hal_timebase_tim.c ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/stm32f1xx_hal_timebase_tim.c ****   *    derived from this software without specific written permission.
  27:Src/stm32f1xx_hal_timebase_tim.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/stm32f1xx_hal_timebase_tim.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/stm32f1xx_hal_timebase_tim.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/stm32f1xx_hal_timebase_tim.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/stm32f1xx_hal_timebase_tim.c ****   *    this license is void and will automatically terminate your rights under 
ARM GAS  /tmp/cc8fSdSQ.s 			page 2


  32:Src/stm32f1xx_hal_timebase_tim.c ****   *    this license. 
  33:Src/stm32f1xx_hal_timebase_tim.c ****   *
  34:Src/stm32f1xx_hal_timebase_tim.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/stm32f1xx_hal_timebase_tim.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/stm32f1xx_hal_timebase_tim.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/stm32f1xx_hal_timebase_tim.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/stm32f1xx_hal_timebase_tim.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/stm32f1xx_hal_timebase_tim.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/stm32f1xx_hal_timebase_tim.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/stm32f1xx_hal_timebase_tim.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/stm32f1xx_hal_timebase_tim.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/stm32f1xx_hal_timebase_tim.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/stm32f1xx_hal_timebase_tim.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/stm32f1xx_hal_timebase_tim.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/stm32f1xx_hal_timebase_tim.c ****   *
  47:Src/stm32f1xx_hal_timebase_tim.c ****   ******************************************************************************
  48:Src/stm32f1xx_hal_timebase_tim.c ****   */
  49:Src/stm32f1xx_hal_timebase_tim.c **** /* USER CODE END Header */
  50:Src/stm32f1xx_hal_timebase_tim.c **** 
  51:Src/stm32f1xx_hal_timebase_tim.c **** /* Includes ------------------------------------------------------------------*/
  52:Src/stm32f1xx_hal_timebase_tim.c **** #include "stm32f1xx_hal.h"
  53:Src/stm32f1xx_hal_timebase_tim.c **** #include "stm32f1xx_hal_tim.h"
  54:Src/stm32f1xx_hal_timebase_tim.c ****  
  55:Src/stm32f1xx_hal_timebase_tim.c **** /* Private typedef -----------------------------------------------------------*/
  56:Src/stm32f1xx_hal_timebase_tim.c **** /* Private define ------------------------------------------------------------*/
  57:Src/stm32f1xx_hal_timebase_tim.c **** /* Private macro -------------------------------------------------------------*/
  58:Src/stm32f1xx_hal_timebase_tim.c **** /* Private variables ---------------------------------------------------------*/
  59:Src/stm32f1xx_hal_timebase_tim.c **** TIM_HandleTypeDef        htim2; 
  60:Src/stm32f1xx_hal_timebase_tim.c **** /* Private function prototypes -----------------------------------------------*/
  61:Src/stm32f1xx_hal_timebase_tim.c **** /* Private functions ---------------------------------------------------------*/
  62:Src/stm32f1xx_hal_timebase_tim.c **** 
  63:Src/stm32f1xx_hal_timebase_tim.c **** /**
  64:Src/stm32f1xx_hal_timebase_tim.c ****   * @brief  This function configures the TIM2 as a time base source. 
  65:Src/stm32f1xx_hal_timebase_tim.c ****   *         The time source is configured  to have 1ms time base with a dedicated 
  66:Src/stm32f1xx_hal_timebase_tim.c ****   *         Tick interrupt priority. 
  67:Src/stm32f1xx_hal_timebase_tim.c ****   * @note   This function is called  automatically at the beginning of program after
  68:Src/stm32f1xx_hal_timebase_tim.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig(). 
  69:Src/stm32f1xx_hal_timebase_tim.c ****   * @param  TickPriority: Tick interrupt priority.
  70:Src/stm32f1xx_hal_timebase_tim.c ****   * @retval HAL status
  71:Src/stm32f1xx_hal_timebase_tim.c ****   */
  72:Src/stm32f1xx_hal_timebase_tim.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  73:Src/stm32f1xx_hal_timebase_tim.c **** {
  28              		.loc 1 73 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 40
  40              	.LVL1:
  74:Src/stm32f1xx_hal_timebase_tim.c ****   RCC_ClkInitTypeDef    clkconfig;
  75:Src/stm32f1xx_hal_timebase_tim.c ****   uint32_t              uwTimclock = 0;
ARM GAS  /tmp/cc8fSdSQ.s 			page 3


  76:Src/stm32f1xx_hal_timebase_tim.c ****   uint32_t              uwPrescalerValue = 0;
  77:Src/stm32f1xx_hal_timebase_tim.c ****   uint32_t              pFLatency;
  78:Src/stm32f1xx_hal_timebase_tim.c ****   
  79:Src/stm32f1xx_hal_timebase_tim.c ****   /*Configure the TIM2 IRQ priority */
  80:Src/stm32f1xx_hal_timebase_tim.c ****   HAL_NVIC_SetPriority(TIM2_IRQn, TickPriority ,0); 
  41              		.loc 1 80 0
  42 0004 0022     		movs	r2, #0
  43 0006 0146     		mov	r1, r0
  44 0008 1C20     		movs	r0, #28
  45              	.LVL2:
  46 000a FFF7FEFF 		bl	HAL_NVIC_SetPriority
  47              	.LVL3:
  81:Src/stm32f1xx_hal_timebase_tim.c ****   
  82:Src/stm32f1xx_hal_timebase_tim.c ****   /* Enable the TIM2 global Interrupt */
  83:Src/stm32f1xx_hal_timebase_tim.c ****   HAL_NVIC_EnableIRQ(TIM2_IRQn); 
  48              		.loc 1 83 0
  49 000e 1C20     		movs	r0, #28
  50 0010 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  51              	.LVL4:
  52              	.LBB2:
  84:Src/stm32f1xx_hal_timebase_tim.c ****   
  85:Src/stm32f1xx_hal_timebase_tim.c ****   /* Enable TIM2 clock */
  86:Src/stm32f1xx_hal_timebase_tim.c ****   __HAL_RCC_TIM2_CLK_ENABLE();
  53              		.loc 1 86 0
  54 0014 154B     		ldr	r3, .L5
  55 0016 DA69     		ldr	r2, [r3, #28]
  56 0018 42F00102 		orr	r2, r2, #1
  57 001c DA61     		str	r2, [r3, #28]
  58 001e DB69     		ldr	r3, [r3, #28]
  59 0020 03F00103 		and	r3, r3, #1
  60 0024 0193     		str	r3, [sp, #4]
  61 0026 019B     		ldr	r3, [sp, #4]
  62              	.LBE2:
  87:Src/stm32f1xx_hal_timebase_tim.c ****   
  88:Src/stm32f1xx_hal_timebase_tim.c ****   /* Get clock configuration */
  89:Src/stm32f1xx_hal_timebase_tim.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  63              		.loc 1 89 0
  64 0028 02A9     		add	r1, sp, #8
  65 002a 03A8     		add	r0, sp, #12
  66 002c FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  67              	.LVL5:
  90:Src/stm32f1xx_hal_timebase_tim.c ****   
  91:Src/stm32f1xx_hal_timebase_tim.c ****   /* Compute TIM2 clock */
  92:Src/stm32f1xx_hal_timebase_tim.c ****   uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  68              		.loc 1 92 0
  69 0030 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
  70              	.LVL6:
  71 0034 4000     		lsls	r0, r0, #1
  72              	.LVL7:
  93:Src/stm32f1xx_hal_timebase_tim.c ****    
  94:Src/stm32f1xx_hal_timebase_tim.c ****   /* Compute the prescaler value to have TIM2 counter clock equal to 1MHz */
  95:Src/stm32f1xx_hal_timebase_tim.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
  73              		.loc 1 95 0
  74 0036 0E4B     		ldr	r3, .L5+4
  75 0038 A3FB0023 		umull	r2, r3, r3, r0
  76 003c 9B0C     		lsrs	r3, r3, #18
  77 003e 013B     		subs	r3, r3, #1
ARM GAS  /tmp/cc8fSdSQ.s 			page 4


  78              	.LVL8:
  96:Src/stm32f1xx_hal_timebase_tim.c ****   
  97:Src/stm32f1xx_hal_timebase_tim.c ****   /* Initialize TIM2 */
  98:Src/stm32f1xx_hal_timebase_tim.c ****   htim2.Instance = TIM2;
  79              		.loc 1 98 0
  80 0040 0C48     		ldr	r0, .L5+8
  81              	.LVL9:
  82 0042 4FF08042 		mov	r2, #1073741824
  83 0046 0260     		str	r2, [r0]
  99:Src/stm32f1xx_hal_timebase_tim.c ****   
 100:Src/stm32f1xx_hal_timebase_tim.c ****   /* Initialize TIMx peripheral as follow:
 101:Src/stm32f1xx_hal_timebase_tim.c ****   + Period = [(TIM2CLK/1000) - 1]. to have a (1/1000) s time base.
 102:Src/stm32f1xx_hal_timebase_tim.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
 103:Src/stm32f1xx_hal_timebase_tim.c ****   + ClockDivision = 0
 104:Src/stm32f1xx_hal_timebase_tim.c ****   + Counter direction = Up
 105:Src/stm32f1xx_hal_timebase_tim.c ****   */
 106:Src/stm32f1xx_hal_timebase_tim.c ****   htim2.Init.Period = (1000000 / 1000) - 1;
  84              		.loc 1 106 0
  85 0048 40F2E732 		movw	r2, #999
  86 004c C260     		str	r2, [r0, #12]
 107:Src/stm32f1xx_hal_timebase_tim.c ****   htim2.Init.Prescaler = uwPrescalerValue;
  87              		.loc 1 107 0
  88 004e 4360     		str	r3, [r0, #4]
 108:Src/stm32f1xx_hal_timebase_tim.c ****   htim2.Init.ClockDivision = 0;
  89              		.loc 1 108 0
  90 0050 0023     		movs	r3, #0
  91              	.LVL10:
  92 0052 0361     		str	r3, [r0, #16]
 109:Src/stm32f1xx_hal_timebase_tim.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  93              		.loc 1 109 0
  94 0054 8360     		str	r3, [r0, #8]
 110:Src/stm32f1xx_hal_timebase_tim.c ****   if(HAL_TIM_Base_Init(&htim2) == HAL_OK)
  95              		.loc 1 110 0
  96 0056 FFF7FEFF 		bl	HAL_TIM_Base_Init
  97              	.LVL11:
  98 005a 18B9     		cbnz	r0, .L3
 111:Src/stm32f1xx_hal_timebase_tim.c ****   {
 112:Src/stm32f1xx_hal_timebase_tim.c ****     /* Start the TIM time Base generation in interrupt mode */
 113:Src/stm32f1xx_hal_timebase_tim.c ****     return HAL_TIM_Base_Start_IT(&htim2);
  99              		.loc 1 113 0
 100 005c 0548     		ldr	r0, .L5+8
 101 005e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 102              	.LVL12:
 103 0062 00E0     		b	.L2
 104              	.L3:
 114:Src/stm32f1xx_hal_timebase_tim.c ****   }
 115:Src/stm32f1xx_hal_timebase_tim.c ****   
 116:Src/stm32f1xx_hal_timebase_tim.c ****   /* Return function status */
 117:Src/stm32f1xx_hal_timebase_tim.c ****   return HAL_ERROR;
 105              		.loc 1 117 0
 106 0064 0120     		movs	r0, #1
 107              	.L2:
 118:Src/stm32f1xx_hal_timebase_tim.c **** }
 108              		.loc 1 118 0
 109 0066 09B0     		add	sp, sp, #36
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cc8fSdSQ.s 			page 5


 112              		@ sp needed
 113 0068 5DF804FB 		ldr	pc, [sp], #4
 114              	.L6:
 115              		.align	2
 116              	.L5:
 117 006c 00100240 		.word	1073876992
 118 0070 83DE1B43 		.word	1125899907
 119 0074 00000000 		.word	htim2
 120              		.cfi_endproc
 121              	.LFE64:
 123              		.section	.text.HAL_SuspendTick,"ax",%progbits
 124              		.align	2
 125              		.global	HAL_SuspendTick
 126              		.thumb
 127              		.thumb_func
 129              	HAL_SuspendTick:
 130              	.LFB65:
 119:Src/stm32f1xx_hal_timebase_tim.c **** 
 120:Src/stm32f1xx_hal_timebase_tim.c **** /**
 121:Src/stm32f1xx_hal_timebase_tim.c ****   * @brief  Suspend Tick increment.
 122:Src/stm32f1xx_hal_timebase_tim.c ****   * @note   Disable the tick increment by disabling TIM2 update interrupt.
 123:Src/stm32f1xx_hal_timebase_tim.c ****   * @param  None
 124:Src/stm32f1xx_hal_timebase_tim.c ****   * @retval None
 125:Src/stm32f1xx_hal_timebase_tim.c ****   */
 126:Src/stm32f1xx_hal_timebase_tim.c **** void HAL_SuspendTick(void)
 127:Src/stm32f1xx_hal_timebase_tim.c **** {
 131              		.loc 1 127 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 128:Src/stm32f1xx_hal_timebase_tim.c ****   /* Disable TIM2 update Interrupt */
 129:Src/stm32f1xx_hal_timebase_tim.c ****   __HAL_TIM_DISABLE_IT(&htim2, TIM_IT_UPDATE);                                                  
 136              		.loc 1 129 0
 137 0000 034B     		ldr	r3, .L8
 138 0002 1A68     		ldr	r2, [r3]
 139 0004 D368     		ldr	r3, [r2, #12]
 140 0006 23F00103 		bic	r3, r3, #1
 141 000a D360     		str	r3, [r2, #12]
 142 000c 7047     		bx	lr
 143              	.L9:
 144 000e 00BF     		.align	2
 145              	.L8:
 146 0010 00000000 		.word	htim2
 147              		.cfi_endproc
 148              	.LFE65:
 150              		.section	.text.HAL_ResumeTick,"ax",%progbits
 151              		.align	2
 152              		.global	HAL_ResumeTick
 153              		.thumb
 154              		.thumb_func
 156              	HAL_ResumeTick:
 157              	.LFB66:
 130:Src/stm32f1xx_hal_timebase_tim.c **** }
 131:Src/stm32f1xx_hal_timebase_tim.c **** 
 132:Src/stm32f1xx_hal_timebase_tim.c **** /**
 133:Src/stm32f1xx_hal_timebase_tim.c ****   * @brief  Resume Tick increment.
ARM GAS  /tmp/cc8fSdSQ.s 			page 6


 134:Src/stm32f1xx_hal_timebase_tim.c ****   * @note   Enable the tick increment by Enabling TIM2 update interrupt.
 135:Src/stm32f1xx_hal_timebase_tim.c ****   * @param  None
 136:Src/stm32f1xx_hal_timebase_tim.c ****   * @retval None
 137:Src/stm32f1xx_hal_timebase_tim.c ****   */
 138:Src/stm32f1xx_hal_timebase_tim.c **** void HAL_ResumeTick(void)
 139:Src/stm32f1xx_hal_timebase_tim.c **** {
 158              		.loc 1 139 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 140:Src/stm32f1xx_hal_timebase_tim.c ****   /* Enable TIM2 Update interrupt */
 141:Src/stm32f1xx_hal_timebase_tim.c ****   __HAL_TIM_ENABLE_IT(&htim2, TIM_IT_UPDATE);
 163              		.loc 1 141 0
 164 0000 034B     		ldr	r3, .L11
 165 0002 1A68     		ldr	r2, [r3]
 166 0004 D368     		ldr	r3, [r2, #12]
 167 0006 43F00103 		orr	r3, r3, #1
 168 000a D360     		str	r3, [r2, #12]
 169 000c 7047     		bx	lr
 170              	.L12:
 171 000e 00BF     		.align	2
 172              	.L11:
 173 0010 00000000 		.word	htim2
 174              		.cfi_endproc
 175              	.LFE66:
 177              		.comm	htim2,64,4
 178              		.text
 179              	.Letext0:
 180              		.file 2 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_t
 181              		.file 3 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 182              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 183              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 184              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 185              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 186              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 187              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
 188              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/cc8fSdSQ.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_hal_timebase_tim.c
     /tmp/cc8fSdSQ.s:20     .text.HAL_InitTick:00000000 $t
     /tmp/cc8fSdSQ.s:25     .text.HAL_InitTick:00000000 HAL_InitTick
     /tmp/cc8fSdSQ.s:117    .text.HAL_InitTick:0000006c $d
                            *COM*:00000040 htim2
     /tmp/cc8fSdSQ.s:124    .text.HAL_SuspendTick:00000000 $t
     /tmp/cc8fSdSQ.s:129    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
     /tmp/cc8fSdSQ.s:146    .text.HAL_SuspendTick:00000010 $d
     /tmp/cc8fSdSQ.s:151    .text.HAL_ResumeTick:00000000 $t
     /tmp/cc8fSdSQ.s:156    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
     /tmp/cc8fSdSQ.s:173    .text.HAL_ResumeTick:00000010 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK1Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
