ARM GAS  /tmp/ccUmqCjs.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"canfilter_setup.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.canfilter_setup_first,"ax",%progbits
  20              		.align	2
  21              		.global	canfilter_setup_first
  22              		.thumb
  23              		.thumb_func
  25              	canfilter_setup_first:
  26              	.LFB69:
  27              		.file 1 "Ourwares/canfilter_setup.c"
   1:Ourwares/canfilter_setup.c **** /******************************************************************************
   2:Ourwares/canfilter_setup.c **** * File Name          : canfilter_setup.c
   3:Ourwares/canfilter_setup.c **** * Date First Issued  : 01/10/2019
   4:Ourwares/canfilter_setup.c **** * Description        : CAN FreeRTOS/ST HAL: Hardware filtering. (32b only)
   5:Ourwares/canfilter_setup.c **** *******************************************************************************/
   6:Ourwares/canfilter_setup.c **** #include "canfilter_setup.h"
   7:Ourwares/canfilter_setup.c **** 
   8:Ourwares/canfilter_setup.c **** #include "CanTask.h"
   9:Ourwares/canfilter_setup.c **** #include "can_iface.h"
  10:Ourwares/canfilter_setup.c **** 
  11:Ourwares/canfilter_setup.c **** struct CANFILTERW
  12:Ourwares/canfilter_setup.c **** {
  13:Ourwares/canfilter_setup.c **** 	CAN_FilterTypeDef filt;  // HAL filter struct
  14:Ourwares/canfilter_setup.c **** 	uint8_t banknum;         // Filter bank number: next available (pair 32b words)
  15:Ourwares/canfilter_setup.c **** 	uint8_t odd;             // Filter bank 32b reg pair, next : 0 = even, 1 = odd					
  16:Ourwares/canfilter_setup.c **** 	uint8_t oto_sw;          // OTO setup switch for struct
  17:Ourwares/canfilter_setup.c **** };
  18:Ourwares/canfilter_setup.c **** 
  19:Ourwares/canfilter_setup.c **** static struct CANFILTERW canfilt1 = {0};
  20:Ourwares/canfilter_setup.c **** static struct CANFILTERW canfilt2 = {0};
  21:Ourwares/canfilter_setup.c **** static struct CANFILTERW canfilt3 = {0};
  22:Ourwares/canfilter_setup.c **** 
  23:Ourwares/canfilter_setup.c **** /* *************************************************************************
  24:Ourwares/canfilter_setup.c ****  * HAL_StatusTypeDef canfilter_setup_first(uint8_t cannum, CAN_HandleTypeDef *phcan, uint8_t slaveb
  25:Ourwares/canfilter_setup.c ****  * @brief	: Sets Bank 0 to pass ==>all<== msgs to FIFO 0, 32b mask mode
  26:Ourwares/canfilter_setup.c ****  * @param	: cannum = CAN module number 1, 2, or 3
  27:Ourwares/canfilter_setup.c ****  * @param	: phcan = Pointer to HAL CAN handle (control block)
  28:Ourwares/canfilter_setup.c ****  * @param	: slavebankdmarc = For CAN2, filter bank number demarcation, where CAN2 banks start
  29:Ourwares/canfilter_setup.c ****  * @return	: HAL_ERROR or HAL_OK
  30:Ourwares/canfilter_setup.c ****  * *************************************************************************/
  31:Ourwares/canfilter_setup.c **** /* NOTE: 'banknum' is left at zero, odd zero, so that the next addition will override
ARM GAS  /tmp/ccUmqCjs.s 			page 2


  32:Ourwares/canfilter_setup.c ****    the "accept all" configuration of this setup.
  33:Ourwares/canfilter_setup.c **** 
  34:Ourwares/canfilter_setup.c **** 	Some of the values in the HAL struct do not need to be updated, e.g. 'FilterActivation' hence
  35:Ourwares/canfilter_setup.c ****    the call to  'first"' sets these up.
  36:Ourwares/canfilter_setup.c **** */
  37:Ourwares/canfilter_setup.c **** HAL_StatusTypeDef canfilter_setup_first(uint8_t cannum, CAN_HandleTypeDef *phcan, uint8_t slavebank
  38:Ourwares/canfilter_setup.c **** {
  28              		.loc 1 38 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 14, -4
  39:Ourwares/canfilter_setup.c **** 	struct CANFILTERW* p;
  40:Ourwares/canfilter_setup.c **** 	HAL_StatusTypeDef ret;
  41:Ourwares/canfilter_setup.c **** 
  42:Ourwares/canfilter_setup.c **** 	switch(cannum)
  40              		.loc 1 42 0
  41 0002 0228     		cmp	r0, #2
  42 0004 07D0     		beq	.L9
  43 0006 0328     		cmp	r0, #3
  44 0008 03D0     		beq	.L4
  45 000a 0128     		cmp	r0, #1
  46 000c 20D1     		bne	.L10
  43:Ourwares/canfilter_setup.c **** 	{
  44:Ourwares/canfilter_setup.c **** 	case 1:	p = &canfilt1; break; // CAN 1
  47              		.loc 1 44 0
  48 000e 114C     		ldr	r4, .L12
  49 0010 02E0     		b	.L3
  50              	.L4:
  51              	.LVL1:
  45:Ourwares/canfilter_setup.c **** 	case 2: 	p = &canfilt2; break; // CAN 2
  46:Ourwares/canfilter_setup.c **** 	case 3:	p = &canfilt3; break; // CAN 3
  52              		.loc 1 46 0
  53 0012 114C     		ldr	r4, .L12+4
  54 0014 00E0     		b	.L3
  55              	.LVL2:
  56              	.L9:
  45:Ourwares/canfilter_setup.c **** 	case 2: 	p = &canfilt2; break; // CAN 2
  57              		.loc 1 45 0
  58 0016 114C     		ldr	r4, .L12+8
  59              	.L3:
  60              	.LVL3:
  47:Ourwares/canfilter_setup.c **** 	default:		return HAL_ERROR;
  48:Ourwares/canfilter_setup.c **** 	} // CAN1 & CAN3 start at zero
  49:Ourwares/canfilter_setup.c **** 	if (cannum != 2)
  61              		.loc 1 49 0
  62 0018 0228     		cmp	r0, #2
  63 001a 02D0     		beq	.L6
  50:Ourwares/canfilter_setup.c **** 	{ // Here, CAN 1 or CAN 3
  51:Ourwares/canfilter_setup.c **** 		p->filt.FilterBank = 0;  // Filter bank number
ARM GAS  /tmp/ccUmqCjs.s 			page 3


  64              		.loc 1 51 0
  65 001c 0023     		movs	r3, #0
  66 001e 6361     		str	r3, [r4, #20]
  67 0020 00E0     		b	.L7
  68              	.L6:
  52:Ourwares/canfilter_setup.c **** 	}
  53:Ourwares/canfilter_setup.c **** 	else
  54:Ourwares/canfilter_setup.c **** 	{ // Here, CAN2 slave filter bank is shifted
  55:Ourwares/canfilter_setup.c **** 		p->filt.FilterBank = slavebankdmarc;  // CAN1-CAN2 bank demarcation
  69              		.loc 1 55 0
  70 0022 6261     		str	r2, [r4, #20]
  71              	.L7:
  72 0024 0846     		mov	r0, r1
  73              	.LVL4:
  56:Ourwares/canfilter_setup.c **** 	}
  57:Ourwares/canfilter_setup.c **** 	p->filt.FilterIdHigh         = 0;
  74              		.loc 1 57 0
  75 0026 0025     		movs	r5, #0
  76 0028 2560     		str	r5, [r4]
  58:Ourwares/canfilter_setup.c **** 	p->filt.FilterIdLow          = 0;
  77              		.loc 1 58 0
  78 002a 6560     		str	r5, [r4, #4]
  59:Ourwares/canfilter_setup.c **** 	p->filt.FilterMaskIdHigh     = 0;
  79              		.loc 1 59 0
  80 002c A560     		str	r5, [r4, #8]
  60:Ourwares/canfilter_setup.c **** 	p->filt.FilterMaskIdLow      = 0;
  81              		.loc 1 60 0
  82 002e E560     		str	r5, [r4, #12]
  61:Ourwares/canfilter_setup.c **** 	p->filt.FilterFIFOAssignment = 0;	// FIFO 0
  83              		.loc 1 61 0
  84 0030 2561     		str	r5, [r4, #16]
  62:Ourwares/canfilter_setup.c **** 	p->filt.FilterMode           = CAN_FILTERMODE_IDMASK;
  85              		.loc 1 62 0
  86 0032 A561     		str	r5, [r4, #24]
  63:Ourwares/canfilter_setup.c **** 	p->filt.FilterScale          = CAN_FILTERSCALE_32BIT;
  87              		.loc 1 63 0
  88 0034 0126     		movs	r6, #1
  89 0036 E661     		str	r6, [r4, #28]
  64:Ourwares/canfilter_setup.c **** 	p->filt.FilterActivation     = ENABLE;
  90              		.loc 1 64 0
  91 0038 2662     		str	r6, [r4, #32]
  65:Ourwares/canfilter_setup.c **** 	p->filt.SlaveStartFilterBank = slavebankdmarc; // No meaning for CAN3
  92              		.loc 1 65 0
  93 003a 6262     		str	r2, [r4, #36]
  66:Ourwares/canfilter_setup.c **** 	ret = HAL_CAN_ConfigFilter(phcan, &p->filt); // Store in hardware
  94              		.loc 1 66 0
  95 003c 2146     		mov	r1, r4
  96              	.LVL5:
  97 003e FFF7FEFF 		bl	HAL_CAN_ConfigFilter
  98              	.LVL6:
  67:Ourwares/canfilter_setup.c **** 	p->oto_sw = 1;
  99              		.loc 1 67 0
 100 0042 84F82A60 		strb	r6, [r4, #42]
  68:Ourwares/canfilter_setup.c **** 	p->banknum = 0;
 101              		.loc 1 68 0
 102 0046 84F82850 		strb	r5, [r4, #40]
  69:Ourwares/canfilter_setup.c **** 	p->odd     = 0;
ARM GAS  /tmp/ccUmqCjs.s 			page 4


 103              		.loc 1 69 0
 104 004a 84F82950 		strb	r5, [r4, #41]
  70:Ourwares/canfilter_setup.c **** 	return ret;
 105              		.loc 1 70 0
 106 004e 70BD     		pop	{r4, r5, r6, pc}
 107              	.LVL7:
 108              	.L10:
  47:Ourwares/canfilter_setup.c **** 	} // CAN1 & CAN3 start at zero
 109              		.loc 1 47 0
 110 0050 0120     		movs	r0, #1
 111              	.LVL8:
  71:Ourwares/canfilter_setup.c **** }
 112              		.loc 1 71 0
 113 0052 70BD     		pop	{r4, r5, r6, pc}
 114              	.L13:
 115              		.align	2
 116              	.L12:
 117 0054 00000000 		.word	.LANCHOR0
 118 0058 00000000 		.word	.LANCHOR2
 119 005c 00000000 		.word	.LANCHOR1
 120              		.cfi_endproc
 121              	.LFE69:
 123              		.section	.text.canfilter_setup_add32b_mskmode,"ax",%progbits
 124              		.align	2
 125              		.global	canfilter_setup_add32b_mskmode
 126              		.thumb
 127              		.thumb_func
 129              	canfilter_setup_add32b_mskmode:
 130              	.LFB70:
  72:Ourwares/canfilter_setup.c **** /* *************************************************************************
  73:Ourwares/canfilter_setup.c ****  * HAL_StatusTypeDef canfilter_setup_add32b_mskmode(uint8_t cannum, \
  74:Ourwares/canfilter_setup.c **** 	 CAN_HandleTypeDef *phcan, \
  75:Ourwares/canfilter_setup.c ****     uint32_t id,   \
  76:Ourwares/canfilter_setup.c ****     uint32_t msk,  \
  77:Ourwares/canfilter_setup.c ****     uint8_t  fifo  );
  78:Ourwares/canfilter_setup.c ****  * @brief	: Add a 32b  id and mask to a specified filter bank
  79:Ourwares/canfilter_setup.c ****  * @param	: cannum = CAN module number 1, 2, or 3
  80:Ourwares/canfilter_setup.c ****  * @param	: phcan = Pointer to HAL CAN handle (control block)
  81:Ourwares/canfilter_setup.c ****  * @param	: id    = 32b CAN id
  82:Ourwares/canfilter_setup.c ****  * @param	: msk   = 32b mask (0's are don't cares)
  83:Ourwares/canfilter_setup.c ****  * @param	: fifo  = fifo: 0 or 1
  84:Ourwares/canfilter_setup.c ****  * @return	: HAL_ERROR or HAL_OK
  85:Ourwares/canfilter_setup.c ****  * *************************************************************************/
  86:Ourwares/canfilter_setup.c **** HAL_StatusTypeDef canfilter_setup_add32b_mskmode(uint8_t cannum, \
  87:Ourwares/canfilter_setup.c **** 	 CAN_HandleTypeDef *phcan, \
  88:Ourwares/canfilter_setup.c ****     uint32_t id,   \
  89:Ourwares/canfilter_setup.c ****     uint32_t msk,  \
  90:Ourwares/canfilter_setup.c ****     uint8_t  fifo  )
  91:Ourwares/canfilter_setup.c **** {
 131              		.loc 1 91 0
 132              		.cfi_startproc
 133              		@ args = 4, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              	.LVL9:
 136 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 137              	.LCFI1:
 138              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccUmqCjs.s 			page 5


 139              		.cfi_offset 4, -24
 140              		.cfi_offset 5, -20
 141              		.cfi_offset 6, -16
 142              		.cfi_offset 7, -12
 143              		.cfi_offset 8, -8
 144              		.cfi_offset 14, -4
  92:Ourwares/canfilter_setup.c **** 	struct CANFILTERW* p;
  93:Ourwares/canfilter_setup.c **** 	HAL_StatusTypeDef ret;
  94:Ourwares/canfilter_setup.c **** 
  95:Ourwares/canfilter_setup.c **** 	switch(cannum)
 145              		.loc 1 95 0
 146 0004 0228     		cmp	r0, #2
 147 0006 07D0     		beq	.L23
 148 0008 0328     		cmp	r0, #3
 149 000a 03D0     		beq	.L17
 150 000c 0128     		cmp	r0, #1
 151 000e 3DD1     		bne	.L25
  96:Ourwares/canfilter_setup.c **** 	{
  97:Ourwares/canfilter_setup.c **** 	case 1:	p = &canfilt1; break; // CAN 1
 152              		.loc 1 97 0
 153 0010 214C     		ldr	r4, .L27
 154 0012 02E0     		b	.L16
 155              	.L17:
 156              	.LVL10:
  98:Ourwares/canfilter_setup.c **** 	case 2: 	p = &canfilt2; break; // CAN 2
  99:Ourwares/canfilter_setup.c **** 	case 3:	p = &canfilt3; break; // CAN 3
 157              		.loc 1 99 0
 158 0014 214C     		ldr	r4, .L27+4
 159 0016 00E0     		b	.L16
 160              	.LVL11:
 161              	.L23:
  98:Ourwares/canfilter_setup.c **** 	case 2: 	p = &canfilt2; break; // CAN 2
 162              		.loc 1 98 0
 163 0018 214C     		ldr	r4, .L27+8
 164              	.L16:
 165 001a 1E46     		mov	r6, r3
 166 001c 1746     		mov	r7, r2
 167 001e 8846     		mov	r8, r1
 168 0020 0546     		mov	r5, r0
 169              	.LVL12:
 100:Ourwares/canfilter_setup.c **** 	default:		return HAL_ERROR;
 101:Ourwares/canfilter_setup.c **** 	}
 102:Ourwares/canfilter_setup.c **** 
 103:Ourwares/canfilter_setup.c **** 	/* Make sure the first setup was made */
 104:Ourwares/canfilter_setup.c **** 	if (p->oto_sw == 0)
 170              		.loc 1 104 0
 171 0022 94F82A30 		ldrb	r3, [r4, #42]	@ zero_extendqisi2
 172              	.LVL13:
 173 0026 13B9     		cbnz	r3, .L19
 105:Ourwares/canfilter_setup.c **** 	{
 106:Ourwares/canfilter_setup.c **** 		canfilter_setup_first(cannum, phcan, 14);
 174              		.loc 1 106 0
 175 0028 0E22     		movs	r2, #14
 176              	.LVL14:
 177 002a FFF7FEFF 		bl	canfilter_setup_first
 178              	.LVL15:
 179              	.L19:
ARM GAS  /tmp/ccUmqCjs.s 			page 6


 107:Ourwares/canfilter_setup.c **** 	}
 108:Ourwares/canfilter_setup.c **** 
 109:Ourwares/canfilter_setup.c **** 	/* Check for bozo programmer call. */
 110:Ourwares/canfilter_setup.c **** 	if ((cannum == 2) && (p->banknum <= p->filt.SlaveStartFilterBank))
 180              		.loc 1 110 0
 181 002e 022D     		cmp	r5, #2
 182 0030 04D1     		bne	.L20
 183              		.loc 1 110 0 is_stmt 0 discriminator 1
 184 0032 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 185 0036 636A     		ldr	r3, [r4, #36]
 186 0038 9A42     		cmp	r2, r3
 187 003a 2AD9     		bls	.L24
 188              	.L20:
 111:Ourwares/canfilter_setup.c **** 	{ // Here, bank number is in CAN1 area
 112:Ourwares/canfilter_setup.c **** 		return HAL_ERROR;
 113:Ourwares/canfilter_setup.c **** 	}
 114:Ourwares/canfilter_setup.c **** 
 115:Ourwares/canfilter_setup.c **** 	/* 32b id & mask take a complete filter bank */
 116:Ourwares/canfilter_setup.c **** 	if (p->odd != 0)
 189              		.loc 1 116 0 is_stmt 1
 190 003c 94F82930 		ldrb	r3, [r4, #41]	@ zero_extendqisi2
 191 0040 3BB1     		cbz	r3, .L21
 117:Ourwares/canfilter_setup.c **** 	{ // Here one register availalbe in current banknum
 118:Ourwares/canfilter_setup.c **** 		p->banknum += 1;	// Advance to next bank
 192              		.loc 1 118 0
 193 0042 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 194 0046 0133     		adds	r3, r3, #1
 195 0048 84F82830 		strb	r3, [r4, #40]
 119:Ourwares/canfilter_setup.c **** 		p->odd = 0;
 196              		.loc 1 119 0
 197 004c 0023     		movs	r3, #0
 198 004e 84F82930 		strb	r3, [r4, #41]
 199              	.L21:
 120:Ourwares/canfilter_setup.c **** 	}
 121:Ourwares/canfilter_setup.c **** 
 122:Ourwares/canfilter_setup.c **** 	p->filt.FilterBank       = p->banknum;
 200              		.loc 1 122 0
 201 0052 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 202 0056 6361     		str	r3, [r4, #20]
 123:Ourwares/canfilter_setup.c **** 	p->filt.FilterIdHigh     = (id  >> 16) & 0xffff;
 203              		.loc 1 123 0
 204 0058 3B0C     		lsrs	r3, r7, #16
 205 005a 2360     		str	r3, [r4]
 124:Ourwares/canfilter_setup.c **** 	p->filt.FilterIdLow      = (id  >>  0) & 0xffff;
 206              		.loc 1 124 0
 207 005c BFB2     		uxth	r7, r7
 208              	.LVL16:
 209 005e 6760     		str	r7, [r4, #4]
 125:Ourwares/canfilter_setup.c **** 	p->filt.FilterMaskIdHigh = (msk >> 16) & 0xffff;
 210              		.loc 1 125 0
 211 0060 330C     		lsrs	r3, r6, #16
 212 0062 A360     		str	r3, [r4, #8]
 126:Ourwares/canfilter_setup.c **** 	p->filt.FilterMaskIdLow  = (msk >>  0) & 0xffff;
 213              		.loc 1 126 0
 214 0064 B6B2     		uxth	r6, r6
 215              	.LVL17:
 216 0066 E660     		str	r6, [r4, #12]
ARM GAS  /tmp/ccUmqCjs.s 			page 7


 127:Ourwares/canfilter_setup.c **** 	p->filt.FilterFIFOAssignment = fifo & 0x1;
 217              		.loc 1 127 0
 218 0068 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 219 006c 03F00103 		and	r3, r3, #1
 220 0070 2361     		str	r3, [r4, #16]
 128:Ourwares/canfilter_setup.c **** 	p->filt.FilterMode           = CAN_FILTERMODE_IDMASK;
 221              		.loc 1 128 0
 222 0072 0023     		movs	r3, #0
 223 0074 A361     		str	r3, [r4, #24]
 129:Ourwares/canfilter_setup.c **** 	ret = HAL_CAN_ConfigFilter(phcan, &p->filt); // Store in hardware
 224              		.loc 1 129 0
 225 0076 2146     		mov	r1, r4
 226 0078 4046     		mov	r0, r8
 227 007a FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 228              	.LVL18:
 130:Ourwares/canfilter_setup.c **** 
 131:Ourwares/canfilter_setup.c **** 	p->banknum += 1;	// Advance to next bank
 229              		.loc 1 131 0
 230 007e 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 231 0082 0133     		adds	r3, r3, #1
 232 0084 84F82830 		strb	r3, [r4, #40]
 132:Ourwares/canfilter_setup.c **** 	return ret;
 233              		.loc 1 132 0
 234 0088 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 235              	.LVL19:
 236              	.L25:
 100:Ourwares/canfilter_setup.c **** 	}
 237              		.loc 1 100 0
 238 008c 0120     		movs	r0, #1
 239              	.LVL20:
 240 008e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 241              	.LVL21:
 242              	.L24:
 112:Ourwares/canfilter_setup.c **** 	}
 243              		.loc 1 112 0
 244 0092 0120     		movs	r0, #1
 133:Ourwares/canfilter_setup.c **** }
 245              		.loc 1 133 0
 246 0094 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 247              	.LVL22:
 248              	.L28:
 249              		.align	2
 250              	.L27:
 251 0098 00000000 		.word	.LANCHOR0
 252 009c 00000000 		.word	.LANCHOR2
 253 00a0 00000000 		.word	.LANCHOR1
 254              		.cfi_endproc
 255              	.LFE70:
 257              		.section	.text.canfilter_setup_add32b_id,"ax",%progbits
 258              		.align	2
 259              		.global	canfilter_setup_add32b_id
 260              		.thumb
 261              		.thumb_func
 263              	canfilter_setup_add32b_id:
 264              	.LFB71:
 134:Ourwares/canfilter_setup.c **** 
 135:Ourwares/canfilter_setup.c **** /* *************************************************************************
ARM GAS  /tmp/ccUmqCjs.s 			page 8


 136:Ourwares/canfilter_setup.c ****  * HAL_StatusTypeDef canfilter_setup_add32b_id(uint8_t cannum, CAN_HandleTypeDef *phcan, \
 137:Ourwares/canfilter_setup.c ****     uint32_t id,   \ 
 138:Ourwares/canfilter_setup.c ****     uint8_t  fifo );
 139:Ourwares/canfilter_setup.c ****  * @brief	: Add a 32b id, advance bank number & odd/even
 140:Ourwares/canfilter_setup.c ****  * @param	: cannum = CAN module number 1, 2, or 3
 141:Ourwares/canfilter_setup.c ****  * @param	: phcan = Pointer to HAL CAN handle (control block)
 142:Ourwares/canfilter_setup.c ****  * @param	: id    = 32b CAN id
 143:Ourwares/canfilter_setup.c ****  * @param	: fifo  = fifo: 0 or 1
 144:Ourwares/canfilter_setup.c ****  * @return	: HAL_ERROR or HAL_OK
 145:Ourwares/canfilter_setup.c ****  * *************************************************************************/
 146:Ourwares/canfilter_setup.c **** HAL_StatusTypeDef canfilter_setup_add32b_id(uint8_t cannum, CAN_HandleTypeDef *phcan, \
 147:Ourwares/canfilter_setup.c ****     uint32_t id,   \
 148:Ourwares/canfilter_setup.c ****     uint8_t  fifo )
 149:Ourwares/canfilter_setup.c **** {
 265              		.loc 1 149 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              	.LVL23:
 150:Ourwares/canfilter_setup.c **** 	struct CANFILTERW* p;
 151:Ourwares/canfilter_setup.c **** 	HAL_StatusTypeDef ret;
 152:Ourwares/canfilter_setup.c **** 
 153:Ourwares/canfilter_setup.c **** 	if (phcan == NULL) return  HAL_ERROR;
 270              		.loc 1 153 0
 271 0000 0029     		cmp	r1, #0
 272 0002 49D0     		beq	.L38
 149:Ourwares/canfilter_setup.c **** 	struct CANFILTERW* p;
 273              		.loc 1 149 0
 274 0004 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 275              	.LCFI2:
 276              		.cfi_def_cfa_offset 24
 277              		.cfi_offset 4, -24
 278              		.cfi_offset 5, -20
 279              		.cfi_offset 6, -16
 280              		.cfi_offset 7, -12
 281              		.cfi_offset 8, -8
 282              		.cfi_offset 14, -4
 283 0008 8846     		mov	r8, r1
 154:Ourwares/canfilter_setup.c **** 
 155:Ourwares/canfilter_setup.c **** 	switch(cannum)
 284              		.loc 1 155 0
 285 000a 0228     		cmp	r0, #2
 286 000c 07D0     		beq	.L40
 287 000e 0328     		cmp	r0, #3
 288 0010 03D0     		beq	.L32
 289 0012 0128     		cmp	r0, #1
 290 0014 42D1     		bne	.L44
 156:Ourwares/canfilter_setup.c **** 	{
 157:Ourwares/canfilter_setup.c **** 	case 1:	p = &canfilt1; break; // CAN 1
 291              		.loc 1 157 0
 292 0016 274C     		ldr	r4, .L46
 293 0018 02E0     		b	.L31
 294              	.L32:
 295              	.LVL24:
 158:Ourwares/canfilter_setup.c **** 	case 2: 	p = &canfilt2; break; // CAN 2
 159:Ourwares/canfilter_setup.c **** 	case 3:	p = &canfilt3; break; // CAN 3
 296              		.loc 1 159 0
ARM GAS  /tmp/ccUmqCjs.s 			page 9


 297 001a 274C     		ldr	r4, .L46+4
 298 001c 00E0     		b	.L31
 299              	.LVL25:
 300              	.L40:
 158:Ourwares/canfilter_setup.c **** 	case 2: 	p = &canfilt2; break; // CAN 2
 301              		.loc 1 158 0
 302 001e 274C     		ldr	r4, .L46+8
 303              	.L31:
 304 0020 1F46     		mov	r7, r3
 305 0022 1646     		mov	r6, r2
 306 0024 0546     		mov	r5, r0
 307              	.LVL26:
 160:Ourwares/canfilter_setup.c **** 	default:		return HAL_ERROR;
 161:Ourwares/canfilter_setup.c **** 	}
 162:Ourwares/canfilter_setup.c **** 
 163:Ourwares/canfilter_setup.c **** 	/* Make sure the first setup was made */
 164:Ourwares/canfilter_setup.c **** 	if (p->oto_sw == 0)
 308              		.loc 1 164 0
 309 0026 94F82A30 		ldrb	r3, [r4, #42]	@ zero_extendqisi2
 310              	.LVL27:
 311 002a 2BB9     		cbnz	r3, .L34
 165:Ourwares/canfilter_setup.c **** 	{ // If not setup, use default for CAN2 bank demarcation
 166:Ourwares/canfilter_setup.c **** 		ret = canfilter_setup_first(cannum, phcan, 14);
 312              		.loc 1 166 0
 313 002c 0E22     		movs	r2, #14
 314              	.LVL28:
 315 002e 4146     		mov	r1, r8
 316              	.LVL29:
 317 0030 FFF7FEFF 		bl	canfilter_setup_first
 318              	.LVL30:
 167:Ourwares/canfilter_setup.c **** 		if (ret == HAL_ERROR) return HAL_ERROR;
 319              		.loc 1 167 0
 320 0034 0128     		cmp	r0, #1
 321 0036 34D0     		beq	.L41
 322              	.LVL31:
 323              	.L34:
 168:Ourwares/canfilter_setup.c **** 	}
 169:Ourwares/canfilter_setup.c **** 
 170:Ourwares/canfilter_setup.c **** 	/* Check for bad CAN1,2 bank number */
 171:Ourwares/canfilter_setup.c **** 	if ((cannum == 2) && (p->banknum <= p->filt.SlaveStartFilterBank))
 324              		.loc 1 171 0
 325 0038 022D     		cmp	r5, #2
 326 003a 04D1     		bne	.L35
 327              		.loc 1 171 0 is_stmt 0 discriminator 1
 328 003c 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 329 0040 636A     		ldr	r3, [r4, #36]
 330 0042 9A42     		cmp	r2, r3
 331 0044 30D9     		bls	.L42
 332              	.L35:
 172:Ourwares/canfilter_setup.c **** 	{ // Here, bank number is in CAN1 area, but CAN2 request
 173:Ourwares/canfilter_setup.c **** 		return HAL_ERROR;
 174:Ourwares/canfilter_setup.c **** 	}
 175:Ourwares/canfilter_setup.c **** 
 176:Ourwares/canfilter_setup.c **** 	if (p->odd != 0)
 333              		.loc 1 176 0 is_stmt 1
 334 0046 94F82930 		ldrb	r3, [r4, #41]	@ zero_extendqisi2
 335 004a 7BB1     		cbz	r3, .L36
ARM GAS  /tmp/ccUmqCjs.s 			page 10


 177:Ourwares/canfilter_setup.c **** 	{ // Here, next available is in the odd position
 178:Ourwares/canfilter_setup.c **** 
 179:Ourwares/canfilter_setup.c **** 		/* Advance one of ID (out of pair for one bank) */
 180:Ourwares/canfilter_setup.c **** 		p->odd = 0;	// Reset to even
 336              		.loc 1 180 0
 337 004c 0023     		movs	r3, #0
 338 004e 84F82930 		strb	r3, [r4, #41]
 181:Ourwares/canfilter_setup.c **** 		p->banknum += 1; // Advance bank number
 339              		.loc 1 181 0
 340 0052 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 341 0056 0133     		adds	r3, r3, #1
 342 0058 DBB2     		uxtb	r3, r3
 343 005a 84F82830 		strb	r3, [r4, #40]
 182:Ourwares/canfilter_setup.c **** 		if (p->banknum >= 28) return HAL_ERROR; // Oops check
 344              		.loc 1 182 0
 345 005e 1B2B     		cmp	r3, #27
 346 0060 25D8     		bhi	.L43
 183:Ourwares/canfilter_setup.c **** 
 184:Ourwares/canfilter_setup.c **** 		/* Setup First position of pair with ID */
 185:Ourwares/canfilter_setup.c **** 		p->filt.FilterMaskIdHigh = (id >> 16) & 0xffff;
 347              		.loc 1 185 0
 348 0062 330C     		lsrs	r3, r6, #16
 349 0064 A360     		str	r3, [r4, #8]
 186:Ourwares/canfilter_setup.c **** 		p->filt.FilterMaskIdLow  = (id >>  0) & 0xffff;
 350              		.loc 1 186 0
 351 0066 B6B2     		uxth	r6, r6
 352              	.LVL32:
 353 0068 E660     		str	r6, [r4, #12]
 354 006a 06E0     		b	.L37
 355              	.LVL33:
 356              	.L36:
 187:Ourwares/canfilter_setup.c **** 
 188:Ourwares/canfilter_setup.c **** 	}
 189:Ourwares/canfilter_setup.c **** 	else
 190:Ourwares/canfilter_setup.c **** 	{ // Here, next position is in the first/even of pair. */
 191:Ourwares/canfilter_setup.c **** 		/* Setup 2nd position of pair with ID */
 192:Ourwares/canfilter_setup.c **** 		p->filt.FilterIdHigh = (id >> 16) & 0xffff;
 357              		.loc 1 192 0
 358 006c 330C     		lsrs	r3, r6, #16
 359 006e 2360     		str	r3, [r4]
 193:Ourwares/canfilter_setup.c **** 		p->filt.FilterIdLow  = (id >>  0) & 0xffff;
 360              		.loc 1 193 0
 361 0070 B6B2     		uxth	r6, r6
 362              	.LVL34:
 363 0072 6660     		str	r6, [r4, #4]
 194:Ourwares/canfilter_setup.c **** 		p->odd = 1;
 364              		.loc 1 194 0
 365 0074 0123     		movs	r3, #1
 366 0076 84F82930 		strb	r3, [r4, #41]
 367              	.L37:
 195:Ourwares/canfilter_setup.c **** 	}
 196:Ourwares/canfilter_setup.c **** 	p->filt.FilterBank = p->banknum;
 368              		.loc 1 196 0
 369 007a 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 370 007e 6361     		str	r3, [r4, #20]
 197:Ourwares/canfilter_setup.c **** 	p->filt.FilterFIFOAssignment = fifo & 0x1;
 371              		.loc 1 197 0
ARM GAS  /tmp/ccUmqCjs.s 			page 11


 372 0080 07F00107 		and	r7, r7, #1
 373 0084 2761     		str	r7, [r4, #16]
 198:Ourwares/canfilter_setup.c **** 	p->filt.FilterMode           = CAN_FILTERMODE_IDLIST;
 374              		.loc 1 198 0
 375 0086 0123     		movs	r3, #1
 376 0088 A361     		str	r3, [r4, #24]
 199:Ourwares/canfilter_setup.c **** 	p->filt.FilterActivation     = ENABLE;
 377              		.loc 1 199 0
 378 008a 2362     		str	r3, [r4, #32]
 200:Ourwares/canfilter_setup.c **** 	ret = HAL_CAN_ConfigFilter(phcan, &p->filt); // Store in hardware
 379              		.loc 1 200 0
 380 008c 2146     		mov	r1, r4
 381 008e 4046     		mov	r0, r8
 382 0090 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 383              	.LVL35:
 201:Ourwares/canfilter_setup.c **** 
 202:Ourwares/canfilter_setup.c **** 	return ret;
 384              		.loc 1 202 0
 385 0094 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 386              	.LVL36:
 387              	.L38:
 388              	.LCFI3:
 389              		.cfi_def_cfa_offset 0
 390              		.cfi_restore 4
 391              		.cfi_restore 5
 392              		.cfi_restore 6
 393              		.cfi_restore 7
 394              		.cfi_restore 8
 395              		.cfi_restore 14
 153:Ourwares/canfilter_setup.c **** 
 396              		.loc 1 153 0
 397 0098 0120     		movs	r0, #1
 398              	.LVL37:
 203:Ourwares/canfilter_setup.c **** }
 399              		.loc 1 203 0
 400 009a 7047     		bx	lr
 401              	.LVL38:
 402              	.L44:
 403              	.LCFI4:
 404              		.cfi_def_cfa_offset 24
 405              		.cfi_offset 4, -24
 406              		.cfi_offset 5, -20
 407              		.cfi_offset 6, -16
 408              		.cfi_offset 7, -12
 409              		.cfi_offset 8, -8
 410              		.cfi_offset 14, -4
 160:Ourwares/canfilter_setup.c **** 	}
 411              		.loc 1 160 0
 412 009c 0120     		movs	r0, #1
 413              	.LVL39:
 414 009e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 415              	.LVL40:
 416              	.L41:
 167:Ourwares/canfilter_setup.c **** 	}
 417              		.loc 1 167 0
 418 00a2 0120     		movs	r0, #1
 419              	.LVL41:
ARM GAS  /tmp/ccUmqCjs.s 			page 12


 420 00a4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 421              	.LVL42:
 422              	.L42:
 173:Ourwares/canfilter_setup.c **** 	}
 423              		.loc 1 173 0
 424 00a8 0120     		movs	r0, #1
 425 00aa BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 426              	.LVL43:
 427              	.L43:
 182:Ourwares/canfilter_setup.c **** 
 428              		.loc 1 182 0
 429 00ae 0120     		movs	r0, #1
 430              		.loc 1 203 0
 431 00b0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 432              	.LVL44:
 433              	.L47:
 434              		.align	2
 435              	.L46:
 436 00b4 00000000 		.word	.LANCHOR0
 437 00b8 00000000 		.word	.LANCHOR2
 438 00bc 00000000 		.word	.LANCHOR1
 439              		.cfi_endproc
 440              	.LFE71:
 442              		.section	.bss.canfilt1,"aw",%nobits
 443              		.align	2
 444              		.set	.LANCHOR0,. + 0
 447              	canfilt1:
 448 0000 00000000 		.space	44
 448      00000000 
 448      00000000 
 448      00000000 
 448      00000000 
 449              		.section	.bss.canfilt2,"aw",%nobits
 450              		.align	2
 451              		.set	.LANCHOR1,. + 0
 454              	canfilt2:
 455 0000 00000000 		.space	44
 455      00000000 
 455      00000000 
 455      00000000 
 455      00000000 
 456              		.section	.bss.canfilt3,"aw",%nobits
 457              		.align	2
 458              		.set	.LANCHOR2,. + 0
 461              	canfilt3:
 462 0000 00000000 		.space	44
 462      00000000 
 462      00000000 
 462      00000000 
 462      00000000 
 463              		.text
 464              	.Letext0:
 465              		.file 2 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_t
 466              		.file 3 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 467              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 468              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 469              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
ARM GAS  /tmp/ccUmqCjs.s 			page 13


 470              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 471              		.file 8 "Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  /tmp/ccUmqCjs.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 canfilter_setup.c
     /tmp/ccUmqCjs.s:20     .text.canfilter_setup_first:00000000 $t
     /tmp/ccUmqCjs.s:25     .text.canfilter_setup_first:00000000 canfilter_setup_first
     /tmp/ccUmqCjs.s:117    .text.canfilter_setup_first:00000054 $d
     /tmp/ccUmqCjs.s:124    .text.canfilter_setup_add32b_mskmode:00000000 $t
     /tmp/ccUmqCjs.s:129    .text.canfilter_setup_add32b_mskmode:00000000 canfilter_setup_add32b_mskmode
     /tmp/ccUmqCjs.s:251    .text.canfilter_setup_add32b_mskmode:00000098 $d
     /tmp/ccUmqCjs.s:258    .text.canfilter_setup_add32b_id:00000000 $t
     /tmp/ccUmqCjs.s:263    .text.canfilter_setup_add32b_id:00000000 canfilter_setup_add32b_id
     /tmp/ccUmqCjs.s:436    .text.canfilter_setup_add32b_id:000000b4 $d
     /tmp/ccUmqCjs.s:443    .bss.canfilt1:00000000 $d
     /tmp/ccUmqCjs.s:447    .bss.canfilt1:00000000 canfilt1
     /tmp/ccUmqCjs.s:450    .bss.canfilt2:00000000 $d
     /tmp/ccUmqCjs.s:454    .bss.canfilt2:00000000 canfilt2
     /tmp/ccUmqCjs.s:457    .bss.canfilt3:00000000 $d
     /tmp/ccUmqCjs.s:461    .bss.canfilt3:00000000 canfilt3
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_CAN_ConfigFilter
