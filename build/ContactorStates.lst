ARM GAS  /tmp/ccBKzTW9.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ContactorStates.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.new_state,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	new_state:
  25              	.LFB81:
  26              		.file 1 "Ourtasks/ContactorStates.c"
   1:Ourtasks/ContactorStates.c **** /******************************************************************************
   2:Ourtasks/ContactorStates.c **** * File Name          : ContactorStates.c
   3:Ourtasks/ContactorStates.c **** * Date First Issued  : 07/01/2019
   4:Ourtasks/ContactorStates.c **** * Description        : States in Contactor function w STM32CubeMX w FreeRTOS
   5:Ourtasks/ContactorStates.c **** *******************************************************************************/
   6:Ourtasks/ContactorStates.c **** 
   7:Ourtasks/ContactorStates.c **** #include "FreeRTOS.h"
   8:Ourtasks/ContactorStates.c **** #include "task.h"
   9:Ourtasks/ContactorStates.c **** #include "cmsis_os.h"
  10:Ourtasks/ContactorStates.c **** #include "malloc.h"
  11:Ourtasks/ContactorStates.c **** #include "ADCTask.h"
  12:Ourtasks/ContactorStates.c **** #include "adctask.h"
  13:Ourtasks/ContactorStates.c **** 
  14:Ourtasks/ContactorStates.c **** #include "ContactorStates.h"
  15:Ourtasks/ContactorStates.c **** #include "ContactorTask.h"
  16:Ourtasks/ContactorStates.c **** #include "contactor_idx_v_struct.h"
  17:Ourtasks/ContactorStates.c **** #include "morse.h"
  18:Ourtasks/ContactorStates.c **** #include "adcparamsinit.h"
  19:Ourtasks/ContactorStates.c **** 
  20:Ourtasks/ContactorStates.c **** int dbgstmp;
  21:Ourtasks/ContactorStates.c **** 
  22:Ourtasks/ContactorStates.c **** static void transition_connecting(struct CONTACTORFUNCTION* pcf);
  23:Ourtasks/ContactorStates.c **** static void transition_disconnecting(struct CONTACTORFUNCTION* pcf);
  24:Ourtasks/ContactorStates.c **** static void new_state(struct CONTACTORFUNCTION* pcf, uint32_t newstate);
  25:Ourtasks/ContactorStates.c **** static void open_contactors(struct CONTACTORFUNCTION* pcf);
  26:Ourtasks/ContactorStates.c **** 
  27:Ourtasks/ContactorStates.c **** /* TIM4 CH3, CH4 drive Conatactor #1, #2 coils. */
  28:Ourtasks/ContactorStates.c **** extern TIM_HandleTypeDef htim4; // Needs this for autoreload period
  29:Ourtasks/ContactorStates.c **** 
  30:Ourtasks/ContactorStates.c **** 
  31:Ourtasks/ContactorStates.c **** /*
  32:Ourtasks/ContactorStates.c **** 		case DISCONNECTED:
ARM GAS  /tmp/ccBKzTW9.s 			page 2


  33:Ourtasks/ContactorStates.c **** 			ContactorStates_disconnected(pcf);
  34:Ourtasks/ContactorStates.c **** 			break;
  35:Ourtasks/ContactorStates.c **** 		case CONNECTING:
  36:Ourtasks/ContactorStates.c **** 			ContactorStates_connecting(pcf);
  37:Ourtasks/ContactorStates.c **** 			break;
  38:Ourtasks/ContactorStates.c **** 		case CONNECTED:
  39:Ourtasks/ContactorStates.c **** 			ContactorStates_connected(pcf);
  40:Ourtasks/ContactorStates.c **** 			break;
  41:Ourtasks/ContactorStates.c **** 		case FAULTING:
  42:Ourtasks/ContactorStates.c **** 			ContactorStates_faulting(pcf);
  43:Ourtasks/ContactorStates.c **** 			break;
  44:Ourtasks/ContactorStates.c **** 		case FAULTED:
  45:Ourtasks/ContactorStates.c **** 			ContactorStates_faulted(pcf);
  46:Ourtasks/ContactorStates.c **** 			break;
  47:Ourtasks/ContactorStates.c **** 		case RESETTING:
  48:Ourtasks/ContactorStates.c **** 			ContactorStates_resetting(pcf);
  49:Ourtasks/ContactorStates.c **** 			break;
  50:Ourtasks/ContactorStates.c **** 		case DISCONNECTING:
  51:Ourtasks/ContactorStates.c **** 			ContactorStates_disconnecting(pcf);
  52:Ourtasks/ContactorStates.c **** 			break;
  53:Ourtasks/ContactorStates.c **** */
  54:Ourtasks/ContactorStates.c **** /* *************************************************************************
  55:Ourtasks/ContactorStates.c ****  * @brief	: 
  56:Ourtasks/ContactorStates.c ****  * *************************************************************************/
  57:Ourtasks/ContactorStates.c **** 
  58:Ourtasks/ContactorStates.c **** void ContactorStates_otosettling_init(struct CONTACTORFUNCTION* pcf)
  59:Ourtasks/ContactorStates.c **** {
  60:Ourtasks/ContactorStates.c **** 	/* Check if uart hv readings timer timed out. */
  61:Ourtasks/ContactorStates.c **** 	if ((pcf->evstat & CNCTEVTIMER3) != 0)
  62:Ourtasks/ContactorStates.c **** 	{ // Here, keep-alive uart rx timer timed out
  63:Ourtasks/ContactorStates.c **** 		transition_faulting(pcf, NO_UART3_HV_READINGS);
  64:Ourtasks/ContactorStates.c **** 		return;
  65:Ourtasks/ContactorStates.c **** 	}
  66:Ourtasks/ContactorStates.c **** 
  67:Ourtasks/ContactorStates.c **** 	/* Delay using data for a few cycles of readings. */
  68:Ourtasks/ContactorStates.c **** 	if (pcf->hvuartctr < 50) return;
  69:Ourtasks/ContactorStates.c **** 
  70:Ourtasks/ContactorStates.c **** 	transition_disconnecting(pcf);
  71:Ourtasks/ContactorStates.c **** 	return;
  72:Ourtasks/ContactorStates.c **** }
  73:Ourtasks/ContactorStates.c **** 
  74:Ourtasks/ContactorStates.c **** 
  75:Ourtasks/ContactorStates.c **** /* ==== DISCONNECTED ======================================== */
  76:Ourtasks/ContactorStates.c **** void ContactorStates_disconnected(struct CONTACTORFUNCTION* pcf)
  77:Ourtasks/ContactorStates.c **** {
  78:Ourtasks/ContactorStates.c **** 	uint32_t tmp;
  79:Ourtasks/ContactorStates.c **** 	int16_t ret;
  80:Ourtasks/ContactorStates.c **** 
  81:Ourtasks/ContactorStates.c **** 	if ((pcf->evstat & CNCTEVTIMER1) != 0)
  82:Ourtasks/ContactorStates.c **** 	{ // Keep-alive timer timout
  83:Ourtasks/ContactorStates.c **** 		transition_faulting(pcf,KEEP_ALIVE_TIMER_TIMEOUT);	
  84:Ourtasks/ContactorStates.c **** 		return;	
  85:Ourtasks/ContactorStates.c **** 	}
  86:Ourtasks/ContactorStates.c **** 
  87:Ourtasks/ContactorStates.c **** 	/* Get rid of prior fault codes, mostly for display purposes. */
  88:Ourtasks/ContactorStates.c **** 	pcf->faultcode = NOFAULT; // Reset code
  89:Ourtasks/ContactorStates.c **** 
ARM GAS  /tmp/ccBKzTW9.s 			page 3


  90:Ourtasks/ContactorStates.c **** 	/* Update zero offset for Hall-effect current sensor. */
  91:Ourtasks/ContactorStates.c **** 	if ((pcf->evstat & CNCTEVADC) != 0)
  92:Ourtasks/ContactorStates.c **** 	{ // Here, new set of ADC readings
  93:Ourtasks/ContactorStates.c **** 		ret = ratiometric_cal_zero_CURRENTTOTAL(pcf->padc);
  94:Ourtasks/ContactorStates.c **** 		if (ret != 0)// morse_trap(55);
  95:Ourtasks/ContactorStates.c **** 		{
  96:Ourtasks/ContactorStates.c **** 			transition_faulting(pcf,HE_AUTO_ZERO_TOLERANCE_ERR);
  97:Ourtasks/ContactorStates.c **** 		}
  98:Ourtasks/ContactorStates.c **** 	}
  99:Ourtasks/ContactorStates.c **** 
 100:Ourtasks/ContactorStates.c **** 	/* Install jumper to ignore HV readings. */
 101:Ourtasks/ContactorStates.c **** 	// I/O pin shows '1' when jumper removed; '0' when present.
 102:Ourtasks/ContactorStates.c **** 	if (HAL_GPIO_ReadPin(HVBYPASSPINPORT,  HVBYPASSPINPIN) != GPIO_PIN_SET)
 103:Ourtasks/ContactorStates.c **** 	{ // Set configuration bit to skip HV reading logic
 104:Ourtasks/ContactorStates.c **** 		pcf->lc.hwconfig |= PWMNOHVSENSOR;
 105:Ourtasks/ContactorStates.c **** 	}
 106:Ourtasks/ContactorStates.c **** 	else
 107:Ourtasks/ContactorStates.c **** 	{
 108:Ourtasks/ContactorStates.c **** 		pcf->lc.hwconfig &= ~PWMNOHVSENSOR;
 109:Ourtasks/ContactorStates.c **** 	}
 110:Ourtasks/ContactorStates.c **** 
 111:Ourtasks/ContactorStates.c **** 	/* Skip HV readings and battery string voltage check if no sensor. */
 112:Ourtasks/ContactorStates.c **** 	if ((pcf->lc.hwconfig & PWMNOHVSENSOR) == 0)
 113:Ourtasks/ContactorStates.c **** 	{ // Here, configuration: HV sensor is present
 114:Ourtasks/ContactorStates.c **** 
 115:Ourtasks/ContactorStates.c **** 		if ((pcf->evstat & CNCTEVTIMER3) != 0)
 116:Ourtasks/ContactorStates.c **** 		{ // Here: Not receiving readings from uart3 sensor
 117:Ourtasks/ContactorStates.c **** 			transition_faulting(pcf,NO_UART3_HV_READINGS);
 118:Ourtasks/ContactorStates.c **** 			return;
 119:Ourtasks/ContactorStates.c **** 		}
 120:Ourtasks/ContactorStates.c **** 
 121:Ourtasks/ContactorStates.c **** 		/* Check for battery string below threshold. */
 122:Ourtasks/ContactorStates.c **** 		if (pcf->hv[IDXHV1].hv < pcf->ibattlow)
 123:Ourtasks/ContactorStates.c **** 		{ // Here, battery voltage is too low (or readings missing!)
 124:Ourtasks/ContactorStates.c **** 			transition_faulting(pcf,BATTERYLOW);
 125:Ourtasks/ContactorStates.c **** 			return;
 126:Ourtasks/ContactorStates.c **** 		}
 127:Ourtasks/ContactorStates.c **** 	}
 128:Ourtasks/ContactorStates.c **** 
 129:Ourtasks/ContactorStates.c **** 	/* Check if aux contacts match, if aux contacts present. */
 130:Ourtasks/ContactorStates.c **** 	if ((pcf->lc.hwconfig & AUX1PRESENT) != 0)
 131:Ourtasks/ContactorStates.c **** 	{ // Aux contacts are present
 132:Ourtasks/ContactorStates.c **** 		tmp = HAL_GPIO_ReadPin(AUX1_GPIO_REG,AUX1_GPIO_IN);// read i/o pin
 133:Ourtasks/ContactorStates.c **** 		if ((pcf->lc.hwconfig & AUX1SENSE) != 0)
 134:Ourtasks/ContactorStates.c **** 		{ // Reverse sense of bit
 135:Ourtasks/ContactorStates.c **** 			tmp ^= 0x1;
 136:Ourtasks/ContactorStates.c **** 		}
 137:Ourtasks/ContactorStates.c **** 		if (tmp != GPIO_PIN_RESET)
 138:Ourtasks/ContactorStates.c **** 		{ // Transition to fault state; set fault code
 139:Ourtasks/ContactorStates.c **** 			transition_faulting(pcf,CONTACTOR1_OFF_AUX1_ON);
 140:Ourtasks/ContactorStates.c **** 			return;			
 141:Ourtasks/ContactorStates.c **** 		}
 142:Ourtasks/ContactorStates.c **** 	}
 143:Ourtasks/ContactorStates.c **** 	/* Check if aux contacts match, if aux contacts present. */
 144:Ourtasks/ContactorStates.c **** 	if ((pcf->lc.hwconfig & AUX2PRESENT) != 0)
 145:Ourtasks/ContactorStates.c **** 	{ // Aux contacts are present
 146:Ourtasks/ContactorStates.c **** 		tmp = HAL_GPIO_ReadPin(AUX2_GPIO_REG,AUX2_GPIO_IN);// read i/o pin
ARM GAS  /tmp/ccBKzTW9.s 			page 4


 147:Ourtasks/ContactorStates.c **** 		if ((pcf->lc.hwconfig & AUX2SENSE) != 0)
 148:Ourtasks/ContactorStates.c **** 		{ // Reverse sense of bit
 149:Ourtasks/ContactorStates.c **** 			tmp ^= 0x1;
 150:Ourtasks/ContactorStates.c **** 		}
 151:Ourtasks/ContactorStates.c **** 		if (tmp != GPIO_PIN_RESET)
 152:Ourtasks/ContactorStates.c **** 		{ // Transition to fault state; set fault code
 153:Ourtasks/ContactorStates.c **** 			transition_faulting(pcf,CONTACTOR2_OFF_AUX2_ON); 
 154:Ourtasks/ContactorStates.c **** 			return;			
 155:Ourtasks/ContactorStates.c **** 		}
 156:Ourtasks/ContactorStates.c **** 	}
 157:Ourtasks/ContactorStates.c **** 	/* Keep-alive CAN msgs carry commands. */
 158:Ourtasks/ContactorStates.c **** 	if ((pcf->evstat & CNCTEVCMDCN) != 0)
 159:Ourtasks/ContactorStates.c **** 	{ // Here, ==> request to CONNECT <==
 160:Ourtasks/ContactorStates.c **** 		transition_connecting(pcf);
 161:Ourtasks/ContactorStates.c **** 		return;
 162:Ourtasks/ContactorStates.c **** 	}
 163:Ourtasks/ContactorStates.c **** 	/* JIC.  Be sure Updates have both coils de-energized. DMOC hw disabled */
 164:Ourtasks/ContactorStates.c **** 	pcf->outstat &= ~(CNCTOUT00K1 | CNCTOUT01K2 | CNCTOUT06KAw | CNCTOUT07KAw |
 165:Ourtasks/ContactorStates.c ****         CNCTOUT04EN);
 166:Ourtasks/ContactorStates.c **** 	pcf->outstat_prev |= (CNCTOUT00K1 | CNCTOUT01K2); // jic
 167:Ourtasks/ContactorStates.c **** 	return;
 168:Ourtasks/ContactorStates.c **** }
 169:Ourtasks/ContactorStates.c **** /* *************************************************************************
 170:Ourtasks/ContactorStates.c ****  * void ContactorStates_connecting(struct CONTACTORFUNCTION* pcf);
 171:Ourtasks/ContactorStates.c ****  * @brief	: CONNECTING state
 172:Ourtasks/ContactorStates.c ****  * *************************************************************************/
 173:Ourtasks/ContactorStates.c **** /* ===== xCONNECTING ==================================================== */
 174:Ourtasks/ContactorStates.c **** static void transition_connecting(struct CONTACTORFUNCTION* pcf)
 175:Ourtasks/ContactorStates.c **** { // Intialize disconnected state
 176:Ourtasks/ContactorStates.c **** 
 177:Ourtasks/ContactorStates.c **** 	/* Contactor configuration modes handled differently. */
 178:Ourtasks/ContactorStates.c **** 	if ((pcf->lc.hwconfig & ONECONTACTOR) == 0)
 179:Ourtasks/ContactorStates.c **** 	{ // Here, TWO CONTACTOR mode
 180:Ourtasks/ContactorStates.c **** 
 181:Ourtasks/ContactorStates.c **** 		/* Reset sub-states for connecting in this mode */
 182:Ourtasks/ContactorStates.c **** 		pcf->substateC = CONNECT_C1;
 183:Ourtasks/ContactorStates.c **** 
 184:Ourtasks/ContactorStates.c **** 		/* Set one-shot timer for contactor #1 closure delay */
 185:Ourtasks/ContactorStates.c **** 		if (pcf->close1_k == 0) morse_trap(81);
 186:Ourtasks/ContactorStates.c **** 		xTimerChangePeriod(pcf->swtimer2,pcf->close1_k, 2); 
 187:Ourtasks/ContactorStates.c **** 
 188:Ourtasks/ContactorStates.c **** 		/* Energize coil #1: Battery_string-to-DMOC+ */
 189:Ourtasks/ContactorStates.c **** 		pcf->outstat |= CNCTOUT00K1; // Energize coil during update section
 190:Ourtasks/ContactorStates.c **** 		pcf->outstat &= ~CNCTOUT06KAw; // No pwm, JIC
 191:Ourtasks/ContactorStates.c **** 	}
 192:Ourtasks/ContactorStates.c **** 	else
 193:Ourtasks/ContactorStates.c **** 	{ // Here, ONE CONTACTOR W PRE-CHG RELAY mode
 194:Ourtasks/ContactorStates.c **** 
 195:Ourtasks/ContactorStates.c **** 		/* Reset sub-states for connecting in this mode */
 196:Ourtasks/ContactorStates.c **** 		pcf->substateC = CONNECT_C1B;
 197:Ourtasks/ContactorStates.c **** 
 198:Ourtasks/ContactorStates.c **** 		/* Set one-shot timer for pre-chg relay (#2) closure delay */
 199:Ourtasks/ContactorStates.c **** 		if (pcf->close2_k == 0) morse_trap(81);
 200:Ourtasks/ContactorStates.c **** 		xTimerChangePeriod(pcf->swtimer2,pcf->close2_k, 2); 
 201:Ourtasks/ContactorStates.c **** 
 202:Ourtasks/ContactorStates.c **** 		/* Energize coil #2: (Pre-charge relay) */
 203:Ourtasks/ContactorStates.c **** 		pcf->outstat |= CNCTOUT01K2; // Energize coil during update section
ARM GAS  /tmp/ccBKzTW9.s 			page 5


 204:Ourtasks/ContactorStates.c **** 		pcf->outstat &= ~CNCTOUT07KAw; // No pwm, JIC
 205:Ourtasks/ContactorStates.c **** 	}
 206:Ourtasks/ContactorStates.c **** 	pcf->evstat &= ~CNCTEVTIMER2; // Reset sw2 timer timeout bit
 207:Ourtasks/ContactorStates.c **** 
 208:Ourtasks/ContactorStates.c **** 	/* Update main state */
 209:Ourtasks/ContactorStates.c **** 	new_state(pcf,CONNECTING);
 210:Ourtasks/ContactorStates.c **** 	return;
 211:Ourtasks/ContactorStates.c **** }
 212:Ourtasks/ContactorStates.c **** /* ====== CONNECTING ==================================================== */
 213:Ourtasks/ContactorStates.c **** void ContactorStates_connecting(struct CONTACTORFUNCTION* pcf)
 214:Ourtasks/ContactorStates.c **** {
 215:Ourtasks/ContactorStates.c **** 	uint32_t tmp;
 216:Ourtasks/ContactorStates.c **** 	int32_t stmp;
 217:Ourtasks/ContactorStates.c **** 
 218:Ourtasks/ContactorStates.c **** 	/* Terminate CONNECTED if commands are disconnect or reset. */
 219:Ourtasks/ContactorStates.c **** 	if ( ((pcf->evstat & CNCTEVCMDCN) == 0) | ((pcf->evstat & CMDRESET) != 0) ) 
 220:Ourtasks/ContactorStates.c **** 	{ // 
 221:Ourtasks/ContactorStates.c **** 		transition_disconnecting(pcf);
 222:Ourtasks/ContactorStates.c **** 	}
 223:Ourtasks/ContactorStates.c **** 
 224:Ourtasks/ContactorStates.c **** 	switch(pcf->substateC)
 225:Ourtasks/ContactorStates.c **** 	{
 226:Ourtasks/ContactorStates.c **** /* ============= TWO CONTACTOR MODE ===================================== */
 227:Ourtasks/ContactorStates.c **** 	case CONNECT_C1:  // Contactor #1 closure delay
 228:Ourtasks/ContactorStates.c **** 		if ((pcf->evstat & CNCTEVTIMER2) == 0) break;
 229:Ourtasks/ContactorStates.c **** 
 230:Ourtasks/ContactorStates.c **** 		/* Here, timer timed out, so contactor #1 should be closed. */
 231:Ourtasks/ContactorStates.c **** 
 232:Ourtasks/ContactorStates.c **** 		/* Check if aux contacts match, if aux contacts present. */
 233:Ourtasks/ContactorStates.c **** 		if ((pcf->lc.hwconfig & AUX1PRESENT) != 0)
 234:Ourtasks/ContactorStates.c **** 		{ // Aux contacts are present
 235:Ourtasks/ContactorStates.c **** 			tmp = HAL_GPIO_ReadPin(AUX1_GPIO_REG,AUX1_GPIO_IN);// read i/o pin
 236:Ourtasks/ContactorStates.c **** 			if ((pcf->lc.hwconfig & AUX1SENSE) == 1)
 237:Ourtasks/ContactorStates.c **** 			{ // Reverse sense of bit
 238:Ourtasks/ContactorStates.c **** 				tmp ^= 0x1;
 239:Ourtasks/ContactorStates.c **** 			}
 240:Ourtasks/ContactorStates.c **** 			if (tmp != GPIO_PIN_SET)
 241:Ourtasks/ContactorStates.c **** 			{ // Transition to fault state; set fault code
 242:Ourtasks/ContactorStates.c **** 				/* Aux contact says it did not close. */
 243:Ourtasks/ContactorStates.c **** 				transition_faulting(pcf,CONTACTOR1_ON_AUX1_OFF);
 244:Ourtasks/ContactorStates.c **** //morse_trap(66);
 245:Ourtasks/ContactorStates.c **** 				return;			
 246:Ourtasks/ContactorStates.c **** 			}
 247:Ourtasks/ContactorStates.c **** 		}
 248:Ourtasks/ContactorStates.c **** 
 249:Ourtasks/ContactorStates.c **** 		/* For two contactor config, we can check if it looks closed. */
 250:Ourtasks/ContactorStates.c **** 		if ((pcf->lc.hwconfig & PWMNOHVSENSOR) == 0)
 251:Ourtasks/ContactorStates.c **** 		{ // Here, configuration: HV sensor is present
 252:Ourtasks/ContactorStates.c **** 
 253:Ourtasks/ContactorStates.c **** 			if ((pcf->lc.hwconfig & ONECONTACTOR) == 0)
 254:Ourtasks/ContactorStates.c **** 			{ // Here, two contactor config, so voltage should jump up
 255:Ourtasks/ContactorStates.c **** //				if ((pcf->hv[IDXHV1].hvc - pcf->hv[IDXHV2].hvc) < pcf->ihv1mhv2max) // 
 256:Ourtasks/ContactorStates.c **** 				stmp = (pcf->hv[IDXHV1].hvc - pcf->hv[IDXHV2].hvc);
 257:Ourtasks/ContactorStates.c **** 				if (stmp < 0) stmp = -stmp;
 258:Ourtasks/ContactorStates.c **** 				if ( stmp > pcf->idiffafter ) 
 259:Ourtasks/ContactorStates.c **** 				{
 260:Ourtasks/ContactorStates.c **** 					transition_faulting(pcf,CONTACTOR1_DOES_NOT_APPEAR_CLOSED); 
ARM GAS  /tmp/ccBKzTW9.s 			page 6


 261:Ourtasks/ContactorStates.c **** //morse_trap(67);
 262:Ourtasks/ContactorStates.c **** 					return;
 263:Ourtasks/ContactorStates.c **** 				}
 264:Ourtasks/ContactorStates.c **** 			}
 265:Ourtasks/ContactorStates.c **** 			else
 266:Ourtasks/ContactorStates.c **** 			{ // One contactor configuration
 267:Ourtasks/ContactorStates.c **** 				// Voltage across contacts should be very small unless it didn't close
 268:Ourtasks/ContactorStates.c **** 				// In case calibration makes diff negative, use absolute diff
 269:Ourtasks/ContactorStates.c **** 				stmp = (pcf->hv[IDXHV1].hvc - pcf->hv[IDXHV2].hvc);
 270:Ourtasks/ContactorStates.c **** 				if (stmp < 0) stmp = -stmp;
 271:Ourtasks/ContactorStates.c **** 				if ( stmp > pcf->idiffafter ) 
 272:Ourtasks/ContactorStates.c **** 				{ // Here, something not right with contactor closing
 273:Ourtasks/ContactorStates.c **** 					transition_faulting(pcf,CONTACTOR1_CLOSED_VOLTSTOOBIG);
 274:Ourtasks/ContactorStates.c **** 					break;
 275:Ourtasks/ContactorStates.c **** 				}	
 276:Ourtasks/ContactorStates.c **** 			}
 277:Ourtasks/ContactorStates.c **** 		}
 278:Ourtasks/ContactorStates.c **** 
 279:Ourtasks/ContactorStates.c **** 		/* Here, looks good, so start a minimum pre-charge delay. */
 280:Ourtasks/ContactorStates.c **** 
 281:Ourtasks/ContactorStates.c **** 		/* If this contactor is to be PWM'ed drop down from 100%. */
 282:Ourtasks/ContactorStates.c **** 		if ((pcf->lc.hwconfig & PWMCONTACTOR1) != 0)
 283:Ourtasks/ContactorStates.c **** 		{ // TIM4 CH3 Lower PWM from 100%
 284:Ourtasks/ContactorStates.c **** 			pcf->outstat |= CNCTOUT06KAw; // Switch pwm during update section
 285:Ourtasks/ContactorStates.c **** 		}
 286:Ourtasks/ContactorStates.c **** 
 287:Ourtasks/ContactorStates.c **** 		/* Set one-shot timer for a minimum pre-charge duration. */
 288:Ourtasks/ContactorStates.c **** if (pcf->prechgmin_k == 0) morse_trap(82); // Oops! Bad initialization
 289:Ourtasks/ContactorStates.c **** 		xTimerChangePeriod(pcf->swtimer2, pcf->prechgmin_k, 2); 
 290:Ourtasks/ContactorStates.c **** 		pcf->evstat &= ~CNCTEVTIMER2;	// Clear timedout status bit 
 291:Ourtasks/ContactorStates.c **** 
 292:Ourtasks/ContactorStates.c **** 		pcf->substateC = CONNECT_C2;
 293:Ourtasks/ContactorStates.c **** 		break;
 294:Ourtasks/ContactorStates.c **** /* ...................................................................... */
 295:Ourtasks/ContactorStates.c **** 	case CONNECT_C2:  // Minimum pre-charge duration delay
 296:Ourtasks/ContactorStates.c **** 		if ((pcf->evstat & CNCTEVTIMER2) != 0)
 297:Ourtasks/ContactorStates.c **** 		{ // Minimum pre-charge time has expired.
 298:Ourtasks/ContactorStates.c **** 			if (pcf->prechgmax_k == 0) morse_trap(83); // Oops! Bad initialization
 299:Ourtasks/ContactorStates.c **** 			xTimerChangePeriod(pcf->swtimer2, pcf->prechgmax_k, 2); 
 300:Ourtasks/ContactorStates.c **** 			pcf->evstat &= ~CNCTEVTIMER2;	// Clear timedout status bit 
 301:Ourtasks/ContactorStates.c **** 			pcf->substateC = CONNECT_C3;
 302:Ourtasks/ContactorStates.c **** 			break;
 303:Ourtasks/ContactorStates.c **** 		}
 304:Ourtasks/ContactorStates.c **** 		/* Check that we are getting new hv readings. */
 305:Ourtasks/ContactorStates.c **** 		if ((pcf->evstat & CNCTEVTIMER3) != 0)
 306:Ourtasks/ContactorStates.c **** 		{ // Here, not receiving readings from uart3 sensor
 307:Ourtasks/ContactorStates.c **** 			transition_faulting(pcf,NO_UART3_HV_READINGS);
 308:Ourtasks/ContactorStates.c **** 			return;
 309:Ourtasks/ContactorStates.c **** 		}
 310:Ourtasks/ContactorStates.c **** 
 311:Ourtasks/ContactorStates.c **** 		/* Check that we are still getting keep-alive msgs. */
 312:Ourtasks/ContactorStates.c **** 		if ((pcf->evstat & CNCTEVTIMER1) != 0)
 313:Ourtasks/ContactorStates.c **** 		{ // Keep-alive timer timout
 314:Ourtasks/ContactorStates.c **** 			transition_faulting(pcf,KEEP_ALIVE_TIMER_TIMEOUT);	
 315:Ourtasks/ContactorStates.c **** 			return;	
 316:Ourtasks/ContactorStates.c **** 		}
 317:Ourtasks/ContactorStates.c **** 
ARM GAS  /tmp/ccBKzTW9.s 			page 7


 318:Ourtasks/ContactorStates.c **** 		break;
 319:Ourtasks/ContactorStates.c **** 
 320:Ourtasks/ContactorStates.c **** /* ...................................................................... */
 321:Ourtasks/ContactorStates.c **** 	case CONNECT_C3: /* Check if voltage has reached cutoff. */
 322:Ourtasks/ContactorStates.c **** 
 323:Ourtasks/ContactorStates.c **** 		/* Check that we are still getting keep-alive msgs. */
 324:Ourtasks/ContactorStates.c **** 		if ((pcf->evstat & CNCTEVTIMER1) != 0)
 325:Ourtasks/ContactorStates.c **** 		{ // Keep-alive timer timout
 326:Ourtasks/ContactorStates.c **** 			transition_faulting(pcf,KEEP_ALIVE_TIMER_TIMEOUT);	
 327:Ourtasks/ContactorStates.c **** 			return;	
 328:Ourtasks/ContactorStates.c **** 		}
 329:Ourtasks/ContactorStates.c **** 
 330:Ourtasks/ContactorStates.c **** // This may not be useful.
 331:Ourtasks/ContactorStates.c **** 		if ((pcf->evstat & CNCTEVHV) != 0)
 332:Ourtasks/ContactorStates.c **** 		{ // Here, new readings available
 333:Ourtasks/ContactorStates.c **** 			pcf->evstat &= ~CNCTEVHV; // Clear new reading bit
 334:Ourtasks/ContactorStates.c **** 		}
 335:Ourtasks/ContactorStates.c **** 
 336:Ourtasks/ContactorStates.c **** 		/* Check timeout waiting for voltage to reach threshold */
 337:Ourtasks/ContactorStates.c **** 		if ((pcf->evstat & CNCTEVTIMER2) != 0)
 338:Ourtasks/ContactorStates.c **** 		{ // Maximum pre-charge time has expired.
 339:Ourtasks/ContactorStates.c **** 			if ((pcf->lc.hwconfig & PWMNOHVSENSOR) == 0)
 340:Ourtasks/ContactorStates.c **** 			{ // Here, configuration: HV sensor is present
 341:Ourtasks/ContactorStates.c **** 				transition_faulting(pcf,PRECHGVOLT_NOTREACHED);
 342:Ourtasks/ContactorStates.c **** 				return;
 343:Ourtasks/ContactorStates.c **** 			}
 344:Ourtasks/ContactorStates.c **** 			else
 345:Ourtasks/ContactorStates.c **** 			{ // Here, no HV sensor and timer timere out. Continue
 346:Ourtasks/ContactorStates.c **** if (pcf->close2_k == 0) morse_trap(88); // Initialization mistake
 347:Ourtasks/ContactorStates.c **** 				xTimerChangePeriod(pcf->swtimer2,pcf->close2_k, 2); 
 348:Ourtasks/ContactorStates.c **** 				pcf->evstat &= ~CNCTEVTIMER2;	// Clear timedout status bit 
 349:Ourtasks/ContactorStates.c **** 				pcf->outstat |= CNCTOUT01K2;  // Energize #2 during update section
 350:Ourtasks/ContactorStates.c **** 				pcf->substateC = CONNECT_C4;  // Next substate
 351:Ourtasks/ContactorStates.c **** 				return;
 352:Ourtasks/ContactorStates.c **** 			}
 353:Ourtasks/ContactorStates.c **** 		}
 354:Ourtasks/ContactorStates.c **** 
 355:Ourtasks/ContactorStates.c **** 		/* Here, timer is still timing. Check if cutoff voltage reached */
 356:Ourtasks/ContactorStates.c **** 		if ((pcf->lc.hwconfig & PWMNOHVSENSOR) != 0)
 357:Ourtasks/ContactorStates.c **** 		{ // Here, configuration: HV sensor is NOT present
 358:Ourtasks/ContactorStates.c **** 			return; // Run until timer times out
 359:Ourtasks/ContactorStates.c **** 		}
 360:Ourtasks/ContactorStates.c **** 
 361:Ourtasks/ContactorStates.c **** 		if (pcf->hv[IDXHV3].hv < pcf->iprechgendv)
 362:Ourtasks/ContactorStates.c **** 		{ // Here, end of pre-charge. Energize contactor 2
 363:Ourtasks/ContactorStates.c **** 			pcf->outstat |= CNCTOUT01K2; // Energize #2 during update section
 364:Ourtasks/ContactorStates.c **** 
 365:Ourtasks/ContactorStates.c **** 			/* Set one-shot timer for contactor 2 closure duration. */
 366:Ourtasks/ContactorStates.c **** if (pcf->close2_k == 0) morse_trap(88); // Initialization mistake
 367:Ourtasks/ContactorStates.c **** 			xTimerChangePeriod(pcf->swtimer2,pcf->close2_k, 2); 
 368:Ourtasks/ContactorStates.c **** 			pcf->evstat &= ~CNCTEVTIMER2;	 // Clear timedout status bit 
 369:Ourtasks/ContactorStates.c **** 			pcf->substateC = CONNECT_C4;   // Next substate
 370:Ourtasks/ContactorStates.c **** 			return;
 371:Ourtasks/ContactorStates.c **** 		}
 372:Ourtasks/ContactorStates.c **** 		break;
 373:Ourtasks/ContactorStates.c **** /* ...................................................................... */
 374:Ourtasks/ContactorStates.c **** 	case CONNECT_C4:  // Contactor #2 close
ARM GAS  /tmp/ccBKzTW9.s 			page 8


 375:Ourtasks/ContactorStates.c **** 
 376:Ourtasks/ContactorStates.c **** 		/* Check that we are still getting keep-alive msgs. */
 377:Ourtasks/ContactorStates.c **** 		if ((pcf->evstat & CNCTEVTIMER1) != 0)
 378:Ourtasks/ContactorStates.c **** 		{ // Keep-alive timer timout
 379:Ourtasks/ContactorStates.c **** 			transition_faulting(pcf,KEEP_ALIVE_TIMER_TIMEOUT);	
 380:Ourtasks/ContactorStates.c **** 			return;	
 381:Ourtasks/ContactorStates.c **** 		}
 382:Ourtasks/ContactorStates.c **** 
 383:Ourtasks/ContactorStates.c **** 		if ((pcf->evstat & CNCTEVTIMER2) != 0)
 384:Ourtasks/ContactorStates.c **** 		{ // Timer2 timed out: Contactor #2 should be closed
 385:Ourtasks/ContactorStates.c **** 
 386:Ourtasks/ContactorStates.c **** 			if ((pcf->lc.hwconfig & PWMNOHVSENSOR) == 0)
 387:Ourtasks/ContactorStates.c **** 			{ // Here, configuration: HV sensor is present
 388:Ourtasks/ContactorStates.c **** 
 389:Ourtasks/ContactorStates.c **** 				// Voltage across contacts should be very small unless it didn't close
 390:Ourtasks/ContactorStates.c **** 				if ( pcf->hv[IDXHV3].hvc > pcf->idiffafter ) 
 391:Ourtasks/ContactorStates.c **** 				{ // Here, something not right with contactor closing
 392:Ourtasks/ContactorStates.c **** 					transition_faulting(pcf,CONTACTOR2_CLOSED_VOLTSTOOBIG);
 393:Ourtasks/ContactorStates.c **** 					break;
 394:Ourtasks/ContactorStates.c **** 				}
 395:Ourtasks/ContactorStates.c **** 			}
 396:Ourtasks/ContactorStates.c **** 					
 397:Ourtasks/ContactorStates.c **** 			/* If this contactor is to be PWM'ed drop down from 100%. */
 398:Ourtasks/ContactorStates.c **** 			if ((pcf->lc.hwconfig & PWMCONTACTOR1) != 0)
 399:Ourtasks/ContactorStates.c **** 			{ // TIM4 CH3 Lower PWM from 100%
 400:Ourtasks/ContactorStates.c **** 				pcf->outstat |= CNCTOUT07KAw; // Switch to lower pwm in update section
 401:Ourtasks/ContactorStates.c **** 			}
 402:Ourtasks/ContactorStates.c **** 
 403:Ourtasks/ContactorStates.c **** 			new_state(pcf,CONNECTED);
 404:Ourtasks/ContactorStates.c **** 		}
 405:Ourtasks/ContactorStates.c **** 		/* event not relevant. Continue waiting for timer2 */
 406:Ourtasks/ContactorStates.c **** 		break;
 407:Ourtasks/ContactorStates.c **** /* ============= ONE CONTACTOR MODE ===================================== */
 408:Ourtasks/ContactorStates.c **** 	case CONNECT_C1B:  // Pre-charge relay (#2) closure delay
 409:Ourtasks/ContactorStates.c **** 		if ((pcf->evstat & CNCTEVTIMER2) == 0) break;
 410:Ourtasks/ContactorStates.c **** 
 411:Ourtasks/ContactorStates.c **** 		/* Here, timer timed out, so pre-chg relay #2 is assumed closed. */
 412:Ourtasks/ContactorStates.c **** 
 413:Ourtasks/ContactorStates.c **** 		/* Check if aux contacts match, if aux contacts present. */
 414:Ourtasks/ContactorStates.c **** 		if ((pcf->lc.hwconfig & AUX2PRESENT) != 0)
 415:Ourtasks/ContactorStates.c **** 		{ // Aux contacts are present
 416:Ourtasks/ContactorStates.c **** 			tmp = HAL_GPIO_ReadPin(AUX2_GPIO_REG,AUX2_GPIO_IN);// read i/o pin
 417:Ourtasks/ContactorStates.c **** 			if ((pcf->lc.hwconfig & AUX2SENSE) == 1)
 418:Ourtasks/ContactorStates.c **** 			{ // Reverse sense of bit
 419:Ourtasks/ContactorStates.c **** 				tmp ^= 0x1;
 420:Ourtasks/ContactorStates.c **** 			}
 421:Ourtasks/ContactorStates.c **** 			if (tmp != GPIO_PIN_SET)
 422:Ourtasks/ContactorStates.c **** 			{ // Transition to fault state; set fault code
 423:Ourtasks/ContactorStates.c **** 				/* Aux contact says it did not close. */
 424:Ourtasks/ContactorStates.c **** 				transition_faulting(pcf,CONTACTOR2_ON_AUX2_OFF);
 425:Ourtasks/ContactorStates.c **** //morse_trap(66);
 426:Ourtasks/ContactorStates.c **** 				return;			
 427:Ourtasks/ContactorStates.c **** 			}
 428:Ourtasks/ContactorStates.c **** 		}
 429:Ourtasks/ContactorStates.c **** 
 430:Ourtasks/ContactorStates.c **** 		/* Start a minimum pre-charge delay. */
 431:Ourtasks/ContactorStates.c **** 
ARM GAS  /tmp/ccBKzTW9.s 			page 9


 432:Ourtasks/ContactorStates.c **** 		/* If this relay is to be PWM'ed, drop down from 100%. */
 433:Ourtasks/ContactorStates.c **** 		if ((pcf->lc.hwconfig & PWMCONTACTOR2) != 0)
 434:Ourtasks/ContactorStates.c **** 		{ // TIM4 CH2 Lower PWM from 100%
 435:Ourtasks/ContactorStates.c **** 			pcf->outstat |= CNCTOUT07KAw; // Switch pwm during update section
 436:Ourtasks/ContactorStates.c **** 		}
 437:Ourtasks/ContactorStates.c **** 
 438:Ourtasks/ContactorStates.c **** 		/* Set one-shot timer for a minimum pre-charge duration. */
 439:Ourtasks/ContactorStates.c **** if (pcf->prechgmin_k == 0) morse_trap(82); // Oops! Bad initialization
 440:Ourtasks/ContactorStates.c **** 		xTimerChangePeriod(pcf->swtimer2, pcf->prechgmin_k, 2); 
 441:Ourtasks/ContactorStates.c **** 		pcf->evstat &= ~CNCTEVTIMER2;	// Clear timedout status bit 
 442:Ourtasks/ContactorStates.c **** 
 443:Ourtasks/ContactorStates.c **** 		pcf->substateC = CONNECT_C2B;
 444:Ourtasks/ContactorStates.c **** 		break;
 445:Ourtasks/ContactorStates.c **** /* ...................................................................... */
 446:Ourtasks/ContactorStates.c **** 	case CONNECT_C2B:  // Minimum pre-charge duration delay
 447:Ourtasks/ContactorStates.c **** 		if ((pcf->evstat & CNCTEVTIMER2) != 0)
 448:Ourtasks/ContactorStates.c **** 		{ // Minimum pre-charge time has expired.
 449:Ourtasks/ContactorStates.c **** if (pcf->prechgmax_k == 0) morse_trap(83); // Oops! Bad initialization
 450:Ourtasks/ContactorStates.c **** 			xTimerChangePeriod(pcf->swtimer2, pcf->prechgmax_k, 2); 
 451:Ourtasks/ContactorStates.c **** 			pcf->evstat &= ~CNCTEVTIMER2;	// Clear timedout status bit 
 452:Ourtasks/ContactorStates.c **** 			pcf->substateC = CONNECT_C3B;
 453:Ourtasks/ContactorStates.c **** 			break;
 454:Ourtasks/ContactorStates.c **** 		}
 455:Ourtasks/ContactorStates.c **** 		/* Check that we are getting new hv readings. */
 456:Ourtasks/ContactorStates.c **** 		if ((pcf->evstat & CNCTEVTIMER3) != 0)
 457:Ourtasks/ContactorStates.c **** 		{ // Here, not receiving readings from uart3 sensor
 458:Ourtasks/ContactorStates.c **** 			transition_faulting(pcf,NO_UART3_HV_READINGS);
 459:Ourtasks/ContactorStates.c **** 			return;
 460:Ourtasks/ContactorStates.c **** 		}
 461:Ourtasks/ContactorStates.c **** 		break;
 462:Ourtasks/ContactorStates.c **** 
 463:Ourtasks/ContactorStates.c **** /* ...................................................................... */
 464:Ourtasks/ContactorStates.c **** 	case CONNECT_C3B: /* Check if voltage has reached cutoff. */
 465:Ourtasks/ContactorStates.c **** 
 466:Ourtasks/ContactorStates.c **** 		/* Check that we are still getting keep-alive msgs. */
 467:Ourtasks/ContactorStates.c **** 		if ((pcf->evstat & CNCTEVTIMER1) != 0)
 468:Ourtasks/ContactorStates.c **** 		{ // Keep-alive timer timout
 469:Ourtasks/ContactorStates.c **** 			transition_faulting(pcf,KEEP_ALIVE_TIMER_TIMEOUT);	
 470:Ourtasks/ContactorStates.c **** 			return;	
 471:Ourtasks/ContactorStates.c **** 		}
 472:Ourtasks/ContactorStates.c **** 
 473:Ourtasks/ContactorStates.c **** // This may not be useful.
 474:Ourtasks/ContactorStates.c **** 		if ((pcf->evstat & CNCTEVHV) != 0)
 475:Ourtasks/ContactorStates.c **** 		{ // Here, new readings available
 476:Ourtasks/ContactorStates.c **** 			pcf->evstat &= ~CNCTEVHV; // Clear new reading bit
 477:Ourtasks/ContactorStates.c **** 		}
 478:Ourtasks/ContactorStates.c **** 
 479:Ourtasks/ContactorStates.c **** 		/* Check timeout waiting for voltage to reach threshold */
 480:Ourtasks/ContactorStates.c **** 		if ((pcf->evstat & CNCTEVTIMER2) != 0)
 481:Ourtasks/ContactorStates.c **** 		{ // Maximum pre-charge time has expired.
 482:Ourtasks/ContactorStates.c **** 			if ((pcf->lc.hwconfig & PWMNOHVSENSOR) == 0)
 483:Ourtasks/ContactorStates.c **** 			{ // Here, configuration: HV sensor is present
 484:Ourtasks/ContactorStates.c **** 				transition_faulting(pcf,PRECHGVOLT_NOTREACHED);
 485:Ourtasks/ContactorStates.c **** 				return;
 486:Ourtasks/ContactorStates.c **** 			}
 487:Ourtasks/ContactorStates.c **** 			else
 488:Ourtasks/ContactorStates.c **** 			{
ARM GAS  /tmp/ccBKzTW9.s 			page 10


 489:Ourtasks/ContactorStates.c **** if (pcf->close1_k == 0) morse_trap(85); // Initialization mistake
 490:Ourtasks/ContactorStates.c **** 				xTimerChangePeriod(pcf->swtimer2,pcf->close1_k, 2); 
 491:Ourtasks/ContactorStates.c **** 				pcf->evstat &= ~CNCTEVTIMER2;	// Clear timedout status bit 
 492:Ourtasks/ContactorStates.c **** 				pcf->outstat |= CNCTOUT00K1; // Energize #1 during update section
 493:Ourtasks/ContactorStates.c **** 				pcf->substateC = CONNECT_C4B; // Next substate
 494:Ourtasks/ContactorStates.c **** 			}
 495:Ourtasks/ContactorStates.c **** 		}
 496:Ourtasks/ContactorStates.c **** 
 497:Ourtasks/ContactorStates.c **** 		/* Here, timer is still timing. Check if cutoff voltage reached */
 498:Ourtasks/ContactorStates.c **** 		if ((pcf->lc.hwconfig & PWMNOHVSENSOR) != 0)
 499:Ourtasks/ContactorStates.c **** 		{ // Here, configuration: HV sensor is NOT present
 500:Ourtasks/ContactorStates.c **** 			return; // Run until timer times out
 501:Ourtasks/ContactorStates.c **** 		}
 502:Ourtasks/ContactorStates.c **** 
 503:Ourtasks/ContactorStates.c **** 		stmp = (pcf->hv[IDXHV1].hvc - pcf->hv[IDXHV2].hvc);
 504:Ourtasks/ContactorStates.c **** 		if (stmp < 0) stmp = -stmp; // JIC HV2 calibration makes difference negative
 505:Ourtasks/ContactorStates.c **** dbgstmp = stmp;
 506:Ourtasks/ContactorStates.c **** 		if (stmp < pcf->iprechgendvb)
 507:Ourtasks/ContactorStates.c **** 		{ // Here, end of pre-charge.  Energize contactor 1
 508:Ourtasks/ContactorStates.c **** 			pcf->outstat |= CNCTOUT00K1; // Energize #1 during update section
 509:Ourtasks/ContactorStates.c **** 
 510:Ourtasks/ContactorStates.c **** 			/* Set one-shot timer for contactor #1 closure duration. */
 511:Ourtasks/ContactorStates.c **** if (pcf->close1_k == 0) morse_trap(85); // Initialization mistake
 512:Ourtasks/ContactorStates.c **** 			xTimerChangePeriod(pcf->swtimer2,pcf->close1_k, 2); 
 513:Ourtasks/ContactorStates.c **** 			pcf->evstat &= ~CNCTEVTIMER2;	// Clear timedout status bit 
 514:Ourtasks/ContactorStates.c **** 
 515:Ourtasks/ContactorStates.c **** 			pcf->substateC = CONNECT_C4B; // Next substate
 516:Ourtasks/ContactorStates.c **** 			return;			
 517:Ourtasks/ContactorStates.c **** 		}
 518:Ourtasks/ContactorStates.c **** 		break;
 519:Ourtasks/ContactorStates.c **** /* ...................................................................... */
 520:Ourtasks/ContactorStates.c **** 	case CONNECT_C4B:  // Contactor #1 close
 521:Ourtasks/ContactorStates.c **** 
 522:Ourtasks/ContactorStates.c **** 		/* Check that we are still getting keep-alive msgs. */
 523:Ourtasks/ContactorStates.c **** 		if ((pcf->evstat & CNCTEVTIMER1) != 0)
 524:Ourtasks/ContactorStates.c **** 		{ // Keep-alive timer timout
 525:Ourtasks/ContactorStates.c **** 			transition_faulting(pcf,KEEP_ALIVE_TIMER_TIMEOUT);	
 526:Ourtasks/ContactorStates.c **** 			return;	
 527:Ourtasks/ContactorStates.c **** 		}
 528:Ourtasks/ContactorStates.c **** 
 529:Ourtasks/ContactorStates.c **** 		if ((pcf->evstat & CNCTEVTIMER2) == 0) break;
 530:Ourtasks/ContactorStates.c **** 
 531:Ourtasks/ContactorStates.c **** 		// Timer2 timed out: Contactor #1 assumed to be closed
 532:Ourtasks/ContactorStates.c **** 
 533:Ourtasks/ContactorStates.c **** 		if ((pcf->lc.hwconfig & PWMNOHVSENSOR) == 0)
 534:Ourtasks/ContactorStates.c **** 		{ // Here, configuration: HV sensor is present
 535:Ourtasks/ContactorStates.c **** 
 536:Ourtasks/ContactorStates.c **** 			// Voltage across contacts should be very small unless it didn't close
 537:Ourtasks/ContactorStates.c **** 			// In case calibration makes diff negative, use absolute diff
 538:Ourtasks/ContactorStates.c **** 			stmp = (pcf->hv[IDXHV1].hvc - pcf->hv[IDXHV2].hvc);
 539:Ourtasks/ContactorStates.c **** 			if (stmp < 0) stmp = -stmp; // jic HV2 slightly larger than HV1
 540:Ourtasks/ContactorStates.c **** 			if ( stmp > pcf->idiffafter ) 
 541:Ourtasks/ContactorStates.c **** 			{ // Here, something not right with contactor closing
 542:Ourtasks/ContactorStates.c **** 				transition_faulting(pcf,CONTACTOR1_CLOSED_VOLTSTOOBIG);
 543:Ourtasks/ContactorStates.c **** 			}
 544:Ourtasks/ContactorStates.c **** 		}
 545:Ourtasks/ContactorStates.c **** 					
ARM GAS  /tmp/ccBKzTW9.s 			page 11


 546:Ourtasks/ContactorStates.c **** 		/* If this contactor is to be PWM'ed drop down from 100%. */
 547:Ourtasks/ContactorStates.c **** 		if ((pcf->lc.hwconfig & PWMCONTACTOR1) != 0)
 548:Ourtasks/ContactorStates.c **** 		{ // TIM4 CH3 Lower PWM from 100%
 549:Ourtasks/ContactorStates.c **** 			pcf->outstat |= CNCTOUT06KAw; // Switch to lower pwm in update section
 550:Ourtasks/ContactorStates.c **** 		}
 551:Ourtasks/ContactorStates.c **** 
 552:Ourtasks/ContactorStates.c **** 		/* Open pre-chg relay, to prevent failure from toasting pre-chg resistor. */
 553:Ourtasks/ContactorStates.c **** 		pcf->outstat &= ~CNCTOUT01K2;  // De-energize coil during update section
 554:Ourtasks/ContactorStates.c **** 		pcf->outstat &= ~CNCTOUT07KAw; // No pwm, JIC			
 555:Ourtasks/ContactorStates.c **** 
 556:Ourtasks/ContactorStates.c **** 		new_state(pcf,CONNECTED);
 557:Ourtasks/ContactorStates.c **** 		break;
 558:Ourtasks/ContactorStates.c **** 
 559:Ourtasks/ContactorStates.c **** /* LAST OF SWITCH STATEMENT */
 560:Ourtasks/ContactorStates.c **** default: morse_trap(69);break; // JIC bug trap
 561:Ourtasks/ContactorStates.c **** 	}
 562:Ourtasks/ContactorStates.c **** }
 563:Ourtasks/ContactorStates.c **** 		
 564:Ourtasks/ContactorStates.c **** /* ======= CONNECTED ==================================================== */
 565:Ourtasks/ContactorStates.c **** void ContactorStates_connected(struct CONTACTORFUNCTION* pcf)
 566:Ourtasks/ContactorStates.c **** {
 567:Ourtasks/ContactorStates.c **** 	/* Check that we are still getting keep-alive msgs. */
 568:Ourtasks/ContactorStates.c **** 	if ((pcf->evstat & CNCTEVTIMER1) != 0)
 569:Ourtasks/ContactorStates.c **** 	{ // Keep-alive timer timout
 570:Ourtasks/ContactorStates.c **** 		transition_faulting(pcf,KEEP_ALIVE_TIMER_TIMEOUT);	
 571:Ourtasks/ContactorStates.c **** 		return;	
 572:Ourtasks/ContactorStates.c **** 	}
 573:Ourtasks/ContactorStates.c **** 
 574:Ourtasks/ContactorStates.c **** 	/* Terminate CONNECTED if commands are disconnect or reset. */
 575:Ourtasks/ContactorStates.c **** 	if ( ((pcf->evstat & CNCTEVCMDCN) == 0) | ((pcf->evstat & CMDRESET) != 0) ) 
 576:Ourtasks/ContactorStates.c **** 	{ // 
 577:Ourtasks/ContactorStates.c **** 		transition_disconnecting(pcf);
 578:Ourtasks/ContactorStates.c **** 	}
 579:Ourtasks/ContactorStates.c **** 	/* Continue connection. */
 580:Ourtasks/ContactorStates.c **** 	pcf->outstat |= CNCTOUT04EN; // DMOC enabled
 581:Ourtasks/ContactorStates.c **** 	return;
 582:Ourtasks/ContactorStates.c **** }
 583:Ourtasks/ContactorStates.c **** /* ===== xDISCONNECTING ================================================= */
 584:Ourtasks/ContactorStates.c **** static void transition_disconnecting(struct CONTACTORFUNCTION* pcf)
 585:Ourtasks/ContactorStates.c **** {
 586:Ourtasks/ContactorStates.c **** 		/* Prevent opening contactors when battery current exceeds threshold. */
 587:Ourtasks/ContactorStates.c **** #ifdef WAITFORCURRENTTOSUBSIDE
 588:Ourtasks/ContactorStates.c **** /*
 589:Ourtasks/ContactorStates.c **** This code is by-passed becasue an open connection from the current sensor will
 590:Ourtasks/ContactorStates.c **** prevent the contactor from ever opening.
 591:Ourtasks/ContactorStates.c **** 
 592:Ourtasks/ContactorStates.c **** Better would be to sense the the open circuit value (which should(!) show up as
 593:Ourtasks/ContactorStates.c **** a negative pcf->padc->cur1.irk0 (the zero offset). The 'if' below with
 594:Ourtasks/ContactorStates.c **** // *** HAS NOT BEEN verified as correct!
 595:Ourtasks/ContactorStates.c **** 
 596:Ourtasks/ContactorStates.c **** The expedient solution is to simply allow opening the contactors regardless of
 597:Ourtasks/ContactorStates.c **** the current being drawn.
 598:Ourtasks/ContactorStates.c **** */
 599:Ourtasks/ContactorStates.c **** 		if (pcf->padc->cur1.iI >= 0)
 600:Ourtasks/ContactorStates.c **** 		{ // Positive current
 601:Ourtasks/ContactorStates.c **** 			if (pcf->padc->cur1.iI > pcf->icurrentdisconnect)
 602:Ourtasks/ContactorStates.c **** 			{
ARM GAS  /tmp/ccBKzTW9.s 			page 12


 603:Ourtasks/ContactorStates.c **** 				return;
 604:Ourtasks/ContactorStates.c **** 			}
 605:Ourtasks/ContactorStates.c **** 		}
 606:Ourtasks/ContactorStates.c **** 		else
 607:Ourtasks/ContactorStates.c **** 		{ // Negative current
 608:Ourtasks/ContactorStates.c **** 			if (pcf->padc->cur1.iI < -pcf->icurrentdisconnect)
 609:Ourtasks/ContactorStates.c **** 			{
 610:Ourtasks/ContactorStates.c **** 				if (pcf->padc->cur1.iI > -pcf->padc->cur1.irk0) // ***
 611:Ourtasks/ContactorStates.c **** 				return;
 612:Ourtasks/ContactorStates.c **** 			}
 613:Ourtasks/ContactorStates.c **** 		}
 614:Ourtasks/ContactorStates.c **** #endif
 615:Ourtasks/ContactorStates.c **** 		open_contactors(pcf);
 616:Ourtasks/ContactorStates.c **** 		new_state(pcf,DISCONNECTING);	
 617:Ourtasks/ContactorStates.c **** 		return;	
 618:Ourtasks/ContactorStates.c **** }
 619:Ourtasks/ContactorStates.c **** /* ===== DISCONNECTING ================================================== */
 620:Ourtasks/ContactorStates.c **** void ContactorStates_disconnecting(struct CONTACTORFUNCTION* pcf)
 621:Ourtasks/ContactorStates.c **** {
 622:Ourtasks/ContactorStates.c **** 	if ((pcf->evstat & CNCTEVTIMER2) != 0)
 623:Ourtasks/ContactorStates.c **** 	{
 624:Ourtasks/ContactorStates.c **** 			pcf->state = DISCONNECTED;
 625:Ourtasks/ContactorStates.c **** 	}		
 626:Ourtasks/ContactorStates.c **** 	/* Here, still waiting for TIMER2 to time out. */
 627:Ourtasks/ContactorStates.c **** 	return;
 628:Ourtasks/ContactorStates.c **** }
 629:Ourtasks/ContactorStates.c **** /* ===== xFAULTING ====================================================== */
 630:Ourtasks/ContactorStates.c **** void transition_faulting(struct CONTACTORFUNCTION* pcf, uint8_t fc)
 631:Ourtasks/ContactorStates.c **** {
 632:Ourtasks/ContactorStates.c **** 		open_contactors(pcf);     // Be sure to open contactors, set timer2
 633:Ourtasks/ContactorStates.c **** 		pcf->faultcode = fc;	     // Set fault code
 634:Ourtasks/ContactorStates.c **** 		new_state(pcf,FAULTING);	
 635:Ourtasks/ContactorStates.c **** 		return;	
 636:Ourtasks/ContactorStates.c **** }
 637:Ourtasks/ContactorStates.c **** /* ===== FAULTING ======================================================= */
 638:Ourtasks/ContactorStates.c **** void ContactorStates_faulting(struct CONTACTORFUNCTION* pcf)
 639:Ourtasks/ContactorStates.c **** {
 640:Ourtasks/ContactorStates.c **** 	if ((pcf->evstat & CNCTEVTIMER2) != 0)
 641:Ourtasks/ContactorStates.c **** 	{ // Timer 2 timed out, and contactors should be open
 642:Ourtasks/ContactorStates.c **** 			new_state(pcf,FAULTED);
 643:Ourtasks/ContactorStates.c **** 	}		
 644:Ourtasks/ContactorStates.c **** 	/* Here, still waiting for TIMER2 to time out. */
 645:Ourtasks/ContactorStates.c **** 	return;
 646:Ourtasks/ContactorStates.c **** }
 647:Ourtasks/ContactorStates.c **** /* ===== FAULTED ======================================================= */
 648:Ourtasks/ContactorStates.c **** void ContactorStates_faulted(struct CONTACTORFUNCTION* pcf)
 649:Ourtasks/ContactorStates.c **** {
 650:Ourtasks/ContactorStates.c **** 	if ((pcf->evstat & CNCTEVCMDRS) != 0)
 651:Ourtasks/ContactorStates.c **** 	{ // Command to RESET
 652:Ourtasks/ContactorStates.c **** 		transition_disconnecting(pcf);
 653:Ourtasks/ContactorStates.c **** 	}
 654:Ourtasks/ContactorStates.c **** 	/* Stuck in this state until Command to Reset */
 655:Ourtasks/ContactorStates.c **** 	return;
 656:Ourtasks/ContactorStates.c **** }
 657:Ourtasks/ContactorStates.c **** /* ===== RESET ========================================================= */
 658:Ourtasks/ContactorStates.c **** void ContactorStates_reset(struct CONTACTORFUNCTION* pcf)
 659:Ourtasks/ContactorStates.c **** {
ARM GAS  /tmp/ccBKzTW9.s 			page 13


 660:Ourtasks/ContactorStates.c **** 	if ((pcf->evstat & CNCTEVCMDRS) != 0)
 661:Ourtasks/ContactorStates.c **** 	{ // Command to RESET
 662:Ourtasks/ContactorStates.c **** 		pcf->faultcode = NOFAULT; // Clear fault code.
 663:Ourtasks/ContactorStates.c **** 		transition_disconnecting(pcf);
 664:Ourtasks/ContactorStates.c **** 	}
 665:Ourtasks/ContactorStates.c **** 	return;
 666:Ourtasks/ContactorStates.c **** }
 667:Ourtasks/ContactorStates.c **** /* *************************************************************************
 668:Ourtasks/ContactorStates.c ****  * static void open_contactors(struct CONTACTORFUNCTION* pcf);
 669:Ourtasks/ContactorStates.c ****  * @brief	: De-energize contactors and set time delay for opening
 670:Ourtasks/ContactorStates.c ****  * @param	: pcf = pointer to struct with "everything" for this function
 671:Ourtasks/ContactorStates.c ****  * *************************************************************************/
 672:Ourtasks/ContactorStates.c **** static void open_contactors(struct CONTACTORFUNCTION* pcf)
 673:Ourtasks/ContactorStates.c **** {
 674:Ourtasks/ContactorStates.c **** 	/* Set one-shot timer for contactors opening duration. */
 675:Ourtasks/ContactorStates.c **** 	if (pcf->open2_k > pcf->open1_k)
 676:Ourtasks/ContactorStates.c **** 	{
 677:Ourtasks/ContactorStates.c **** 		if (pcf->open2_k == 0) morse_trap(86);
 678:Ourtasks/ContactorStates.c **** 		xTimerChangePeriod(pcf->swtimer2,pcf->open2_k, 2);
 679:Ourtasks/ContactorStates.c **** 		pcf->evstat &= ~CNCTEVTIMER2;	// Clear timedout status bit 
 680:Ourtasks/ContactorStates.c **** 	} 
 681:Ourtasks/ContactorStates.c **** 	else
 682:Ourtasks/ContactorStates.c **** 	{
 683:Ourtasks/ContactorStates.c **** 		if (pcf->open1_k == 0) morse_trap(87);
 684:Ourtasks/ContactorStates.c **** 		xTimerChangePeriod(pcf->swtimer2,pcf->open1_k, 2); 
 685:Ourtasks/ContactorStates.c **** 		pcf->evstat &= ~CNCTEVTIMER2;	// Clear timedout status bit 
 686:Ourtasks/ContactorStates.c **** 	}
 687:Ourtasks/ContactorStates.c **** 
 688:Ourtasks/ContactorStates.c **** 	pcf->evstat &= ~CNCTEVTIMER2;	// Reset timeout bit 
 689:Ourtasks/ContactorStates.c **** 
 690:Ourtasks/ContactorStates.c **** 	/* De-engerize both contactors and pwm'ing if on */
 691:Ourtasks/ContactorStates.c **** 	pcf->outstat      &= ~(CNCTOUT00K1 | CNCTOUT01K2 | CNCTOUT06KAw | CNCTOUT07KAw);
 692:Ourtasks/ContactorStates.c **** 	pcf->outstat_prev |= (CNCTOUT00K1 | CNCTOUT01K2); // jic
 693:Ourtasks/ContactorStates.c **** 	return;
 694:Ourtasks/ContactorStates.c **** }
 695:Ourtasks/ContactorStates.c **** /* *************************************************************************
 696:Ourtasks/ContactorStates.c ****  * static void new_state(struct CONTACTORFUNCTION* pcf, uint32_t newstate);
 697:Ourtasks/ContactorStates.c ****  * @brief	: When there is a state change, do common things
 698:Ourtasks/ContactorStates.c ****  * @param	: pcf = pointer to struct with "everything" for this function
 699:Ourtasks/ContactorStates.c ****  * @param	: newstate = code number for the new state
 700:Ourtasks/ContactorStates.c ****  * *************************************************************************/
 701:Ourtasks/ContactorStates.c **** static void new_state(struct CONTACTORFUNCTION* pcf, uint32_t newstate)
 702:Ourtasks/ContactorStates.c **** {
  27              		.loc 1 702 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 703:Ourtasks/ContactorStates.c **** 	if (pcf->faultcode != pcf->faultcode_prev)
  33              		.loc 1 703 0
  34 0000 90F8F830 		ldrb	r3, [r0, #248]	@ zero_extendqisi2
  35 0004 90F8F920 		ldrb	r2, [r0, #249]	@ zero_extendqisi2
  36 0008 9342     		cmp	r3, r2
  37 000a 07D0     		beq	.L2
 704:Ourtasks/ContactorStates.c **** 	{
 705:Ourtasks/ContactorStates.c **** 		pcf->faultcode_prev = pcf->faultcode;
ARM GAS  /tmp/ccBKzTW9.s 			page 14


  38              		.loc 1 705 0
  39 000c 80F8F930 		strb	r3, [r0, #249]
 706:Ourtasks/ContactorStates.c **** 		pcf->outstat |= CNCTOUT05KA;	// Queue keep-alive status CAN msg
  40              		.loc 1 706 0
  41 0010 D0F8F030 		ldr	r3, [r0, #240]
  42 0014 43F02003 		orr	r3, r3, #32
  43 0018 C0F8F030 		str	r3, [r0, #240]
  44              	.L2:
 707:Ourtasks/ContactorStates.c **** 	}
 708:Ourtasks/ContactorStates.c **** 	pcf->state = newstate;
  45              		.loc 1 708 0
  46 001c 80F84412 		strb	r1, [r0, #580]
  47 0020 7047     		bx	lr
  48              		.cfi_endproc
  49              	.LFE81:
  51 0022 00BF     		.section	.text.open_contactors,"ax",%progbits
  52              		.align	2
  53              		.thumb
  54              		.thumb_func
  56              	open_contactors:
  57              	.LFB80:
 673:Ourtasks/ContactorStates.c **** 	/* Set one-shot timer for contactors opening duration. */
  58              		.loc 1 673 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              	.LVL1:
  63 0000 10B5     		push	{r4, lr}
  64              	.LCFI0:
  65              		.cfi_def_cfa_offset 8
  66              		.cfi_offset 4, -8
  67              		.cfi_offset 14, -4
  68 0002 82B0     		sub	sp, sp, #8
  69              	.LCFI1:
  70              		.cfi_def_cfa_offset 16
  71 0004 0446     		mov	r4, r0
 675:Ourtasks/ContactorStates.c **** 	{
  72              		.loc 1 675 0
  73 0006 D0F83021 		ldr	r2, [r0, #304]
  74 000a D0F82C31 		ldr	r3, [r0, #300]
  75 000e 9A42     		cmp	r2, r3
  76 0010 14D9     		bls	.L4
 677:Ourtasks/ContactorStates.c **** 		xTimerChangePeriod(pcf->swtimer2,pcf->open2_k, 2);
  77              		.loc 1 677 0
  78 0012 12B9     		cbnz	r2, .L5
 677:Ourtasks/ContactorStates.c **** 		xTimerChangePeriod(pcf->swtimer2,pcf->open2_k, 2);
  79              		.loc 1 677 0 is_stmt 0 discriminator 1
  80 0014 5620     		movs	r0, #86
  81              	.LVL2:
  82 0016 FFF7FEFF 		bl	morse_trap
  83              	.LVL3:
  84              	.L5:
 678:Ourtasks/ContactorStates.c **** 		pcf->evstat &= ~CNCTEVTIMER2;	// Clear timedout status bit 
  85              		.loc 1 678 0 is_stmt 1
  86 001a 0223     		movs	r3, #2
  87 001c 0093     		str	r3, [sp]
  88 001e 0023     		movs	r3, #0
ARM GAS  /tmp/ccBKzTW9.s 			page 15


  89 0020 D4F83021 		ldr	r2, [r4, #304]
  90 0024 0421     		movs	r1, #4
  91 0026 D4F86001 		ldr	r0, [r4, #352]
  92 002a FFF7FEFF 		bl	xTimerGenericCommand
  93              	.LVL4:
 679:Ourtasks/ContactorStates.c **** 	} 
  94              		.loc 1 679 0
  95 002e D4F8EC30 		ldr	r3, [r4, #236]
  96 0032 23F00203 		bic	r3, r3, #2
  97 0036 C4F8EC30 		str	r3, [r4, #236]
  98 003a 13E0     		b	.L6
  99              	.LVL5:
 100              	.L4:
 683:Ourtasks/ContactorStates.c **** 		xTimerChangePeriod(pcf->swtimer2,pcf->open1_k, 2); 
 101              		.loc 1 683 0
 102 003c 13B9     		cbnz	r3, .L7
 683:Ourtasks/ContactorStates.c **** 		xTimerChangePeriod(pcf->swtimer2,pcf->open1_k, 2); 
 103              		.loc 1 683 0 is_stmt 0 discriminator 1
 104 003e 5720     		movs	r0, #87
 105              	.LVL6:
 106 0040 FFF7FEFF 		bl	morse_trap
 107              	.LVL7:
 108              	.L7:
 684:Ourtasks/ContactorStates.c **** 		pcf->evstat &= ~CNCTEVTIMER2;	// Clear timedout status bit 
 109              		.loc 1 684 0 is_stmt 1
 110 0044 0223     		movs	r3, #2
 111 0046 0093     		str	r3, [sp]
 112 0048 0023     		movs	r3, #0
 113 004a D4F82C21 		ldr	r2, [r4, #300]
 114 004e 0421     		movs	r1, #4
 115 0050 D4F86001 		ldr	r0, [r4, #352]
 116 0054 FFF7FEFF 		bl	xTimerGenericCommand
 117              	.LVL8:
 685:Ourtasks/ContactorStates.c **** 	}
 118              		.loc 1 685 0
 119 0058 D4F8EC30 		ldr	r3, [r4, #236]
 120 005c 23F00203 		bic	r3, r3, #2
 121 0060 C4F8EC30 		str	r3, [r4, #236]
 122              	.L6:
 688:Ourtasks/ContactorStates.c **** 
 123              		.loc 1 688 0
 124 0064 D4F8EC30 		ldr	r3, [r4, #236]
 125 0068 23F00203 		bic	r3, r3, #2
 126 006c C4F8EC30 		str	r3, [r4, #236]
 691:Ourtasks/ContactorStates.c **** 	pcf->outstat_prev |= (CNCTOUT00K1 | CNCTOUT01K2); // jic
 127              		.loc 1 691 0
 128 0070 D4F8F030 		ldr	r3, [r4, #240]
 129 0074 23F0C303 		bic	r3, r3, #195
 130 0078 C4F8F030 		str	r3, [r4, #240]
 692:Ourtasks/ContactorStates.c **** 	return;
 131              		.loc 1 692 0
 132 007c D4F8F430 		ldr	r3, [r4, #244]
 133 0080 43F00303 		orr	r3, r3, #3
 134 0084 C4F8F430 		str	r3, [r4, #244]
 694:Ourtasks/ContactorStates.c **** /* *************************************************************************
 135              		.loc 1 694 0
 136 0088 02B0     		add	sp, sp, #8
ARM GAS  /tmp/ccBKzTW9.s 			page 16


 137              	.LCFI2:
 138              		.cfi_def_cfa_offset 8
 139              		@ sp needed
 140 008a 10BD     		pop	{r4, pc}
 141              		.cfi_endproc
 142              	.LFE80:
 144              		.section	.text.transition_disconnecting,"ax",%progbits
 145              		.align	2
 146              		.thumb
 147              		.thumb_func
 149              	transition_disconnecting:
 150              	.LFB74:
 585:Ourtasks/ContactorStates.c **** 		/* Prevent opening contactors when battery current exceeds threshold. */
 151              		.loc 1 585 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              	.LVL9:
 156 0000 10B5     		push	{r4, lr}
 157              	.LCFI3:
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 4, -8
 160              		.cfi_offset 14, -4
 161 0002 0446     		mov	r4, r0
 615:Ourtasks/ContactorStates.c **** 		new_state(pcf,DISCONNECTING);	
 162              		.loc 1 615 0
 163 0004 FFF7FEFF 		bl	open_contactors
 164              	.LVL10:
 616:Ourtasks/ContactorStates.c **** 		return;	
 165              		.loc 1 616 0
 166 0008 0621     		movs	r1, #6
 167 000a 2046     		mov	r0, r4
 168 000c FFF7FEFF 		bl	new_state
 169              	.LVL11:
 170 0010 10BD     		pop	{r4, pc}
 171              		.cfi_endproc
 172              	.LFE74:
 174 0012 00BF     		.section	.text.transition_connecting,"ax",%progbits
 175              		.align	2
 176              		.thumb
 177              		.thumb_func
 179              	transition_connecting:
 180              	.LFB71:
 175:Ourtasks/ContactorStates.c **** 
 181              		.loc 1 175 0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185              	.LVL12:
 186 0000 10B5     		push	{r4, lr}
 187              	.LCFI4:
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 4, -8
 190              		.cfi_offset 14, -4
 191 0002 82B0     		sub	sp, sp, #8
 192              	.LCFI5:
 193              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccBKzTW9.s 			page 17


 194 0004 0446     		mov	r4, r0
 178:Ourtasks/ContactorStates.c **** 	{ // Here, TWO CONTACTOR mode
 195              		.loc 1 178 0
 196 0006 8369     		ldr	r3, [r0, #24]
 197 0008 13F0100F 		tst	r3, #16
 198 000c 1BD1     		bne	.L12
 182:Ourtasks/ContactorStates.c **** 
 199              		.loc 1 182 0
 200 000e 0023     		movs	r3, #0
 201 0010 80F84532 		strb	r3, [r0, #581]
 185:Ourtasks/ContactorStates.c **** 		xTimerChangePeriod(pcf->swtimer2,pcf->close1_k, 2); 
 202              		.loc 1 185 0
 203 0014 D0F82431 		ldr	r3, [r0, #292]
 204 0018 13B9     		cbnz	r3, .L13
 185:Ourtasks/ContactorStates.c **** 		xTimerChangePeriod(pcf->swtimer2,pcf->close1_k, 2); 
 205              		.loc 1 185 0 is_stmt 0 discriminator 1
 206 001a 5120     		movs	r0, #81
 207              	.LVL13:
 208 001c FFF7FEFF 		bl	morse_trap
 209              	.LVL14:
 210              	.L13:
 186:Ourtasks/ContactorStates.c **** 
 211              		.loc 1 186 0 is_stmt 1
 212 0020 0223     		movs	r3, #2
 213 0022 0093     		str	r3, [sp]
 214 0024 0023     		movs	r3, #0
 215 0026 D4F82421 		ldr	r2, [r4, #292]
 216 002a 0421     		movs	r1, #4
 217 002c D4F86001 		ldr	r0, [r4, #352]
 218 0030 FFF7FEFF 		bl	xTimerGenericCommand
 219              	.LVL15:
 189:Ourtasks/ContactorStates.c **** 		pcf->outstat &= ~CNCTOUT06KAw; // No pwm, JIC
 220              		.loc 1 189 0
 221 0034 D4F8F030 		ldr	r3, [r4, #240]
 222 0038 43F00103 		orr	r3, r3, #1
 190:Ourtasks/ContactorStates.c **** 	}
 223              		.loc 1 190 0
 224 003c 23F04003 		bic	r3, r3, #64
 225 0040 C4F8F030 		str	r3, [r4, #240]
 226 0044 1AE0     		b	.L14
 227              	.LVL16:
 228              	.L12:
 196:Ourtasks/ContactorStates.c **** 
 229              		.loc 1 196 0
 230 0046 0423     		movs	r3, #4
 231 0048 80F84532 		strb	r3, [r0, #581]
 199:Ourtasks/ContactorStates.c **** 		xTimerChangePeriod(pcf->swtimer2,pcf->close2_k, 2); 
 232              		.loc 1 199 0
 233 004c D0F82831 		ldr	r3, [r0, #296]
 234 0050 13B9     		cbnz	r3, .L15
 199:Ourtasks/ContactorStates.c **** 		xTimerChangePeriod(pcf->swtimer2,pcf->close2_k, 2); 
 235              		.loc 1 199 0 is_stmt 0 discriminator 1
 236 0052 5120     		movs	r0, #81
 237              	.LVL17:
 238 0054 FFF7FEFF 		bl	morse_trap
 239              	.LVL18:
 240              	.L15:
ARM GAS  /tmp/ccBKzTW9.s 			page 18


 200:Ourtasks/ContactorStates.c **** 
 241              		.loc 1 200 0 is_stmt 1
 242 0058 0223     		movs	r3, #2
 243 005a 0093     		str	r3, [sp]
 244 005c 0023     		movs	r3, #0
 245 005e D4F82821 		ldr	r2, [r4, #296]
 246 0062 0421     		movs	r1, #4
 247 0064 D4F86001 		ldr	r0, [r4, #352]
 248 0068 FFF7FEFF 		bl	xTimerGenericCommand
 249              	.LVL19:
 203:Ourtasks/ContactorStates.c **** 		pcf->outstat &= ~CNCTOUT07KAw; // No pwm, JIC
 250              		.loc 1 203 0
 251 006c D4F8F030 		ldr	r3, [r4, #240]
 252 0070 43F00203 		orr	r3, r3, #2
 204:Ourtasks/ContactorStates.c **** 	}
 253              		.loc 1 204 0
 254 0074 23F08003 		bic	r3, r3, #128
 255 0078 C4F8F030 		str	r3, [r4, #240]
 256              	.L14:
 206:Ourtasks/ContactorStates.c **** 
 257              		.loc 1 206 0
 258 007c D4F8EC30 		ldr	r3, [r4, #236]
 259 0080 23F00203 		bic	r3, r3, #2
 260 0084 C4F8EC30 		str	r3, [r4, #236]
 209:Ourtasks/ContactorStates.c **** 	return;
 261              		.loc 1 209 0
 262 0088 0121     		movs	r1, #1
 263 008a 2046     		mov	r0, r4
 264 008c FFF7FEFF 		bl	new_state
 265              	.LVL20:
 211:Ourtasks/ContactorStates.c **** /* ====== CONNECTING ==================================================== */
 266              		.loc 1 211 0
 267 0090 02B0     		add	sp, sp, #8
 268              	.LCFI6:
 269              		.cfi_def_cfa_offset 8
 270              		@ sp needed
 271 0092 10BD     		pop	{r4, pc}
 272              		.cfi_endproc
 273              	.LFE71:
 275              		.section	.text.ContactorStates_disconnecting,"ax",%progbits
 276              		.align	2
 277              		.global	ContactorStates_disconnecting
 278              		.thumb
 279              		.thumb_func
 281              	ContactorStates_disconnecting:
 282              	.LFB75:
 621:Ourtasks/ContactorStates.c **** 	if ((pcf->evstat & CNCTEVTIMER2) != 0)
 283              		.loc 1 621 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 288              	.LVL21:
 622:Ourtasks/ContactorStates.c **** 	{
 289              		.loc 1 622 0
 290 0000 D0F8EC30 		ldr	r3, [r0, #236]
 291 0004 13F0020F 		tst	r3, #2
ARM GAS  /tmp/ccBKzTW9.s 			page 19


 292 0008 02D0     		beq	.L17
 624:Ourtasks/ContactorStates.c **** 	}		
 293              		.loc 1 624 0
 294 000a 0023     		movs	r3, #0
 295 000c 80F84432 		strb	r3, [r0, #580]
 296              	.L17:
 297 0010 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE75:
 301 0012 00BF     		.section	.text.transition_faulting,"ax",%progbits
 302              		.align	2
 303              		.global	transition_faulting
 304              		.thumb
 305              		.thumb_func
 307              	transition_faulting:
 308              	.LFB76:
 631:Ourtasks/ContactorStates.c **** 		open_contactors(pcf);     // Be sure to open contactors, set timer2
 309              		.loc 1 631 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              	.LVL22:
 314 0000 38B5     		push	{r3, r4, r5, lr}
 315              	.LCFI7:
 316              		.cfi_def_cfa_offset 16
 317              		.cfi_offset 3, -16
 318              		.cfi_offset 4, -12
 319              		.cfi_offset 5, -8
 320              		.cfi_offset 14, -4
 321 0002 0446     		mov	r4, r0
 322 0004 0D46     		mov	r5, r1
 632:Ourtasks/ContactorStates.c **** 		pcf->faultcode = fc;	     // Set fault code
 323              		.loc 1 632 0
 324 0006 FFF7FEFF 		bl	open_contactors
 325              	.LVL23:
 633:Ourtasks/ContactorStates.c **** 		new_state(pcf,FAULTING);	
 326              		.loc 1 633 0
 327 000a 84F8F850 		strb	r5, [r4, #248]
 634:Ourtasks/ContactorStates.c **** 		return;	
 328              		.loc 1 634 0
 329 000e 0321     		movs	r1, #3
 330 0010 2046     		mov	r0, r4
 331 0012 FFF7FEFF 		bl	new_state
 332              	.LVL24:
 333 0016 38BD     		pop	{r3, r4, r5, pc}
 334              		.cfi_endproc
 335              	.LFE76:
 337              		.section	.text.ContactorStates_otosettling_init,"ax",%progbits
 338              		.align	2
 339              		.global	ContactorStates_otosettling_init
 340              		.thumb
 341              		.thumb_func
 343              	ContactorStates_otosettling_init:
 344              	.LFB69:
  59:Ourtasks/ContactorStates.c **** 	/* Check if uart hv readings timer timed out. */
 345              		.loc 1 59 0
 346              		.cfi_startproc
ARM GAS  /tmp/ccBKzTW9.s 			page 20


 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              	.LVL25:
 350 0000 08B5     		push	{r3, lr}
 351              	.LCFI8:
 352              		.cfi_def_cfa_offset 8
 353              		.cfi_offset 3, -8
 354              		.cfi_offset 14, -4
  61:Ourtasks/ContactorStates.c **** 	{ // Here, keep-alive uart rx timer timed out
 355              		.loc 1 61 0
 356 0002 D0F8EC30 		ldr	r3, [r0, #236]
 357 0006 13F0040F 		tst	r3, #4
 358 000a 03D0     		beq	.L22
  63:Ourtasks/ContactorStates.c **** 		return;
 359              		.loc 1 63 0
 360 000c 0B21     		movs	r1, #11
 361 000e FFF7FEFF 		bl	transition_faulting
 362              	.LVL26:
  64:Ourtasks/ContactorStates.c **** 	}
 363              		.loc 1 64 0
 364 0012 08BD     		pop	{r3, pc}
 365              	.LVL27:
 366              	.L22:
  68:Ourtasks/ContactorStates.c **** 
 367              		.loc 1 68 0
 368 0014 D0F81032 		ldr	r3, [r0, #528]
 369 0018 312B     		cmp	r3, #49
 370 001a 01D9     		bls	.L21
  70:Ourtasks/ContactorStates.c **** 	return;
 371              		.loc 1 70 0
 372 001c FFF7FEFF 		bl	transition_disconnecting
 373              	.LVL28:
 374              	.L21:
 375 0020 08BD     		pop	{r3, pc}
 376              		.cfi_endproc
 377              	.LFE69:
 379 0022 00BF     		.section	.text.ContactorStates_disconnected,"ax",%progbits
 380              		.align	2
 381              		.global	ContactorStates_disconnected
 382              		.thumb
 383              		.thumb_func
 385              	ContactorStates_disconnected:
 386              	.LFB70:
  77:Ourtasks/ContactorStates.c **** 	uint32_t tmp;
 387              		.loc 1 77 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              	.LVL29:
 392 0000 10B5     		push	{r4, lr}
 393              	.LCFI9:
 394              		.cfi_def_cfa_offset 8
 395              		.cfi_offset 4, -8
 396              		.cfi_offset 14, -4
 397 0002 0446     		mov	r4, r0
  81:Ourtasks/ContactorStates.c **** 	{ // Keep-alive timer timout
 398              		.loc 1 81 0
ARM GAS  /tmp/ccBKzTW9.s 			page 21


 399 0004 D0F8EC30 		ldr	r3, [r0, #236]
 400 0008 13F0010F 		tst	r3, #1
 401 000c 03D0     		beq	.L26
  83:Ourtasks/ContactorStates.c **** 		return;	
 402              		.loc 1 83 0
 403 000e 0A21     		movs	r1, #10
 404 0010 FFF7FEFF 		bl	transition_faulting
 405              	.LVL30:
  84:Ourtasks/ContactorStates.c **** 	}
 406              		.loc 1 84 0
 407 0014 10BD     		pop	{r4, pc}
 408              	.LVL31:
 409              	.L26:
  88:Ourtasks/ContactorStates.c **** 
 410              		.loc 1 88 0
 411 0016 0022     		movs	r2, #0
 412 0018 80F8F820 		strb	r2, [r0, #248]
  91:Ourtasks/ContactorStates.c **** 	{ // Here, new set of ADC readings
 413              		.loc 1 91 0
 414 001c 13F4007F 		tst	r3, #512
 415 0020 08D0     		beq	.L28
  93:Ourtasks/ContactorStates.c **** 		if (ret != 0)// morse_trap(55);
 416              		.loc 1 93 0
 417 0022 D0F8E800 		ldr	r0, [r0, #232]
 418              	.LVL32:
 419 0026 FFF7FEFF 		bl	ratiometric_cal_zero_CURRENTTOTAL
 420              	.LVL33:
  94:Ourtasks/ContactorStates.c **** 		{
 421              		.loc 1 94 0
 422 002a 18B1     		cbz	r0, .L28
  96:Ourtasks/ContactorStates.c **** 		}
 423              		.loc 1 96 0
 424 002c 0C21     		movs	r1, #12
 425 002e 2046     		mov	r0, r4
 426              	.LVL34:
 427 0030 FFF7FEFF 		bl	transition_faulting
 428              	.LVL35:
 429              	.L28:
 102:Ourtasks/ContactorStates.c **** 	{ // Set configuration bit to skip HV reading logic
 430              		.loc 1 102 0
 431 0034 0821     		movs	r1, #8
 432 0036 3448     		ldr	r0, .L39
 433 0038 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 434              	.LVL36:
 435 003c 0128     		cmp	r0, #1
 436 003e 04D0     		beq	.L29
 104:Ourtasks/ContactorStates.c **** 	}
 437              		.loc 1 104 0
 438 0040 A369     		ldr	r3, [r4, #24]
 439 0042 43F08003 		orr	r3, r3, #128
 440 0046 A361     		str	r3, [r4, #24]
 441 0048 03E0     		b	.L30
 442              	.L29:
 108:Ourtasks/ContactorStates.c **** 	}
 443              		.loc 1 108 0
 444 004a A369     		ldr	r3, [r4, #24]
 445 004c 23F08003 		bic	r3, r3, #128
ARM GAS  /tmp/ccBKzTW9.s 			page 22


 446 0050 A361     		str	r3, [r4, #24]
 447              	.L30:
 112:Ourtasks/ContactorStates.c **** 	{ // Here, configuration: HV sensor is present
 448              		.loc 1 112 0
 449 0052 A369     		ldr	r3, [r4, #24]
 450 0054 13F0800F 		tst	r3, #128
 451 0058 14D1     		bne	.L31
 115:Ourtasks/ContactorStates.c **** 		{ // Here: Not receiving readings from uart3 sensor
 452              		.loc 1 115 0
 453 005a D4F8EC20 		ldr	r2, [r4, #236]
 454 005e 12F0040F 		tst	r2, #4
 455 0062 04D0     		beq	.L32
 117:Ourtasks/ContactorStates.c **** 			return;
 456              		.loc 1 117 0
 457 0064 0B21     		movs	r1, #11
 458 0066 2046     		mov	r0, r4
 459 0068 FFF7FEFF 		bl	transition_faulting
 460              	.LVL37:
 118:Ourtasks/ContactorStates.c **** 		}
 461              		.loc 1 118 0
 462 006c 10BD     		pop	{r4, pc}
 463              	.LVL38:
 464              	.L32:
 122:Ourtasks/ContactorStates.c **** 		{ // Here, battery voltage is too low (or readings missing!)
 465              		.loc 1 122 0
 466 006e B4F89811 		ldrh	r1, [r4, #408]
 467 0072 D4F80021 		ldr	r2, [r4, #256]
 468 0076 9142     		cmp	r1, r2
 469 0078 04D2     		bcs	.L31
 124:Ourtasks/ContactorStates.c **** 			return;
 470              		.loc 1 124 0
 471 007a 0121     		movs	r1, #1
 472 007c 2046     		mov	r0, r4
 473 007e FFF7FEFF 		bl	transition_faulting
 474              	.LVL39:
 125:Ourtasks/ContactorStates.c **** 		}
 475              		.loc 1 125 0
 476 0082 10BD     		pop	{r4, pc}
 477              	.LVL40:
 478              	.L31:
 130:Ourtasks/ContactorStates.c **** 	{ // Aux contacts are present
 479              		.loc 1 130 0
 480 0084 13F0010F 		tst	r3, #1
 481 0088 11D0     		beq	.L33
 132:Ourtasks/ContactorStates.c **** 		if ((pcf->lc.hwconfig & AUX1SENSE) != 0)
 482              		.loc 1 132 0
 483 008a 0221     		movs	r1, #2
 484 008c 1E48     		ldr	r0, .L39
 485 008e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 486              	.LVL41:
 487 0092 0346     		mov	r3, r0
 488              	.LVL42:
 133:Ourtasks/ContactorStates.c **** 		{ // Reverse sense of bit
 489              		.loc 1 133 0
 490 0094 A269     		ldr	r2, [r4, #24]
 491 0096 12F0020F 		tst	r2, #2
 492 009a 02D0     		beq	.L34
ARM GAS  /tmp/ccBKzTW9.s 			page 23


 135:Ourtasks/ContactorStates.c **** 		}
 493              		.loc 1 135 0
 494 009c 80F00100 		eor	r0, r0, #1
 495              	.LVL43:
 496 00a0 C3B2     		uxtb	r3, r0
 497              	.LVL44:
 498              	.L34:
 137:Ourtasks/ContactorStates.c **** 		{ // Transition to fault state; set fault code
 499              		.loc 1 137 0
 500 00a2 23B1     		cbz	r3, .L33
 139:Ourtasks/ContactorStates.c **** 			return;			
 501              		.loc 1 139 0
 502 00a4 0221     		movs	r1, #2
 503 00a6 2046     		mov	r0, r4
 504 00a8 FFF7FEFF 		bl	transition_faulting
 505              	.LVL45:
 140:Ourtasks/ContactorStates.c **** 		}
 506              		.loc 1 140 0
 507 00ac 10BD     		pop	{r4, pc}
 508              	.LVL46:
 509              	.L33:
 144:Ourtasks/ContactorStates.c **** 	{ // Aux contacts are present
 510              		.loc 1 144 0
 511 00ae A369     		ldr	r3, [r4, #24]
 512 00b0 13F0040F 		tst	r3, #4
 513 00b4 11D0     		beq	.L35
 146:Ourtasks/ContactorStates.c **** 		if ((pcf->lc.hwconfig & AUX2SENSE) != 0)
 514              		.loc 1 146 0
 515 00b6 2021     		movs	r1, #32
 516 00b8 1348     		ldr	r0, .L39
 517 00ba FFF7FEFF 		bl	HAL_GPIO_ReadPin
 518              	.LVL47:
 519 00be 0346     		mov	r3, r0
 520              	.LVL48:
 147:Ourtasks/ContactorStates.c **** 		{ // Reverse sense of bit
 521              		.loc 1 147 0
 522 00c0 A269     		ldr	r2, [r4, #24]
 523 00c2 12F0080F 		tst	r2, #8
 524 00c6 02D0     		beq	.L36
 149:Ourtasks/ContactorStates.c **** 		}
 525              		.loc 1 149 0
 526 00c8 80F00100 		eor	r0, r0, #1
 527              	.LVL49:
 528 00cc C3B2     		uxtb	r3, r0
 529              	.LVL50:
 530              	.L36:
 151:Ourtasks/ContactorStates.c **** 		{ // Transition to fault state; set fault code
 531              		.loc 1 151 0
 532 00ce 23B1     		cbz	r3, .L35
 153:Ourtasks/ContactorStates.c **** 			return;			
 533              		.loc 1 153 0
 534 00d0 0321     		movs	r1, #3
 535 00d2 2046     		mov	r0, r4
 536 00d4 FFF7FEFF 		bl	transition_faulting
 537              	.LVL51:
 154:Ourtasks/ContactorStates.c **** 		}
 538              		.loc 1 154 0
ARM GAS  /tmp/ccBKzTW9.s 			page 24


 539 00d8 10BD     		pop	{r4, pc}
 540              	.LVL52:
 541              	.L35:
 158:Ourtasks/ContactorStates.c **** 	{ // Here, ==> request to CONNECT <==
 542              		.loc 1 158 0
 543 00da D4F8EC30 		ldr	r3, [r4, #236]
 544 00de 13F0800F 		tst	r3, #128
 545 00e2 03D0     		beq	.L37
 160:Ourtasks/ContactorStates.c **** 		return;
 546              		.loc 1 160 0
 547 00e4 2046     		mov	r0, r4
 548 00e6 FFF7FEFF 		bl	transition_connecting
 549              	.LVL53:
 161:Ourtasks/ContactorStates.c **** 	}
 550              		.loc 1 161 0
 551 00ea 10BD     		pop	{r4, pc}
 552              	.LVL54:
 553              	.L37:
 164:Ourtasks/ContactorStates.c ****         CNCTOUT04EN);
 554              		.loc 1 164 0
 555 00ec D4F8F030 		ldr	r3, [r4, #240]
 556 00f0 23F0D303 		bic	r3, r3, #211
 557 00f4 C4F8F030 		str	r3, [r4, #240]
 166:Ourtasks/ContactorStates.c **** 	return;
 558              		.loc 1 166 0
 559 00f8 D4F8F430 		ldr	r3, [r4, #244]
 560 00fc 43F00303 		orr	r3, r3, #3
 561 0100 C4F8F430 		str	r3, [r4, #244]
 562 0104 10BD     		pop	{r4, pc}
 563              	.LVL55:
 564              	.L40:
 565 0106 00BF     		.align	2
 566              	.L39:
 567 0108 00080140 		.word	1073809408
 568              		.cfi_endproc
 569              	.LFE70:
 571              		.section	.text.ContactorStates_connecting,"ax",%progbits
 572              		.align	2
 573              		.global	ContactorStates_connecting
 574              		.thumb
 575              		.thumb_func
 577              	ContactorStates_connecting:
 578              	.LFB72:
 214:Ourtasks/ContactorStates.c **** 	uint32_t tmp;
 579              		.loc 1 214 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583              	.LVL56:
 584 0000 30B5     		push	{r4, r5, lr}
 585              	.LCFI10:
 586              		.cfi_def_cfa_offset 12
 587              		.cfi_offset 4, -12
 588              		.cfi_offset 5, -8
 589              		.cfi_offset 14, -4
 590 0002 83B0     		sub	sp, sp, #12
 591              	.LCFI11:
ARM GAS  /tmp/ccBKzTW9.s 			page 25


 592              		.cfi_def_cfa_offset 24
 593 0004 0446     		mov	r4, r0
 219:Ourtasks/ContactorStates.c **** 	{ // 
 594              		.loc 1 219 0
 595 0006 D0F8EC30 		ldr	r3, [r0, #236]
 596 000a 03F0C003 		and	r3, r3, #192
 597 000e 802B     		cmp	r3, #128
 598 0010 01D0     		beq	.L42
 221:Ourtasks/ContactorStates.c **** 	}
 599              		.loc 1 221 0
 600 0012 FFF7FEFF 		bl	transition_disconnecting
 601              	.LVL57:
 602              	.L42:
 224:Ourtasks/ContactorStates.c **** 	{
 603              		.loc 1 224 0
 604 0016 94F84532 		ldrb	r3, [r4, #581]	@ zero_extendqisi2
 605 001a 072B     		cmp	r3, #7
 606 001c 00F23582 		bhi	.L43
 607 0020 DFE813F0 		tbh	[pc, r3, lsl #1]
 608              	.L45:
 609 0024 0800     		.2byte	(.L44-.L45)/2
 610 0026 6700     		.2byte	(.L46-.L45)/2
 611 0028 9600     		.2byte	(.L47-.L45)/2
 612 002a 0101     		.2byte	(.L48-.L45)/2
 613 002c 2C01     		.2byte	(.L49-.L45)/2
 614 002e 6501     		.2byte	(.L50-.L45)/2
 615 0030 8D01     		.2byte	(.L51-.L45)/2
 616 0032 FE01     		.2byte	(.L52-.L45)/2
 617              		.p2align 1
 618              	.L44:
 228:Ourtasks/ContactorStates.c **** 
 619              		.loc 1 228 0
 620 0034 D4F8EC30 		ldr	r3, [r4, #236]
 621 0038 13F0020F 		tst	r3, #2
 622 003c 00F02882 		beq	.L41
 233:Ourtasks/ContactorStates.c **** 		{ // Aux contacts are present
 623              		.loc 1 233 0
 624 0040 A369     		ldr	r3, [r4, #24]
 625 0042 13F0010F 		tst	r3, #1
 626 0046 0AD0     		beq	.L54
 235:Ourtasks/ContactorStates.c **** 			if ((pcf->lc.hwconfig & AUX1SENSE) == 1)
 627              		.loc 1 235 0
 628 0048 0221     		movs	r1, #2
 629 004a CC48     		ldr	r0, .L90
 630 004c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 631              	.LVL58:
 240:Ourtasks/ContactorStates.c **** 			{ // Transition to fault state; set fault code
 632              		.loc 1 240 0
 633 0050 0128     		cmp	r0, #1
 634 0052 04D0     		beq	.L54
 243:Ourtasks/ContactorStates.c **** //morse_trap(66);
 635              		.loc 1 243 0
 636 0054 0421     		movs	r1, #4
 637 0056 2046     		mov	r0, r4
 638              	.LVL59:
 639 0058 FFF7FEFF 		bl	transition_faulting
 640              	.LVL60:
ARM GAS  /tmp/ccBKzTW9.s 			page 26


 245:Ourtasks/ContactorStates.c **** 			}
 641              		.loc 1 245 0
 642 005c 18E2     		b	.L41
 643              	.L54:
 250:Ourtasks/ContactorStates.c **** 		{ // Here, configuration: HV sensor is present
 644              		.loc 1 250 0
 645 005e A369     		ldr	r3, [r4, #24]
 646 0060 13F0800F 		tst	r3, #128
 647 0064 22D1     		bne	.L55
 253:Ourtasks/ContactorStates.c **** 			{ // Here, two contactor config, so voltage should jump up
 648              		.loc 1 253 0
 649 0066 13F0100F 		tst	r3, #16
 650 006a 0FD1     		bne	.L56
 256:Ourtasks/ContactorStates.c **** 				if (stmp < 0) stmp = -stmp;
 651              		.loc 1 256 0
 652 006c D4F89421 		ldr	r2, [r4, #404]
 653 0070 D4F8CC11 		ldr	r1, [r4, #460]
 654              	.LVL61:
 257:Ourtasks/ContactorStates.c **** 				if ( stmp > pcf->idiffafter ) 
 655              		.loc 1 257 0
 656 0074 521A     		subs	r2, r2, r1
 657              	.LVL62:
 658 0076 00D5     		bpl	.L57
 257:Ourtasks/ContactorStates.c **** 				if ( stmp > pcf->idiffafter ) 
 659              		.loc 1 257 0 is_stmt 0 discriminator 1
 660 0078 5242     		negs	r2, r2
 661              	.LVL63:
 662              	.L57:
 258:Ourtasks/ContactorStates.c **** 				{
 663              		.loc 1 258 0 is_stmt 1
 664 007a D4F81811 		ldr	r1, [r4, #280]
 665 007e 9142     		cmp	r1, r2
 666 0080 14D2     		bcs	.L55
 260:Ourtasks/ContactorStates.c **** //morse_trap(67);
 667              		.loc 1 260 0
 668 0082 0621     		movs	r1, #6
 669 0084 2046     		mov	r0, r4
 670 0086 FFF7FEFF 		bl	transition_faulting
 671              	.LVL64:
 262:Ourtasks/ContactorStates.c **** 				}
 672              		.loc 1 262 0
 673 008a 01E2     		b	.L41
 674              	.L56:
 269:Ourtasks/ContactorStates.c **** 				if (stmp < 0) stmp = -stmp;
 675              		.loc 1 269 0
 676 008c D4F89421 		ldr	r2, [r4, #404]
 677 0090 D4F8CC11 		ldr	r1, [r4, #460]
 678              	.LVL65:
 270:Ourtasks/ContactorStates.c **** 				if ( stmp > pcf->idiffafter ) 
 679              		.loc 1 270 0
 680 0094 521A     		subs	r2, r2, r1
 681              	.LVL66:
 682 0096 00D5     		bpl	.L58
 270:Ourtasks/ContactorStates.c **** 				if ( stmp > pcf->idiffafter ) 
 683              		.loc 1 270 0 is_stmt 0 discriminator 1
 684 0098 5242     		negs	r2, r2
 685              	.LVL67:
ARM GAS  /tmp/ccBKzTW9.s 			page 27


 686              	.L58:
 271:Ourtasks/ContactorStates.c **** 				{ // Here, something not right with contactor closing
 687              		.loc 1 271 0 is_stmt 1
 688 009a D4F81811 		ldr	r1, [r4, #280]
 689 009e 9142     		cmp	r1, r2
 690 00a0 04D2     		bcs	.L55
 273:Ourtasks/ContactorStates.c **** 					break;
 691              		.loc 1 273 0
 692 00a2 0821     		movs	r1, #8
 693 00a4 2046     		mov	r0, r4
 694 00a6 FFF7FEFF 		bl	transition_faulting
 695              	.LVL68:
 274:Ourtasks/ContactorStates.c **** 				}	
 696              		.loc 1 274 0
 697 00aa F1E1     		b	.L41
 698              	.L55:
 282:Ourtasks/ContactorStates.c **** 		{ // TIM4 CH3 Lower PWM from 100%
 699              		.loc 1 282 0
 700 00ac 13F0200F 		tst	r3, #32
 701 00b0 05D0     		beq	.L59
 284:Ourtasks/ContactorStates.c **** 		}
 702              		.loc 1 284 0
 703 00b2 D4F8F030 		ldr	r3, [r4, #240]
 704 00b6 43F04003 		orr	r3, r3, #64
 705 00ba C4F8F030 		str	r3, [r4, #240]
 706              	.L59:
 288:Ourtasks/ContactorStates.c **** 		xTimerChangePeriod(pcf->swtimer2, pcf->prechgmin_k, 2); 
 707              		.loc 1 288 0
 708 00be D4F81431 		ldr	r3, [r4, #276]
 709 00c2 13B9     		cbnz	r3, .L60
 288:Ourtasks/ContactorStates.c **** 		xTimerChangePeriod(pcf->swtimer2, pcf->prechgmin_k, 2); 
 710              		.loc 1 288 0 is_stmt 0 discriminator 1
 711 00c4 5220     		movs	r0, #82
 712 00c6 FFF7FEFF 		bl	morse_trap
 713              	.LVL69:
 714              	.L60:
 289:Ourtasks/ContactorStates.c **** 		pcf->evstat &= ~CNCTEVTIMER2;	// Clear timedout status bit 
 715              		.loc 1 289 0 is_stmt 1
 716 00ca 0223     		movs	r3, #2
 717 00cc 0093     		str	r3, [sp]
 718 00ce 0023     		movs	r3, #0
 719 00d0 D4F81421 		ldr	r2, [r4, #276]
 720 00d4 0421     		movs	r1, #4
 721 00d6 D4F86001 		ldr	r0, [r4, #352]
 722 00da FFF7FEFF 		bl	xTimerGenericCommand
 723              	.LVL70:
 290:Ourtasks/ContactorStates.c **** 
 724              		.loc 1 290 0
 725 00de D4F8EC30 		ldr	r3, [r4, #236]
 726 00e2 23F00203 		bic	r3, r3, #2
 727 00e6 C4F8EC30 		str	r3, [r4, #236]
 292:Ourtasks/ContactorStates.c **** 		break;
 728              		.loc 1 292 0
 729 00ea 0123     		movs	r3, #1
 730 00ec 84F84532 		strb	r3, [r4, #581]
 293:Ourtasks/ContactorStates.c **** /* ...................................................................... */
 731              		.loc 1 293 0
ARM GAS  /tmp/ccBKzTW9.s 			page 28


 732 00f0 CEE1     		b	.L41
 733              	.L46:
 296:Ourtasks/ContactorStates.c **** 		{ // Minimum pre-charge time has expired.
 734              		.loc 1 296 0
 735 00f2 D4F8EC30 		ldr	r3, [r4, #236]
 736 00f6 13F0020F 		tst	r3, #2
 737 00fa 18D0     		beq	.L61
 298:Ourtasks/ContactorStates.c **** 			xTimerChangePeriod(pcf->swtimer2, pcf->prechgmax_k, 2); 
 738              		.loc 1 298 0
 739 00fc D4F82031 		ldr	r3, [r4, #288]
 740 0100 13B9     		cbnz	r3, .L62
 298:Ourtasks/ContactorStates.c **** 			xTimerChangePeriod(pcf->swtimer2, pcf->prechgmax_k, 2); 
 741              		.loc 1 298 0 is_stmt 0 discriminator 1
 742 0102 5320     		movs	r0, #83
 743 0104 FFF7FEFF 		bl	morse_trap
 744              	.LVL71:
 745              	.L62:
 299:Ourtasks/ContactorStates.c **** 			pcf->evstat &= ~CNCTEVTIMER2;	// Clear timedout status bit 
 746              		.loc 1 299 0 is_stmt 1
 747 0108 0225     		movs	r5, #2
 748 010a 0095     		str	r5, [sp]
 749 010c 0023     		movs	r3, #0
 750 010e D4F82021 		ldr	r2, [r4, #288]
 751 0112 0421     		movs	r1, #4
 752 0114 D4F86001 		ldr	r0, [r4, #352]
 753 0118 FFF7FEFF 		bl	xTimerGenericCommand
 754              	.LVL72:
 300:Ourtasks/ContactorStates.c **** 			pcf->substateC = CONNECT_C3;
 755              		.loc 1 300 0
 756 011c D4F8EC30 		ldr	r3, [r4, #236]
 757 0120 23F00203 		bic	r3, r3, #2
 758 0124 C4F8EC30 		str	r3, [r4, #236]
 301:Ourtasks/ContactorStates.c **** 			break;
 759              		.loc 1 301 0
 760 0128 84F84552 		strb	r5, [r4, #581]
 302:Ourtasks/ContactorStates.c **** 		}
 761              		.loc 1 302 0
 762 012c B0E1     		b	.L41
 763              	.L61:
 305:Ourtasks/ContactorStates.c **** 		{ // Here, not receiving readings from uart3 sensor
 764              		.loc 1 305 0
 765 012e 13F0040F 		tst	r3, #4
 766 0132 04D0     		beq	.L63
 307:Ourtasks/ContactorStates.c **** 			return;
 767              		.loc 1 307 0
 768 0134 0B21     		movs	r1, #11
 769 0136 2046     		mov	r0, r4
 770 0138 FFF7FEFF 		bl	transition_faulting
 771              	.LVL73:
 308:Ourtasks/ContactorStates.c **** 		}
 772              		.loc 1 308 0
 773 013c A8E1     		b	.L41
 774              	.L63:
 312:Ourtasks/ContactorStates.c **** 		{ // Keep-alive timer timout
 775              		.loc 1 312 0
 776 013e 13F0010F 		tst	r3, #1
 777 0142 00F0A581 		beq	.L41
ARM GAS  /tmp/ccBKzTW9.s 			page 29


 314:Ourtasks/ContactorStates.c **** 			return;	
 778              		.loc 1 314 0
 779 0146 0A21     		movs	r1, #10
 780 0148 2046     		mov	r0, r4
 781 014a FFF7FEFF 		bl	transition_faulting
 782              	.LVL74:
 315:Ourtasks/ContactorStates.c **** 		}
 783              		.loc 1 315 0
 784 014e 9FE1     		b	.L41
 785              	.L47:
 324:Ourtasks/ContactorStates.c **** 		{ // Keep-alive timer timout
 786              		.loc 1 324 0
 787 0150 D4F8EC30 		ldr	r3, [r4, #236]
 788 0154 13F0010F 		tst	r3, #1
 789 0158 04D0     		beq	.L64
 326:Ourtasks/ContactorStates.c **** 			return;	
 790              		.loc 1 326 0
 791 015a 0A21     		movs	r1, #10
 792 015c 2046     		mov	r0, r4
 793 015e FFF7FEFF 		bl	transition_faulting
 794              	.LVL75:
 327:Ourtasks/ContactorStates.c **** 		}
 795              		.loc 1 327 0
 796 0162 95E1     		b	.L41
 797              	.L64:
 331:Ourtasks/ContactorStates.c **** 		{ // Here, new readings available
 798              		.loc 1 331 0
 799 0164 13F4807F 		tst	r3, #256
 800 0168 03D0     		beq	.L65
 333:Ourtasks/ContactorStates.c **** 		}
 801              		.loc 1 333 0
 802 016a 23F48073 		bic	r3, r3, #256
 803 016e C4F8EC30 		str	r3, [r4, #236]
 804              	.L65:
 337:Ourtasks/ContactorStates.c **** 		{ // Maximum pre-charge time has expired.
 805              		.loc 1 337 0
 806 0172 D4F8EC30 		ldr	r3, [r4, #236]
 807 0176 13F0020F 		tst	r3, #2
 808 017a 28D0     		beq	.L66
 339:Ourtasks/ContactorStates.c **** 			{ // Here, configuration: HV sensor is present
 809              		.loc 1 339 0
 810 017c A369     		ldr	r3, [r4, #24]
 811 017e 13F0800F 		tst	r3, #128
 812 0182 04D1     		bne	.L67
 341:Ourtasks/ContactorStates.c **** 				return;
 813              		.loc 1 341 0
 814 0184 0721     		movs	r1, #7
 815 0186 2046     		mov	r0, r4
 816 0188 FFF7FEFF 		bl	transition_faulting
 817              	.LVL76:
 342:Ourtasks/ContactorStates.c **** 			}
 818              		.loc 1 342 0
 819 018c 80E1     		b	.L41
 820              	.L67:
 346:Ourtasks/ContactorStates.c **** 				xTimerChangePeriod(pcf->swtimer2,pcf->close2_k, 2); 
 821              		.loc 1 346 0
 822 018e D4F82831 		ldr	r3, [r4, #296]
ARM GAS  /tmp/ccBKzTW9.s 			page 30


 823 0192 13B9     		cbnz	r3, .L68
 346:Ourtasks/ContactorStates.c **** 				xTimerChangePeriod(pcf->swtimer2,pcf->close2_k, 2); 
 824              		.loc 1 346 0 is_stmt 0 discriminator 1
 825 0194 5820     		movs	r0, #88
 826 0196 FFF7FEFF 		bl	morse_trap
 827              	.LVL77:
 828              	.L68:
 347:Ourtasks/ContactorStates.c **** 				pcf->evstat &= ~CNCTEVTIMER2;	// Clear timedout status bit 
 829              		.loc 1 347 0 is_stmt 1
 830 019a 0223     		movs	r3, #2
 831 019c 0093     		str	r3, [sp]
 832 019e 0023     		movs	r3, #0
 833 01a0 D4F82821 		ldr	r2, [r4, #296]
 834 01a4 0421     		movs	r1, #4
 835 01a6 D4F86001 		ldr	r0, [r4, #352]
 836 01aa FFF7FEFF 		bl	xTimerGenericCommand
 837              	.LVL78:
 348:Ourtasks/ContactorStates.c **** 				pcf->outstat |= CNCTOUT01K2;  // Energize #2 during update section
 838              		.loc 1 348 0
 839 01ae D4F8EC30 		ldr	r3, [r4, #236]
 840 01b2 23F00203 		bic	r3, r3, #2
 841 01b6 C4F8EC30 		str	r3, [r4, #236]
 349:Ourtasks/ContactorStates.c **** 				pcf->substateC = CONNECT_C4;  // Next substate
 842              		.loc 1 349 0
 843 01ba D4F8F030 		ldr	r3, [r4, #240]
 844 01be 43F00203 		orr	r3, r3, #2
 845 01c2 C4F8F030 		str	r3, [r4, #240]
 350:Ourtasks/ContactorStates.c **** 				return;
 846              		.loc 1 350 0
 847 01c6 0323     		movs	r3, #3
 848 01c8 84F84532 		strb	r3, [r4, #581]
 351:Ourtasks/ContactorStates.c **** 			}
 849              		.loc 1 351 0
 850 01cc 60E1     		b	.L41
 851              	.L66:
 356:Ourtasks/ContactorStates.c **** 		{ // Here, configuration: HV sensor is NOT present
 852              		.loc 1 356 0
 853 01ce A369     		ldr	r3, [r4, #24]
 854 01d0 13F0800F 		tst	r3, #128
 855 01d4 40F05C81 		bne	.L41
 361:Ourtasks/ContactorStates.c **** 		{ // Here, end of pre-charge. Energize contactor 2
 856              		.loc 1 361 0
 857 01d8 B4F80822 		ldrh	r2, [r4, #520]
 858 01dc D4F80C31 		ldr	r3, [r4, #268]
 859 01e0 9A42     		cmp	r2, r3
 860 01e2 80F05581 		bcs	.L41
 363:Ourtasks/ContactorStates.c **** 
 861              		.loc 1 363 0
 862 01e6 D4F8F030 		ldr	r3, [r4, #240]
 863 01ea 43F00203 		orr	r3, r3, #2
 864 01ee C4F8F030 		str	r3, [r4, #240]
 366:Ourtasks/ContactorStates.c **** 			xTimerChangePeriod(pcf->swtimer2,pcf->close2_k, 2); 
 865              		.loc 1 366 0
 866 01f2 D4F82831 		ldr	r3, [r4, #296]
 867 01f6 13B9     		cbnz	r3, .L69
 366:Ourtasks/ContactorStates.c **** 			xTimerChangePeriod(pcf->swtimer2,pcf->close2_k, 2); 
 868              		.loc 1 366 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccBKzTW9.s 			page 31


 869 01f8 5820     		movs	r0, #88
 870 01fa FFF7FEFF 		bl	morse_trap
 871              	.LVL79:
 872              	.L69:
 367:Ourtasks/ContactorStates.c **** 			pcf->evstat &= ~CNCTEVTIMER2;	 // Clear timedout status bit 
 873              		.loc 1 367 0 is_stmt 1
 874 01fe 0223     		movs	r3, #2
 875 0200 0093     		str	r3, [sp]
 876 0202 0023     		movs	r3, #0
 877 0204 D4F82821 		ldr	r2, [r4, #296]
 878 0208 0421     		movs	r1, #4
 879 020a D4F86001 		ldr	r0, [r4, #352]
 880 020e FFF7FEFF 		bl	xTimerGenericCommand
 881              	.LVL80:
 368:Ourtasks/ContactorStates.c **** 			pcf->substateC = CONNECT_C4;   // Next substate
 882              		.loc 1 368 0
 883 0212 D4F8EC30 		ldr	r3, [r4, #236]
 884 0216 23F00203 		bic	r3, r3, #2
 885 021a C4F8EC30 		str	r3, [r4, #236]
 369:Ourtasks/ContactorStates.c **** 			return;
 886              		.loc 1 369 0
 887 021e 0323     		movs	r3, #3
 888 0220 84F84532 		strb	r3, [r4, #581]
 370:Ourtasks/ContactorStates.c **** 		}
 889              		.loc 1 370 0
 890 0224 34E1     		b	.L41
 891              	.L48:
 377:Ourtasks/ContactorStates.c **** 		{ // Keep-alive timer timout
 892              		.loc 1 377 0
 893 0226 D4F8EC30 		ldr	r3, [r4, #236]
 894 022a 13F0010F 		tst	r3, #1
 895 022e 04D0     		beq	.L70
 379:Ourtasks/ContactorStates.c **** 			return;	
 896              		.loc 1 379 0
 897 0230 0A21     		movs	r1, #10
 898 0232 2046     		mov	r0, r4
 899 0234 FFF7FEFF 		bl	transition_faulting
 900              	.LVL81:
 380:Ourtasks/ContactorStates.c **** 		}
 901              		.loc 1 380 0
 902 0238 2AE1     		b	.L41
 903              	.L70:
 383:Ourtasks/ContactorStates.c **** 		{ // Timer2 timed out: Contactor #2 should be closed
 904              		.loc 1 383 0
 905 023a 13F0020F 		tst	r3, #2
 906 023e 00F02781 		beq	.L41
 386:Ourtasks/ContactorStates.c **** 			{ // Here, configuration: HV sensor is present
 907              		.loc 1 386 0
 908 0242 A369     		ldr	r3, [r4, #24]
 909 0244 13F0800F 		tst	r3, #128
 910 0248 0AD1     		bne	.L71
 390:Ourtasks/ContactorStates.c **** 				{ // Here, something not right with contactor closing
 911              		.loc 1 390 0
 912 024a D4F80412 		ldr	r1, [r4, #516]
 913 024e D4F81821 		ldr	r2, [r4, #280]
 914 0252 9142     		cmp	r1, r2
 915 0254 04D9     		bls	.L71
ARM GAS  /tmp/ccBKzTW9.s 			page 32


 392:Ourtasks/ContactorStates.c **** 					break;
 916              		.loc 1 392 0
 917 0256 0921     		movs	r1, #9
 918 0258 2046     		mov	r0, r4
 919 025a FFF7FEFF 		bl	transition_faulting
 920              	.LVL82:
 393:Ourtasks/ContactorStates.c **** 				}
 921              		.loc 1 393 0
 922 025e 17E1     		b	.L41
 923              	.L71:
 398:Ourtasks/ContactorStates.c **** 			{ // TIM4 CH3 Lower PWM from 100%
 924              		.loc 1 398 0
 925 0260 13F0200F 		tst	r3, #32
 926 0264 05D0     		beq	.L72
 400:Ourtasks/ContactorStates.c **** 			}
 927              		.loc 1 400 0
 928 0266 D4F8F030 		ldr	r3, [r4, #240]
 929 026a 43F08003 		orr	r3, r3, #128
 930 026e C4F8F030 		str	r3, [r4, #240]
 931              	.L72:
 403:Ourtasks/ContactorStates.c **** 		}
 932              		.loc 1 403 0
 933 0272 0221     		movs	r1, #2
 934 0274 2046     		mov	r0, r4
 935 0276 FFF7FEFF 		bl	new_state
 936              	.LVL83:
 937 027a 09E1     		b	.L41
 938              	.L49:
 409:Ourtasks/ContactorStates.c **** 
 939              		.loc 1 409 0
 940 027c D4F8EC30 		ldr	r3, [r4, #236]
 941 0280 13F0020F 		tst	r3, #2
 942 0284 00F00481 		beq	.L41
 414:Ourtasks/ContactorStates.c **** 		{ // Aux contacts are present
 943              		.loc 1 414 0
 944 0288 A369     		ldr	r3, [r4, #24]
 945 028a 13F0040F 		tst	r3, #4
 946 028e 0AD0     		beq	.L73
 416:Ourtasks/ContactorStates.c **** 			if ((pcf->lc.hwconfig & AUX2SENSE) == 1)
 947              		.loc 1 416 0
 948 0290 2021     		movs	r1, #32
 949 0292 3A48     		ldr	r0, .L90
 950 0294 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 951              	.LVL84:
 421:Ourtasks/ContactorStates.c **** 			{ // Transition to fault state; set fault code
 952              		.loc 1 421 0
 953 0298 0128     		cmp	r0, #1
 954 029a 04D0     		beq	.L73
 424:Ourtasks/ContactorStates.c **** //morse_trap(66);
 955              		.loc 1 424 0
 956 029c 0521     		movs	r1, #5
 957 029e 2046     		mov	r0, r4
 958              	.LVL85:
 959 02a0 FFF7FEFF 		bl	transition_faulting
 960              	.LVL86:
 426:Ourtasks/ContactorStates.c **** 			}
 961              		.loc 1 426 0
ARM GAS  /tmp/ccBKzTW9.s 			page 33


 962 02a4 F4E0     		b	.L41
 963              	.L73:
 433:Ourtasks/ContactorStates.c **** 		{ // TIM4 CH2 Lower PWM from 100%
 964              		.loc 1 433 0
 965 02a6 A369     		ldr	r3, [r4, #24]
 966 02a8 13F0400F 		tst	r3, #64
 967 02ac 05D0     		beq	.L74
 435:Ourtasks/ContactorStates.c **** 		}
 968              		.loc 1 435 0
 969 02ae D4F8F030 		ldr	r3, [r4, #240]
 970 02b2 43F08003 		orr	r3, r3, #128
 971 02b6 C4F8F030 		str	r3, [r4, #240]
 972              	.L74:
 439:Ourtasks/ContactorStates.c **** 		xTimerChangePeriod(pcf->swtimer2, pcf->prechgmin_k, 2); 
 973              		.loc 1 439 0
 974 02ba D4F81431 		ldr	r3, [r4, #276]
 975 02be 13B9     		cbnz	r3, .L75
 439:Ourtasks/ContactorStates.c **** 		xTimerChangePeriod(pcf->swtimer2, pcf->prechgmin_k, 2); 
 976              		.loc 1 439 0 is_stmt 0 discriminator 1
 977 02c0 5220     		movs	r0, #82
 978 02c2 FFF7FEFF 		bl	morse_trap
 979              	.LVL87:
 980              	.L75:
 440:Ourtasks/ContactorStates.c **** 		pcf->evstat &= ~CNCTEVTIMER2;	// Clear timedout status bit 
 981              		.loc 1 440 0 is_stmt 1
 982 02c6 0223     		movs	r3, #2
 983 02c8 0093     		str	r3, [sp]
 984 02ca 0023     		movs	r3, #0
 985 02cc D4F81421 		ldr	r2, [r4, #276]
 986 02d0 0421     		movs	r1, #4
 987 02d2 D4F86001 		ldr	r0, [r4, #352]
 988 02d6 FFF7FEFF 		bl	xTimerGenericCommand
 989              	.LVL88:
 441:Ourtasks/ContactorStates.c **** 
 990              		.loc 1 441 0
 991 02da D4F8EC30 		ldr	r3, [r4, #236]
 992 02de 23F00203 		bic	r3, r3, #2
 993 02e2 C4F8EC30 		str	r3, [r4, #236]
 443:Ourtasks/ContactorStates.c **** 		break;
 994              		.loc 1 443 0
 995 02e6 0523     		movs	r3, #5
 996 02e8 84F84532 		strb	r3, [r4, #581]
 444:Ourtasks/ContactorStates.c **** /* ...................................................................... */
 997              		.loc 1 444 0
 998 02ec D0E0     		b	.L41
 999              	.L50:
 447:Ourtasks/ContactorStates.c **** 		{ // Minimum pre-charge time has expired.
 1000              		.loc 1 447 0
 1001 02ee D4F8EC30 		ldr	r3, [r4, #236]
 1002 02f2 13F0020F 		tst	r3, #2
 1003 02f6 19D0     		beq	.L76
 449:Ourtasks/ContactorStates.c **** 			xTimerChangePeriod(pcf->swtimer2, pcf->prechgmax_k, 2); 
 1004              		.loc 1 449 0
 1005 02f8 D4F82031 		ldr	r3, [r4, #288]
 1006 02fc 13B9     		cbnz	r3, .L77
 449:Ourtasks/ContactorStates.c **** 			xTimerChangePeriod(pcf->swtimer2, pcf->prechgmax_k, 2); 
 1007              		.loc 1 449 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccBKzTW9.s 			page 34


 1008 02fe 5320     		movs	r0, #83
 1009 0300 FFF7FEFF 		bl	morse_trap
 1010              	.LVL89:
 1011              	.L77:
 450:Ourtasks/ContactorStates.c **** 			pcf->evstat &= ~CNCTEVTIMER2;	// Clear timedout status bit 
 1012              		.loc 1 450 0 is_stmt 1
 1013 0304 0223     		movs	r3, #2
 1014 0306 0093     		str	r3, [sp]
 1015 0308 0023     		movs	r3, #0
 1016 030a D4F82021 		ldr	r2, [r4, #288]
 1017 030e 0421     		movs	r1, #4
 1018 0310 D4F86001 		ldr	r0, [r4, #352]
 1019 0314 FFF7FEFF 		bl	xTimerGenericCommand
 1020              	.LVL90:
 451:Ourtasks/ContactorStates.c **** 			pcf->substateC = CONNECT_C3B;
 1021              		.loc 1 451 0
 1022 0318 D4F8EC30 		ldr	r3, [r4, #236]
 1023 031c 23F00203 		bic	r3, r3, #2
 1024 0320 C4F8EC30 		str	r3, [r4, #236]
 452:Ourtasks/ContactorStates.c **** 			break;
 1025              		.loc 1 452 0
 1026 0324 0623     		movs	r3, #6
 1027 0326 84F84532 		strb	r3, [r4, #581]
 453:Ourtasks/ContactorStates.c **** 		}
 1028              		.loc 1 453 0
 1029 032a B1E0     		b	.L41
 1030              	.L76:
 456:Ourtasks/ContactorStates.c **** 		{ // Here, not receiving readings from uart3 sensor
 1031              		.loc 1 456 0
 1032 032c 13F0040F 		tst	r3, #4
 1033 0330 00F0AE80 		beq	.L41
 458:Ourtasks/ContactorStates.c **** 			return;
 1034              		.loc 1 458 0
 1035 0334 0B21     		movs	r1, #11
 1036 0336 2046     		mov	r0, r4
 1037 0338 FFF7FEFF 		bl	transition_faulting
 1038              	.LVL91:
 459:Ourtasks/ContactorStates.c **** 		}
 1039              		.loc 1 459 0
 1040 033c A8E0     		b	.L41
 1041              	.L51:
 467:Ourtasks/ContactorStates.c **** 		{ // Keep-alive timer timout
 1042              		.loc 1 467 0
 1043 033e D4F8EC30 		ldr	r3, [r4, #236]
 1044 0342 13F0010F 		tst	r3, #1
 1045 0346 04D0     		beq	.L78
 469:Ourtasks/ContactorStates.c **** 			return;	
 1046              		.loc 1 469 0
 1047 0348 0A21     		movs	r1, #10
 1048 034a 2046     		mov	r0, r4
 1049 034c FFF7FEFF 		bl	transition_faulting
 1050              	.LVL92:
 470:Ourtasks/ContactorStates.c **** 		}
 1051              		.loc 1 470 0
 1052 0350 9EE0     		b	.L41
 1053              	.L78:
 474:Ourtasks/ContactorStates.c **** 		{ // Here, new readings available
ARM GAS  /tmp/ccBKzTW9.s 			page 35


 1054              		.loc 1 474 0
 1055 0352 13F4807F 		tst	r3, #256
 1056 0356 03D0     		beq	.L79
 476:Ourtasks/ContactorStates.c **** 		}
 1057              		.loc 1 476 0
 1058 0358 23F48073 		bic	r3, r3, #256
 1059 035c C4F8EC30 		str	r3, [r4, #236]
 1060              	.L79:
 480:Ourtasks/ContactorStates.c **** 		{ // Maximum pre-charge time has expired.
 1061              		.loc 1 480 0
 1062 0360 D4F8EC30 		ldr	r3, [r4, #236]
 1063 0364 13F0020F 		tst	r3, #2
 1064 0368 29D0     		beq	.L80
 482:Ourtasks/ContactorStates.c **** 			{ // Here, configuration: HV sensor is present
 1065              		.loc 1 482 0
 1066 036a A369     		ldr	r3, [r4, #24]
 1067 036c 13F0800F 		tst	r3, #128
 1068 0370 06D1     		bne	.L81
 484:Ourtasks/ContactorStates.c **** 				return;
 1069              		.loc 1 484 0
 1070 0372 0721     		movs	r1, #7
 1071 0374 2046     		mov	r0, r4
 1072 0376 FFF7FEFF 		bl	transition_faulting
 1073              	.LVL93:
 485:Ourtasks/ContactorStates.c **** 			}
 1074              		.loc 1 485 0
 1075 037a 89E0     		b	.L41
 1076              	.L91:
 1077              		.align	2
 1078              	.L90:
 1079 037c 00080140 		.word	1073809408
 1080              	.L81:
 489:Ourtasks/ContactorStates.c **** 				xTimerChangePeriod(pcf->swtimer2,pcf->close1_k, 2); 
 1081              		.loc 1 489 0
 1082 0380 D4F82431 		ldr	r3, [r4, #292]
 1083 0384 13B9     		cbnz	r3, .L82
 489:Ourtasks/ContactorStates.c **** 				xTimerChangePeriod(pcf->swtimer2,pcf->close1_k, 2); 
 1084              		.loc 1 489 0 is_stmt 0 discriminator 1
 1085 0386 5520     		movs	r0, #85
 1086 0388 FFF7FEFF 		bl	morse_trap
 1087              	.LVL94:
 1088              	.L82:
 490:Ourtasks/ContactorStates.c **** 				pcf->evstat &= ~CNCTEVTIMER2;	// Clear timedout status bit 
 1089              		.loc 1 490 0 is_stmt 1
 1090 038c 0223     		movs	r3, #2
 1091 038e 0093     		str	r3, [sp]
 1092 0390 0023     		movs	r3, #0
 1093 0392 D4F82421 		ldr	r2, [r4, #292]
 1094 0396 0421     		movs	r1, #4
 1095 0398 D4F86001 		ldr	r0, [r4, #352]
 1096 039c FFF7FEFF 		bl	xTimerGenericCommand
 1097              	.LVL95:
 491:Ourtasks/ContactorStates.c **** 				pcf->outstat |= CNCTOUT00K1; // Energize #1 during update section
 1098              		.loc 1 491 0
 1099 03a0 D4F8EC30 		ldr	r3, [r4, #236]
 1100 03a4 23F00203 		bic	r3, r3, #2
 1101 03a8 C4F8EC30 		str	r3, [r4, #236]
ARM GAS  /tmp/ccBKzTW9.s 			page 36


 492:Ourtasks/ContactorStates.c **** 				pcf->substateC = CONNECT_C4B; // Next substate
 1102              		.loc 1 492 0
 1103 03ac D4F8F030 		ldr	r3, [r4, #240]
 1104 03b0 43F00103 		orr	r3, r3, #1
 1105 03b4 C4F8F030 		str	r3, [r4, #240]
 493:Ourtasks/ContactorStates.c **** 			}
 1106              		.loc 1 493 0
 1107 03b8 0723     		movs	r3, #7
 1108 03ba 84F84532 		strb	r3, [r4, #581]
 1109              	.L80:
 498:Ourtasks/ContactorStates.c **** 		{ // Here, configuration: HV sensor is NOT present
 1110              		.loc 1 498 0
 1111 03be A369     		ldr	r3, [r4, #24]
 1112 03c0 13F0800F 		tst	r3, #128
 1113 03c4 64D1     		bne	.L41
 503:Ourtasks/ContactorStates.c **** 		if (stmp < 0) stmp = -stmp; // JIC HV2 calibration makes difference negative
 1114              		.loc 1 503 0
 1115 03c6 D4F89431 		ldr	r3, [r4, #404]
 1116 03ca D4F8CC21 		ldr	r2, [r4, #460]
 1117              	.LVL96:
 504:Ourtasks/ContactorStates.c **** dbgstmp = stmp;
 1118              		.loc 1 504 0
 1119 03ce 9B1A     		subs	r3, r3, r2
 1120              	.LVL97:
 1121 03d0 00D5     		bpl	.L83
 504:Ourtasks/ContactorStates.c **** dbgstmp = stmp;
 1122              		.loc 1 504 0 is_stmt 0 discriminator 1
 1123 03d2 5B42     		negs	r3, r3
 1124              	.LVL98:
 1125              	.L83:
 505:Ourtasks/ContactorStates.c **** 		if (stmp < pcf->iprechgendvb)
 1126              		.loc 1 505 0 is_stmt 1
 1127 03d4 2F4A     		ldr	r2, .L92
 1128 03d6 1360     		str	r3, [r2]
 506:Ourtasks/ContactorStates.c **** 		{ // Here, end of pre-charge.  Energize contactor 1
 1129              		.loc 1 506 0
 1130 03d8 D4F81021 		ldr	r2, [r4, #272]
 1131 03dc 9A42     		cmp	r2, r3
 1132 03de 57D9     		bls	.L41
 508:Ourtasks/ContactorStates.c **** 
 1133              		.loc 1 508 0
 1134 03e0 D4F8F030 		ldr	r3, [r4, #240]
 1135              	.LVL99:
 1136 03e4 43F00103 		orr	r3, r3, #1
 1137 03e8 C4F8F030 		str	r3, [r4, #240]
 511:Ourtasks/ContactorStates.c **** 			xTimerChangePeriod(pcf->swtimer2,pcf->close1_k, 2); 
 1138              		.loc 1 511 0
 1139 03ec D4F82431 		ldr	r3, [r4, #292]
 1140 03f0 13B9     		cbnz	r3, .L84
 511:Ourtasks/ContactorStates.c **** 			xTimerChangePeriod(pcf->swtimer2,pcf->close1_k, 2); 
 1141              		.loc 1 511 0 is_stmt 0 discriminator 1
 1142 03f2 5520     		movs	r0, #85
 1143 03f4 FFF7FEFF 		bl	morse_trap
 1144              	.LVL100:
 1145              	.L84:
 512:Ourtasks/ContactorStates.c **** 			pcf->evstat &= ~CNCTEVTIMER2;	// Clear timedout status bit 
 1146              		.loc 1 512 0 is_stmt 1
ARM GAS  /tmp/ccBKzTW9.s 			page 37


 1147 03f8 0223     		movs	r3, #2
 1148 03fa 0093     		str	r3, [sp]
 1149 03fc 0023     		movs	r3, #0
 1150 03fe D4F82421 		ldr	r2, [r4, #292]
 1151 0402 0421     		movs	r1, #4
 1152 0404 D4F86001 		ldr	r0, [r4, #352]
 1153 0408 FFF7FEFF 		bl	xTimerGenericCommand
 1154              	.LVL101:
 513:Ourtasks/ContactorStates.c **** 
 1155              		.loc 1 513 0
 1156 040c D4F8EC30 		ldr	r3, [r4, #236]
 1157 0410 23F00203 		bic	r3, r3, #2
 1158 0414 C4F8EC30 		str	r3, [r4, #236]
 515:Ourtasks/ContactorStates.c **** 			return;			
 1159              		.loc 1 515 0
 1160 0418 0723     		movs	r3, #7
 1161 041a 84F84532 		strb	r3, [r4, #581]
 516:Ourtasks/ContactorStates.c **** 		}
 1162              		.loc 1 516 0
 1163 041e 37E0     		b	.L41
 1164              	.L52:
 523:Ourtasks/ContactorStates.c **** 		{ // Keep-alive timer timout
 1165              		.loc 1 523 0
 1166 0420 D4F8EC30 		ldr	r3, [r4, #236]
 1167 0424 13F0010F 		tst	r3, #1
 1168 0428 04D0     		beq	.L85
 525:Ourtasks/ContactorStates.c **** 			return;	
 1169              		.loc 1 525 0
 1170 042a 0A21     		movs	r1, #10
 1171 042c 2046     		mov	r0, r4
 1172 042e FFF7FEFF 		bl	transition_faulting
 1173              	.LVL102:
 526:Ourtasks/ContactorStates.c **** 		}
 1174              		.loc 1 526 0
 1175 0432 2DE0     		b	.L41
 1176              	.L85:
 529:Ourtasks/ContactorStates.c **** 
 1177              		.loc 1 529 0
 1178 0434 13F0020F 		tst	r3, #2
 1179 0438 2AD0     		beq	.L41
 533:Ourtasks/ContactorStates.c **** 		{ // Here, configuration: HV sensor is present
 1180              		.loc 1 533 0
 1181 043a A369     		ldr	r3, [r4, #24]
 1182 043c 13F0800F 		tst	r3, #128
 1183 0440 0ED1     		bne	.L86
 538:Ourtasks/ContactorStates.c **** 			if (stmp < 0) stmp = -stmp; // jic HV2 slightly larger than HV1
 1184              		.loc 1 538 0
 1185 0442 D4F89431 		ldr	r3, [r4, #404]
 1186 0446 D4F8CC21 		ldr	r2, [r4, #460]
 1187              	.LVL103:
 539:Ourtasks/ContactorStates.c **** 			if ( stmp > pcf->idiffafter ) 
 1188              		.loc 1 539 0
 1189 044a 9B1A     		subs	r3, r3, r2
 1190              	.LVL104:
 1191 044c 00D5     		bpl	.L87
 539:Ourtasks/ContactorStates.c **** 			if ( stmp > pcf->idiffafter ) 
 1192              		.loc 1 539 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccBKzTW9.s 			page 38


 1193 044e 5B42     		negs	r3, r3
 1194              	.LVL105:
 1195              	.L87:
 540:Ourtasks/ContactorStates.c **** 			{ // Here, something not right with contactor closing
 1196              		.loc 1 540 0 is_stmt 1
 1197 0450 D4F81821 		ldr	r2, [r4, #280]
 1198 0454 9A42     		cmp	r2, r3
 1199 0456 03D2     		bcs	.L86
 542:Ourtasks/ContactorStates.c **** 			}
 1200              		.loc 1 542 0
 1201 0458 0821     		movs	r1, #8
 1202 045a 2046     		mov	r0, r4
 1203 045c FFF7FEFF 		bl	transition_faulting
 1204              	.LVL106:
 1205              	.L86:
 547:Ourtasks/ContactorStates.c **** 		{ // TIM4 CH3 Lower PWM from 100%
 1206              		.loc 1 547 0
 1207 0460 A369     		ldr	r3, [r4, #24]
 1208 0462 13F0200F 		tst	r3, #32
 1209 0466 05D0     		beq	.L88
 549:Ourtasks/ContactorStates.c **** 		}
 1210              		.loc 1 549 0
 1211 0468 D4F8F030 		ldr	r3, [r4, #240]
 1212 046c 43F04003 		orr	r3, r3, #64
 1213 0470 C4F8F030 		str	r3, [r4, #240]
 1214              	.L88:
 553:Ourtasks/ContactorStates.c **** 		pcf->outstat &= ~CNCTOUT07KAw; // No pwm, JIC			
 1215              		.loc 1 553 0
 1216 0474 D4F8F030 		ldr	r3, [r4, #240]
 554:Ourtasks/ContactorStates.c **** 
 1217              		.loc 1 554 0
 1218 0478 23F08203 		bic	r3, r3, #130
 1219 047c C4F8F030 		str	r3, [r4, #240]
 556:Ourtasks/ContactorStates.c **** 		break;
 1220              		.loc 1 556 0
 1221 0480 0221     		movs	r1, #2
 1222 0482 2046     		mov	r0, r4
 1223 0484 FFF7FEFF 		bl	new_state
 1224              	.LVL107:
 557:Ourtasks/ContactorStates.c **** 
 1225              		.loc 1 557 0
 1226 0488 02E0     		b	.L41
 1227              	.L43:
 560:Ourtasks/ContactorStates.c **** 	}
 1228              		.loc 1 560 0
 1229 048a 4520     		movs	r0, #69
 1230 048c FFF7FEFF 		bl	morse_trap
 1231              	.LVL108:
 1232              	.L41:
 562:Ourtasks/ContactorStates.c **** 		
 1233              		.loc 1 562 0
 1234 0490 03B0     		add	sp, sp, #12
 1235              	.LCFI12:
 1236              		.cfi_def_cfa_offset 12
 1237              		@ sp needed
 1238 0492 30BD     		pop	{r4, r5, pc}
 1239              	.LVL109:
ARM GAS  /tmp/ccBKzTW9.s 			page 39


 1240              	.L93:
 1241              		.align	2
 1242              	.L92:
 1243 0494 00000000 		.word	dbgstmp
 1244              		.cfi_endproc
 1245              	.LFE72:
 1247              		.section	.text.ContactorStates_connected,"ax",%progbits
 1248              		.align	2
 1249              		.global	ContactorStates_connected
 1250              		.thumb
 1251              		.thumb_func
 1253              	ContactorStates_connected:
 1254              	.LFB73:
 566:Ourtasks/ContactorStates.c **** 	/* Check that we are still getting keep-alive msgs. */
 1255              		.loc 1 566 0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 0
 1258              		@ frame_needed = 0, uses_anonymous_args = 0
 1259              	.LVL110:
 1260 0000 10B5     		push	{r4, lr}
 1261              	.LCFI13:
 1262              		.cfi_def_cfa_offset 8
 1263              		.cfi_offset 4, -8
 1264              		.cfi_offset 14, -4
 1265 0002 0446     		mov	r4, r0
 568:Ourtasks/ContactorStates.c **** 	{ // Keep-alive timer timout
 1266              		.loc 1 568 0
 1267 0004 D0F8EC30 		ldr	r3, [r0, #236]
 1268 0008 13F0010F 		tst	r3, #1
 1269 000c 03D0     		beq	.L95
 570:Ourtasks/ContactorStates.c **** 		return;	
 1270              		.loc 1 570 0
 1271 000e 0A21     		movs	r1, #10
 1272 0010 FFF7FEFF 		bl	transition_faulting
 1273              	.LVL111:
 571:Ourtasks/ContactorStates.c **** 	}
 1274              		.loc 1 571 0
 1275 0014 10BD     		pop	{r4, pc}
 1276              	.LVL112:
 1277              	.L95:
 575:Ourtasks/ContactorStates.c **** 	{ // 
 1278              		.loc 1 575 0
 1279 0016 D0F8EC30 		ldr	r3, [r0, #236]
 1280 001a 03F0C003 		and	r3, r3, #192
 1281 001e 802B     		cmp	r3, #128
 1282 0020 01D0     		beq	.L97
 577:Ourtasks/ContactorStates.c **** 	}
 1283              		.loc 1 577 0
 1284 0022 FFF7FEFF 		bl	transition_disconnecting
 1285              	.LVL113:
 1286              	.L97:
 580:Ourtasks/ContactorStates.c **** 	return;
 1287              		.loc 1 580 0
 1288 0026 D4F8F030 		ldr	r3, [r4, #240]
 1289 002a 43F01003 		orr	r3, r3, #16
 1290 002e C4F8F030 		str	r3, [r4, #240]
 1291 0032 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccBKzTW9.s 			page 40


 1292              		.cfi_endproc
 1293              	.LFE73:
 1295              		.section	.text.ContactorStates_faulting,"ax",%progbits
 1296              		.align	2
 1297              		.global	ContactorStates_faulting
 1298              		.thumb
 1299              		.thumb_func
 1301              	ContactorStates_faulting:
 1302              	.LFB77:
 639:Ourtasks/ContactorStates.c **** 	if ((pcf->evstat & CNCTEVTIMER2) != 0)
 1303              		.loc 1 639 0
 1304              		.cfi_startproc
 1305              		@ args = 0, pretend = 0, frame = 0
 1306              		@ frame_needed = 0, uses_anonymous_args = 0
 1307              	.LVL114:
 1308 0000 08B5     		push	{r3, lr}
 1309              	.LCFI14:
 1310              		.cfi_def_cfa_offset 8
 1311              		.cfi_offset 3, -8
 1312              		.cfi_offset 14, -4
 640:Ourtasks/ContactorStates.c **** 	{ // Timer 2 timed out, and contactors should be open
 1313              		.loc 1 640 0
 1314 0002 D0F8EC30 		ldr	r3, [r0, #236]
 1315 0006 13F0020F 		tst	r3, #2
 1316 000a 02D0     		beq	.L99
 642:Ourtasks/ContactorStates.c **** 	}		
 1317              		.loc 1 642 0
 1318 000c 0421     		movs	r1, #4
 1319 000e FFF7FEFF 		bl	new_state
 1320              	.LVL115:
 1321              	.L99:
 1322 0012 08BD     		pop	{r3, pc}
 1323              		.cfi_endproc
 1324              	.LFE77:
 1326              		.section	.text.ContactorStates_faulted,"ax",%progbits
 1327              		.align	2
 1328              		.global	ContactorStates_faulted
 1329              		.thumb
 1330              		.thumb_func
 1332              	ContactorStates_faulted:
 1333              	.LFB78:
 649:Ourtasks/ContactorStates.c **** 	if ((pcf->evstat & CNCTEVCMDRS) != 0)
 1334              		.loc 1 649 0
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 0
 1337              		@ frame_needed = 0, uses_anonymous_args = 0
 1338              	.LVL116:
 1339 0000 08B5     		push	{r3, lr}
 1340              	.LCFI15:
 1341              		.cfi_def_cfa_offset 8
 1342              		.cfi_offset 3, -8
 1343              		.cfi_offset 14, -4
 650:Ourtasks/ContactorStates.c **** 	{ // Command to RESET
 1344              		.loc 1 650 0
 1345 0002 D0F8EC30 		ldr	r3, [r0, #236]
 1346 0006 13F0400F 		tst	r3, #64
 1347 000a 01D0     		beq	.L102
ARM GAS  /tmp/ccBKzTW9.s 			page 41


 652:Ourtasks/ContactorStates.c **** 	}
 1348              		.loc 1 652 0
 1349 000c FFF7FEFF 		bl	transition_disconnecting
 1350              	.LVL117:
 1351              	.L102:
 1352 0010 08BD     		pop	{r3, pc}
 1353              		.cfi_endproc
 1354              	.LFE78:
 1356 0012 00BF     		.section	.text.ContactorStates_reset,"ax",%progbits
 1357              		.align	2
 1358              		.global	ContactorStates_reset
 1359              		.thumb
 1360              		.thumb_func
 1362              	ContactorStates_reset:
 1363              	.LFB79:
 659:Ourtasks/ContactorStates.c **** 	if ((pcf->evstat & CNCTEVCMDRS) != 0)
 1364              		.loc 1 659 0
 1365              		.cfi_startproc
 1366              		@ args = 0, pretend = 0, frame = 0
 1367              		@ frame_needed = 0, uses_anonymous_args = 0
 1368              	.LVL118:
 1369 0000 08B5     		push	{r3, lr}
 1370              	.LCFI16:
 1371              		.cfi_def_cfa_offset 8
 1372              		.cfi_offset 3, -8
 1373              		.cfi_offset 14, -4
 660:Ourtasks/ContactorStates.c **** 	{ // Command to RESET
 1374              		.loc 1 660 0
 1375 0002 D0F8EC30 		ldr	r3, [r0, #236]
 1376 0006 13F0400F 		tst	r3, #64
 1377 000a 04D0     		beq	.L105
 662:Ourtasks/ContactorStates.c **** 		transition_disconnecting(pcf);
 1378              		.loc 1 662 0
 1379 000c 0023     		movs	r3, #0
 1380 000e 80F8F830 		strb	r3, [r0, #248]
 663:Ourtasks/ContactorStates.c **** 	}
 1381              		.loc 1 663 0
 1382 0012 FFF7FEFF 		bl	transition_disconnecting
 1383              	.LVL119:
 1384              	.L105:
 1385 0016 08BD     		pop	{r3, pc}
 1386              		.cfi_endproc
 1387              	.LFE79:
 1389              		.comm	dbgstmp,4,4
 1390              		.text
 1391              	.Letext0:
 1392              		.file 2 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_t
 1393              		.file 3 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 1394              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 1395              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/timers.h"
 1396              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1397              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1398              		.file 8 "Ourwares/common_misc.h"
 1399              		.file 9 "Ourwares/common_can.h"
 1400              		.file 10 "Ourtasks/iir_filter_lx.h"
 1401              		.file 11 "Ourtasks/contactor_idx_v_struct.h"
 1402              		.file 12 "Ourtasks/adc_idx_v_struct.h"
ARM GAS  /tmp/ccBKzTW9.s 			page 42


 1403              		.file 13 "Ourwares/CanTask.h"
 1404              		.file 14 "Ourtasks/ContactorTask.h"
 1405              		.file 15 "Ourtasks/adcparams.h"
 1406              		.file 16 "Ourtasks/ContactorStates.h"
 1407              		.file 17 "Ourtasks/cic_filter_l_N2_M3.h"
 1408              		.file 18 "Drivers/CMSIS/Include/core_cm3.h"
 1409              		.file 19 "Ourwares/morse.h"
 1410              		.file 20 "Ourtasks/adcparamsinit.h"
 1411              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
ARM GAS  /tmp/ccBKzTW9.s 			page 43


DEFINED SYMBOLS
                            *ABS*:00000000 ContactorStates.c
     /tmp/ccBKzTW9.s:20     .text.new_state:00000000 $t
     /tmp/ccBKzTW9.s:24     .text.new_state:00000000 new_state
     /tmp/ccBKzTW9.s:52     .text.open_contactors:00000000 $t
     /tmp/ccBKzTW9.s:56     .text.open_contactors:00000000 open_contactors
     /tmp/ccBKzTW9.s:145    .text.transition_disconnecting:00000000 $t
     /tmp/ccBKzTW9.s:149    .text.transition_disconnecting:00000000 transition_disconnecting
     /tmp/ccBKzTW9.s:175    .text.transition_connecting:00000000 $t
     /tmp/ccBKzTW9.s:179    .text.transition_connecting:00000000 transition_connecting
     /tmp/ccBKzTW9.s:276    .text.ContactorStates_disconnecting:00000000 $t
     /tmp/ccBKzTW9.s:281    .text.ContactorStates_disconnecting:00000000 ContactorStates_disconnecting
     /tmp/ccBKzTW9.s:302    .text.transition_faulting:00000000 $t
     /tmp/ccBKzTW9.s:307    .text.transition_faulting:00000000 transition_faulting
     /tmp/ccBKzTW9.s:338    .text.ContactorStates_otosettling_init:00000000 $t
     /tmp/ccBKzTW9.s:343    .text.ContactorStates_otosettling_init:00000000 ContactorStates_otosettling_init
     /tmp/ccBKzTW9.s:380    .text.ContactorStates_disconnected:00000000 $t
     /tmp/ccBKzTW9.s:385    .text.ContactorStates_disconnected:00000000 ContactorStates_disconnected
     /tmp/ccBKzTW9.s:567    .text.ContactorStates_disconnected:00000108 $d
     /tmp/ccBKzTW9.s:572    .text.ContactorStates_connecting:00000000 $t
     /tmp/ccBKzTW9.s:577    .text.ContactorStates_connecting:00000000 ContactorStates_connecting
     /tmp/ccBKzTW9.s:609    .text.ContactorStates_connecting:00000024 $d
     /tmp/ccBKzTW9.s:617    .text.ContactorStates_connecting:00000034 $t
     /tmp/ccBKzTW9.s:1079   .text.ContactorStates_connecting:0000037c $d
     /tmp/ccBKzTW9.s:1082   .text.ContactorStates_connecting:00000380 $t
     /tmp/ccBKzTW9.s:1243   .text.ContactorStates_connecting:00000494 $d
                            *COM*:00000004 dbgstmp
     /tmp/ccBKzTW9.s:1248   .text.ContactorStates_connected:00000000 $t
     /tmp/ccBKzTW9.s:1253   .text.ContactorStates_connected:00000000 ContactorStates_connected
     /tmp/ccBKzTW9.s:1296   .text.ContactorStates_faulting:00000000 $t
     /tmp/ccBKzTW9.s:1301   .text.ContactorStates_faulting:00000000 ContactorStates_faulting
     /tmp/ccBKzTW9.s:1327   .text.ContactorStates_faulted:00000000 $t
     /tmp/ccBKzTW9.s:1332   .text.ContactorStates_faulted:00000000 ContactorStates_faulted
     /tmp/ccBKzTW9.s:1357   .text.ContactorStates_reset:00000000 $t
     /tmp/ccBKzTW9.s:1362   .text.ContactorStates_reset:00000000 ContactorStates_reset
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
morse_trap
xTimerGenericCommand
ratiometric_cal_zero_CURRENTTOTAL
HAL_GPIO_ReadPin
