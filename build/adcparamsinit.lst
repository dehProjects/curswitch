ARM GAS  /tmp/ccVwgg6a.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"adcparamsinit.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_ui2d
  20              		.global	__aeabi_ddiv
  21              		.global	__aeabi_dmul
  22              		.global	__aeabi_dcmpgt
  23              		.global	__aeabi_dcmplt
  24              		.global	__aeabi_d2iz
  25              		.section	.text.ratiometric_cal_zero,"ax",%progbits
  26              		.align	2
  27              		.thumb
  28              		.thumb_func
  30              	ratiometric_cal_zero:
  31              	.LFB70:
  32              		.file 1 "Ourtasks/adcparamsinit.c"
   1:Ourtasks/adcparamsinit.c **** /******************************************************************************
   2:Ourtasks/adcparamsinit.c **** * File Name          : adcparamsinit.c
   3:Ourtasks/adcparamsinit.c **** * Date First Issued  : 03/09/2019
   4:Ourtasks/adcparamsinit.c **** * Board              : DiscoveryF4
   5:Ourtasks/adcparamsinit.c **** * Description        : Initialization of parameters for ADC app configuration
   6:Ourtasks/adcparamsinit.c **** *******************************************************************************/
   7:Ourtasks/adcparamsinit.c **** /* 
   8:Ourtasks/adcparamsinit.c **** This is where hard-coded parameters for the ADC are entered.
   9:Ourtasks/adcparamsinit.c **** 
  10:Ourtasks/adcparamsinit.c **** Later, this may be replaced with a "copy" of the flat file in high flash, generated
  11:Ourtasks/adcparamsinit.c **** by the java program from the sql database.
  12:Ourtasks/adcparamsinit.c **** */
  13:Ourtasks/adcparamsinit.c **** #include "adcparamsinit.h"
  14:Ourtasks/adcparamsinit.c **** #include "adcparams.h"
  15:Ourtasks/adcparamsinit.c **** #include "ADCTask.h"
  16:Ourtasks/adcparamsinit.c **** #include "morse.h"
  17:Ourtasks/adcparamsinit.c **** 
  18:Ourtasks/adcparamsinit.c **** static void ratiometric_cal(struct ADCRATIOMETRIC* p, struct ADCCALHE* plc);
  19:Ourtasks/adcparamsinit.c **** 
  20:Ourtasks/adcparamsinit.c **** /*                        Min  Typ  Max 
  21:Ourtasks/adcparamsinit.c **** Internal reference F103: 1.16 1.20 1.26 V 
  22:Ourtasks/adcparamsinit.c **** Internal reference F407: 1.18 1.20 1.24 V 
  23:Ourtasks/adcparamsinit.c **** */
  24:Ourtasks/adcparamsinit.c **** // Define limits for initialization check
  25:Ourtasks/adcparamsinit.c **** #define VREFMIN (1.15)
  26:Ourtasks/adcparamsinit.c **** #define VREFMAX (1.27)
ARM GAS  /tmp/ccVwgg6a.s 			page 2


  27:Ourtasks/adcparamsinit.c **** 
  28:Ourtasks/adcparamsinit.c **** /* *************************************************************************
  29:Ourtasks/adcparamsinit.c **** void adcparamsinit_init(struct ADCFUNCTION* p);
  30:Ourtasks/adcparamsinit.c ****  *	@brief	: Load structs for compensation, calibration and filtering all ADC channels
  31:Ourtasks/adcparamsinit.c ****  * @param	: p = Pointer to struct "everything" for this ADC module
  32:Ourtasks/adcparamsinit.c ****  * *************************************************************************/
  33:Ourtasks/adcparamsinit.c **** 
  34:Ourtasks/adcparamsinit.c **** /* Reproduced for convenience
  35:Ourtasks/adcparamsinit.c **** 
  36:Ourtasks/adcparamsinit.c **** #define ADC1IDX_5VOLTSUPPLY   0   // PA0 IN0  - 5V sensor supply
  37:Ourtasks/adcparamsinit.c **** #define ADC1IDX_CURRENTTOTAL  1   // PA5 IN5  - Current sensor: total battery current
  38:Ourtasks/adcparamsinit.c **** #define ADC1IDX_CURRENTMOTOR1 2   // PA6 IN6  - Current sensor: motor #1
  39:Ourtasks/adcparamsinit.c **** #define ADC1IDX_12VRAWSUPPLY  3   // PA7 IN7  - +12 Raw power to board
  40:Ourtasks/adcparamsinit.c **** #define ADC1IDX_INTERNALTEMP  4   // IN17     - Internal temperature sensor
  41:Ourtasks/adcparamsinit.c **** #define ADC1IDX_INTERNALVREF  5   // IN18     - Internal voltage reference
  42:Ourtasks/adcparamsinit.c **** 
  43:Ourtasks/adcparamsinit.c **** #define ADC1PARAM_COMPTYPE_NONE      0     // No supply or temp compensation applied
  44:Ourtasks/adcparamsinit.c **** #define ADC1PARAM_COMPTYPE_RATIOVDD  1     // Vdd (3.3v nominal) ratiometric
  45:Ourtasks/adcparamsinit.c **** #define ADC1PARAM_COMPTYPE_RATIO5V   2     // 5v ratiometric with 5->Vdd measurement
  46:Ourtasks/adcparamsinit.c **** #define ADC1PARAM_COMPTYPE_RATIO5VNO 3     // 5v ratiometric without 5->Vdd measurement
  47:Ourtasks/adcparamsinit.c **** #define ADC1PARAM_COMPTYPE_VOLTVDD   4     // Vdd (absolute), Vref compensation applied
  48:Ourtasks/adcparamsinit.c **** #define ADC1PARAM_COMPTYPE_VOLTVDDNO 5     // Vdd (absolute), no Vref compensation applied
  49:Ourtasks/adcparamsinit.c **** #define ADC1PARAM_COMPTYPE_VOLTV5    6     // 5v (absolute), with 5->Vdd measurement applied
  50:Ourtasks/adcparamsinit.c **** #define ADC1PARAM_COMPTYPE_VOLTV5NO  7     // 5v (absolute), without 5->Vdd measurement applied
  51:Ourtasks/adcparamsinit.c **** 
  52:Ourtasks/adcparamsinit.c **** #define ADC1PARAM_CALIBTYPE_RAW_F  0    // No calibration applied: FLOAT
  53:Ourtasks/adcparamsinit.c **** #define ADC1PARAM_CALIBTYPE_OFSC   1    // Offset & scale (poly ord 0 & 1): FLOAT
  54:Ourtasks/adcparamsinit.c **** #define ADC1PARAM_CALIBTYPE_POLY2  2    // Polynomial 2nd ord: FLOAT
  55:Ourtasks/adcparamsinit.c **** #define ADC1PARAM_CALIBTYPE_POLY3  3    // Polynomial 3nd ord: FLOAT
  56:Ourtasks/adcparamsinit.c **** #define ADC1PARAM_CALIBTYPE_RAW_UI 4    // No calibration applied: UNSIGNED INT
  57:Ourtasks/adcparamsinit.c **** */
  58:Ourtasks/adcparamsinit.c **** double adcdtmp;
  59:Ourtasks/adcparamsinit.c **** 
  60:Ourtasks/adcparamsinit.c **** void adcparamsinit_init(struct ADCFUNCTION* p)
  61:Ourtasks/adcparamsinit.c **** {
  62:Ourtasks/adcparamsinit.c **** /* Reproduced for convenience 
  63:Ourtasks/adcparamsinit.c **** struct ADCFUNCTION
  64:Ourtasks/adcparamsinit.c **** {
  65:Ourtasks/adcparamsinit.c **** 	struct ADCCONTACTORLC lc;    // Local Copy of parameters
  66:Ourtasks/adcparamsinit.c **** 	struct ADCINTERNAL    intern;// Vref & temperature
  67:Ourtasks/adcparamsinit.c **** 	struct ADCABSOLUTE    v12;   // Supply: raw 12v
  68:Ourtasks/adcparamsinit.c **** 	struct ADCABSOLUTE    v5;    // Supply: regulated 5v
  69:Ourtasks/adcparamsinit.c **** 	struct ADCRATIOMETRIC cur1;  // Current sensor #1
  70:Ourtasks/adcparamsinit.c ****    struct ADCRATIOMETRIC cur2;  // Current sensor #2
  71:Ourtasks/adcparamsinit.c **** 	struct ADCCHANNEL	 chan[ADC1IDX_ADCSCANSIZE]; // ADC sums, calibrated endpt
  72:Ourtasks/adcparamsinit.c **** 	uint32_t ctr; // Running count of updates.
  73:Ourtasks/adcparamsinit.c **** };
  74:Ourtasks/adcparamsinit.c **** struct ADCINTERNAL
  75:Ourtasks/adcparamsinit.c **** {
  76:Ourtasks/adcparamsinit.c **** 	struct IIRFILTERL iiradcvref; // Intermediate filter params: vref 
  77:Ourtasks/adcparamsinit.c **** 	struct IIRFILTERL iiradctemp; // Intermediate filter params: temperature sensor
  78:Ourtasks/adcparamsinit.c **** 
  79:Ourtasks/adcparamsinit.c **** 	uint32_t adcfilvref;  // Filtered ADC[Vref]
  80:Ourtasks/adcparamsinit.c **** 	uint32_t adcfiltemp;  // Filtered ADC[temperature]
  81:Ourtasks/adcparamsinit.c **** 
  82:Ourtasks/adcparamsinit.c **** 	uint32_t adcvref;    // Do I need this?
  83:Ourtasks/adcparamsinit.c **** 	uint32_t adccmpvref; // scaled vref compensated for temperature
ARM GAS  /tmp/ccVwgg6a.s 			page 3


  84:Ourtasks/adcparamsinit.c **** 
  85:Ourtasks/adcparamsinit.c **** 	double dvref;        // (double) vref computed from calibration params
  86:Ourtasks/adcparamsinit.c **** 	uint32_t vref;       // (scaled) vref computed from calibration params
  87:Ourtasks/adcparamsinit.c **** 
  88:Ourtasks/adcparamsinit.c **** 	uint32_t iRslope;    // (scaled) Reciprocal of temperature sensor slope
  89:Ourtasks/adcparamsinit.c **** 	uint32_t iv25s;      // (scaled) (V25 * iRslope)
  90:Ourtasks/adcparamsinit.c **** 	double   V25;        // (double) Computed V25 (no)
  91:Ourtasks/adcparamsinit.c **** 	uint32_t vrefRs;     // (scaled) Vref / slope
  92:Ourtasks/adcparamsinit.c **** 	uint32_t irmtemp;    // (scaled) calibration temperature
  93:Ourtasks/adcparamsinit.c **** 	uint32_t itemp;      // (scaled) temperature (degC)
  94:Ourtasks/adcparamsinit.c **** };
  95:Ourtasks/adcparamsinit.c **** */
  96:Ourtasks/adcparamsinit.c **** 
  97:Ourtasks/adcparamsinit.c **** /* Internal sensors. */
  98:Ourtasks/adcparamsinit.c **** 	// Pointers to filter constants 
  99:Ourtasks/adcparamsinit.c **** 	p->intern.iiradcvref.pprm = &p->lc.calintern.iiradcvref;
 100:Ourtasks/adcparamsinit.c **** 	p->intern.iiradctemp.pprm = &p->lc.calintern.iiradctemp;
 101:Ourtasks/adcparamsinit.c **** 
 102:Ourtasks/adcparamsinit.c **** 	// Compute a scaled integer vref from measurements
 103:Ourtasks/adcparamsinit.c **** 	double dadc  = p->lc.calintern.adcvdd; // ADC reading (~27360)
 104:Ourtasks/adcparamsinit.c **** 	p->intern.dvref = p->lc.calintern.dvdd * (dadc / 65520.0);
 105:Ourtasks/adcparamsinit.c **** 	p->intern.vref  = (p->intern.dvref * (1 << ADCSCALEbits) ); // Scaled uint32_t; 
 106:Ourtasks/adcparamsinit.c **** 	p->intern.adcvref = (65520.0 * p->intern.dvref) / p->lc.calintern.dvdd;
 107:Ourtasks/adcparamsinit.c **** 
 108:Ourtasks/adcparamsinit.c **** 	// Check for out-of-datasheet Vref spec 
 109:Ourtasks/adcparamsinit.c **** 	if ((p->intern.dvref < (VREFMIN)) || (p->intern.dvref > (VREFMAX))) 
 110:Ourtasks/adcparamsinit.c **** 	{
 111:Ourtasks/adcparamsinit.c **** 		morse_trap(81);
 112:Ourtasks/adcparamsinit.c **** 	}
 113:Ourtasks/adcparamsinit.c **** 	p->chan[ADC1IDX_INTERNALTEMP].dscale = p->lc.calintern.dvdd / 65520.0;
 114:Ourtasks/adcparamsinit.c **** 	p->chan[ADC1IDX_INTERNALVREF].dscale = 1.0;
 115:Ourtasks/adcparamsinit.c **** 
 116:Ourtasks/adcparamsinit.c **** 	// Reciprocal of temperature sensor slope ( ~65536/4.3E-3 = (232.55 << 16) )
 117:Ourtasks/adcparamsinit.c **** 	p->intern.iRslope  = (double)((1 << ADCSCALEbits) * (1000)) / p->lc.calintern.dslope;
 118:Ourtasks/adcparamsinit.c **** 
 119:Ourtasks/adcparamsinit.c **** 	// Pre-compute the (V25 / slope) into a scaled integer.
 120:Ourtasks/adcparamsinit.c **** //	double dtmp = ((1 << ADCSCALEbits) * (1000)) * p->lc.calintern.dvtemp / p->lc.calintern.dslope;
 121:Ourtasks/adcparamsinit.c **** //	p->intern.iv25s = dtmp;
 122:Ourtasks/adcparamsinit.c **** //adcdtmp = dtmp;
 123:Ourtasks/adcparamsinit.c **** 
 124:Ourtasks/adcparamsinit.c **** 	// Pre-compute (Vref / slope) to scaled int (~65536*1.20/4.3E-3 = (279.07 << 16) = 18289116)
 125:Ourtasks/adcparamsinit.c **** //	dtmp = ((1 << ADCSCALEbits) * (1000)) * p->intern.dvref / p->lc.calintern.dslope;
 126:Ourtasks/adcparamsinit.c **** //	p->intern.vrefRs = dtmp;
 127:Ourtasks/adcparamsinit.c **** //adcdtmp = dtmp;
 128:Ourtasks/adcparamsinit.c **** 
 129:Ourtasks/adcparamsinit.c **** 	// Room temp calibration offset (7/17/19) Is this needed?)
 130:Ourtasks/adcparamsinit.c **** 	p->intern.irmtemp = ((double)(1 << ADCSCALEbits) * (double)(p->lc.calintern.drmtemp));// / p->lc.c
 131:Ourtasks/adcparamsinit.c **** 	
 132:Ourtasks/adcparamsinit.c **** 	p->intern.yRs = ((double)((1 << ADCSCALEbitsy) * 1000) / p->lc.calintern.dslope);
 133:Ourtasks/adcparamsinit.c **** 
 134:Ourtasks/adcparamsinit.c **** 	p->intern.iv25 = (uint32_t)((double)(1 << ADCSCALEbitsy) * p->lc.calintern.dvtemp);
 135:Ourtasks/adcparamsinit.c **** 
 136:Ourtasks/adcparamsinit.c **** 	p->intern.dx25 = p->lc.calintern.dvtemp * (1.0/4.3E-3);
 137:Ourtasks/adcparamsinit.c **** 
 138:Ourtasks/adcparamsinit.c **** 	p->intern.dxdvref = p->intern.dvref * (1.0/4.3E-3);
 139:Ourtasks/adcparamsinit.c **** 
 140:Ourtasks/adcparamsinit.c **** /* Reproduced for convenience
ARM GAS  /tmp/ccVwgg6a.s 			page 4


 141:Ourtasks/adcparamsinit.c **** struct ADCABSOLUTE
 142:Ourtasks/adcparamsinit.c **** {
 143:Ourtasks/adcparamsinit.c **** 	struct IIRFILTERL iir;// Intermediate filter params
 144:Ourtasks/adcparamsinit.c **** 	double dscale;        // Computed from measurements
 145:Ourtasks/adcparamsinit.c **** 	uint32_t adcfil;      // Filtered ADC reading
 146:Ourtasks/adcparamsinit.c **** 	uint32_t ival;        // scaled int computed value (not divider scaled)
 147:Ourtasks/adcparamsinit.c **** }; */	
 148:Ourtasks/adcparamsinit.c **** 
 149:Ourtasks/adcparamsinit.c **** /* Absolute: 12v supply. */
 150:Ourtasks/adcparamsinit.c **** 	p->v12.iir.pprm = &p->lc.cal_12v.iir; // Filter param pointer
 151:Ourtasks/adcparamsinit.c **** 	p->v12.k   = (p->lc.cal_12v.dvn / p->intern.dvref) * (dadc / p->lc.cal_12v.adcvn);
 152:Ourtasks/adcparamsinit.c **** 	p->v12.dscale = p->v12.k * p->intern.dvref;
 153:Ourtasks/adcparamsinit.c **** 	p->chan[ADC1IDX_12VRAWSUPPLY].dscale = p->v12.k;
 154:Ourtasks/adcparamsinit.c **** 
 155:Ourtasks/adcparamsinit.c **** /* Absolute:  5v supply. */
 156:Ourtasks/adcparamsinit.c **** 	p->v5.iir.pprm = &p->lc.cal_5v.iir; // Filter param pointer
 157:Ourtasks/adcparamsinit.c **** 	p->v5.k   = (p->lc.cal_5v.dvn / p->intern.dvref) * (dadc / p->lc.cal_5v.adcvn);
 158:Ourtasks/adcparamsinit.c **** 	p->v5.dscale = p->v5.k * p->intern.dvref;
 159:Ourtasks/adcparamsinit.c **** 	p->chan[ADC1IDX_5VOLTSUPPLY].dscale = p->v5.dscale;
 160:Ourtasks/adcparamsinit.c **** 
 161:Ourtasks/adcparamsinit.c **** /* Ratiometric: battery string current. */
 162:Ourtasks/adcparamsinit.c **** 	ratiometric_cal(&p->cur1, &p->lc.cal_cur1);
 163:Ourtasks/adcparamsinit.c **** 	p->chan[ADC1IDX_CURRENTTOTAL].dscale = p->cur1.dscale; // For convenient access
 164:Ourtasks/adcparamsinit.c **** 
 165:Ourtasks/adcparamsinit.c **** /* Ratiometric: spare current. */
 166:Ourtasks/adcparamsinit.c **** 	ratiometric_cal(&p->cur2, &p->lc.cal_cur2);
 167:Ourtasks/adcparamsinit.c **** 	p->chan[ADC1IDX_CURRENTMOTOR].dscale = p->cur2.dscale; // For convenient access
 168:Ourtasks/adcparamsinit.c **** 
 169:Ourtasks/adcparamsinit.c **** 	return;
 170:Ourtasks/adcparamsinit.c **** }
 171:Ourtasks/adcparamsinit.c **** /* *************************************************************************
 172:Ourtasks/adcparamsinit.c **** static int16_t void ratiometric_cal_zero(struct ADCFUNCTION* p, struct ADCRATIOMETRIC* pcur, uint16
 173:Ourtasks/adcparamsinit.c ****  *	@brief	: Adjust no-current ratio for a Hall-effect sensor
 174:Ourtasks/adcparamsinit.c ****  * @param	: p = Pointer to struct "everything" for this ADC module
 175:Ourtasks/adcparamsinit.c ****  * @param	: pcur = Pointer to struct with values for the ratiometric sensor
 176:Ourtasks/adcparamsinit.c ****  * @param	: idx = index into ADC sum array for the sensor measurement
 177:Ourtasks/adcparamsinit.c ****  * @return	: 0 = no fault; -1 = out of tolerance
 178:Ourtasks/adcparamsinit.c ****  * *************************************************************************/
 179:Ourtasks/adcparamsinit.c **** static int16_t ratiometric_cal_zero(struct ADCFUNCTION* p, struct ADCRATIOMETRIC* pcur, uint16_t id
 180:Ourtasks/adcparamsinit.c **** {
  33              		.loc 1 180 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37              	.LVL0:
  38 0000 2DE97043 		push	{r4, r5, r6, r8, r9, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 24
  41              		.cfi_offset 4, -24
  42              		.cfi_offset 5, -20
  43              		.cfi_offset 6, -16
  44              		.cfi_offset 8, -12
  45              		.cfi_offset 9, -8
  46              		.cfi_offset 14, -4
  47 0004 0446     		mov	r4, r0
  48 0006 0E46     		mov	r6, r1
 181:Ourtasks/adcparamsinit.c **** 	double dtmp;
ARM GAS  /tmp/ccVwgg6a.s 			page 5


 182:Ourtasks/adcparamsinit.c **** 
 183:Ourtasks/adcparamsinit.c **** 	// Check that re-zero'ing is not some crazy value
 184:Ourtasks/adcparamsinit.c **** 	dtmp  = ((double)p->chan[idx].sum / (double)p->chan[ADC1IDX_5VOLTSUPPLY].sum) ;
  49              		.loc 1 184 0
  50 0008 02EB8202 		add	r2, r2, r2, lsl #2
  51              	.LVL1:
  52 000c 1301     		lsls	r3, r2, #4
  53 000e 0344     		add	r3, r3, r0
  54 0010 B3F82402 		ldrh	r0, [r3, #548]
  55              	.LVL2:
  56 0014 FFF7FEFF 		bl	__aeabi_ui2d
  57              	.LVL3:
  58 0018 8046     		mov	r8, r0
  59 001a 8946     		mov	r9, r1
  60 001c B4F82402 		ldrh	r0, [r4, #548]
  61 0020 FFF7FEFF 		bl	__aeabi_ui2d
  62              	.LVL4:
  63 0024 0246     		mov	r2, r0
  64 0026 0B46     		mov	r3, r1
  65 0028 4046     		mov	r0, r8
  66 002a 4946     		mov	r1, r9
  67 002c FFF7FEFF 		bl	__aeabi_ddiv
  68              	.LVL5:
  69 0030 0446     		mov	r4, r0
  70              	.LVL6:
  71 0032 0D46     		mov	r5, r1
  72              	.LVL7:
 185:Ourtasks/adcparamsinit.c **** 	if ( (dtmp > (pcur->drko * (1+ZTOLERANCE))) || (dtmp < (pcur->drko * (1-ZTOLERANCE))) )
  73              		.loc 1 185 0
  74 0034 D6E90689 		ldrd	r8, [r6, #24]
  75 0038 19A3     		adr	r3, .L6
  76 003a D3E90023 		ldrd	r2, [r3]
  77 003e 4046     		mov	r0, r8
  78 0040 4946     		mov	r1, r9
  79 0042 FFF7FEFF 		bl	__aeabi_dmul
  80              	.LVL8:
  81 0046 0246     		mov	r2, r0
  82 0048 0B46     		mov	r3, r1
  83 004a 2046     		mov	r0, r4
  84 004c 2946     		mov	r1, r5
  85 004e FFF7FEFF 		bl	__aeabi_dcmpgt
  86              	.LVL9:
  87 0052 D8B9     		cbnz	r0, .L3
  88              		.loc 1 185 0 is_stmt 0 discriminator 1
  89 0054 14A3     		adr	r3, .L6+8
  90 0056 D3E90023 		ldrd	r2, [r3]
  91 005a 4046     		mov	r0, r8
  92 005c 4946     		mov	r1, r9
  93 005e FFF7FEFF 		bl	__aeabi_dmul
  94              	.LVL10:
  95 0062 0246     		mov	r2, r0
  96 0064 0B46     		mov	r3, r1
  97 0066 2046     		mov	r0, r4
  98 0068 2946     		mov	r1, r5
  99 006a FFF7FEFF 		bl	__aeabi_dcmplt
 100              	.LVL11:
 101 006e 88B9     		cbnz	r0, .L4
ARM GAS  /tmp/ccVwgg6a.s 			page 6


 186:Ourtasks/adcparamsinit.c **** 	{
 187:Ourtasks/adcparamsinit.c **** 		return -1;
 188:Ourtasks/adcparamsinit.c **** 	}
 189:Ourtasks/adcparamsinit.c **** 	else
 190:Ourtasks/adcparamsinit.c **** 	{ // Here adjustment is considered reasonable.
 191:Ourtasks/adcparamsinit.c **** 		pcur->drko = dtmp;
 102              		.loc 1 191 0 is_stmt 1
 103 0070 C6E90645 		strd	r4, [r6, #24]
 192:Ourtasks/adcparamsinit.c **** 		pcur->irko  =dtmp * (1 << ADCSCALEbits);
 104              		.loc 1 192 0
 105 0074 0022     		movs	r2, #0
 106 0076 0E4B     		ldr	r3, .L6+16
 107 0078 2046     		mov	r0, r4
 108 007a 2946     		mov	r1, r5
 109 007c FFF7FEFF 		bl	__aeabi_dmul
 110              	.LVL12:
 111 0080 FFF7FEFF 		bl	__aeabi_d2iz
 112              	.LVL13:
 113 0084 F062     		str	r0, [r6, #44]
 193:Ourtasks/adcparamsinit.c **** 	}
 194:Ourtasks/adcparamsinit.c **** 	return 0;
 114              		.loc 1 194 0
 115 0086 0020     		movs	r0, #0
 116 0088 BDE87083 		pop	{r4, r5, r6, r8, r9, pc}
 117              	.LVL14:
 118              	.L3:
 187:Ourtasks/adcparamsinit.c **** 	}
 119              		.loc 1 187 0
 120 008c 4FF0FF30 		mov	r0, #-1
 121 0090 BDE87083 		pop	{r4, r5, r6, r8, r9, pc}
 122              	.LVL15:
 123              	.L4:
 124 0094 4FF0FF30 		mov	r0, #-1
 195:Ourtasks/adcparamsinit.c **** }
 125              		.loc 1 195 0
 126 0098 BDE87083 		pop	{r4, r5, r6, r8, r9, pc}
 127              	.LVL16:
 128              	.L7:
 129 009c AFF30080 		.align	3
 130              	.L6:
 131 00a0 CDCCCCCC 		.word	-858993459
 132 00a4 CCCCF03F 		.word	1072745676
 133 00a8 66666666 		.word	1717986918
 134 00ac 6666EE3F 		.word	1072588390
 135 00b0 0000E040 		.word	1088421888
 136              		.cfi_endproc
 137              	.LFE70:
 139              		.global	__aeabi_dsub
 140              		.section	.text.ratiometric_cal,"ax",%progbits
 141              		.align	2
 142              		.thumb
 143              		.thumb_func
 145              	ratiometric_cal:
 146              	.LFB73:
 196:Ourtasks/adcparamsinit.c **** 
 197:Ourtasks/adcparamsinit.c **** /* *************************************************************************
 198:Ourtasks/adcparamsinit.c **** int16_t ratiometric_cal_zero_CURRENTTOTAL(struct ADCFUNCTION* p);
ARM GAS  /tmp/ccVwgg6a.s 			page 7


 199:Ourtasks/adcparamsinit.c **** int16_t ratiometric_cal_zero_CURRENTMOTOR(struct ADCFUNCTION* p);
 200:Ourtasks/adcparamsinit.c ****  *	@brief	: Adjust no-current ratio for Hall-effect sensors
 201:Ourtasks/adcparamsinit.c ****  * @param	: p = Pointer to struct "everything" for this ADC module
 202:Ourtasks/adcparamsinit.c ****  * @return	: 0 = no fault; -1 = out of tolerance
 203:Ourtasks/adcparamsinit.c ****  * *************************************************************************/
 204:Ourtasks/adcparamsinit.c **** int16_t ratiometric_cal_zero_CURRENTTOTAL(struct ADCFUNCTION* p)
 205:Ourtasks/adcparamsinit.c **** {
 206:Ourtasks/adcparamsinit.c **** 	return ratiometric_cal_zero(p, &p->cur1, ADC1IDX_CURRENTTOTAL);
 207:Ourtasks/adcparamsinit.c **** }
 208:Ourtasks/adcparamsinit.c **** int16_t ratiometric_cal_zero_CURRENTMOTOR(struct ADCFUNCTION* p)
 209:Ourtasks/adcparamsinit.c **** {
 210:Ourtasks/adcparamsinit.c **** 	return ratiometric_cal_zero(p, &p->cur1, ADC1IDX_CURRENTMOTOR);
 211:Ourtasks/adcparamsinit.c **** }
 212:Ourtasks/adcparamsinit.c **** 
 213:Ourtasks/adcparamsinit.c **** /* *************************************************************************
 214:Ourtasks/adcparamsinit.c **** static void ratiometric_cal(struct ADCRATIOMETRIC* p, struct ADCCALHE* plc);
 215:Ourtasks/adcparamsinit.c ****  *	@brief	: Compute calibration constants for ratiometric sensor
 216:Ourtasks/adcparamsinit.c ****  * @param	: p = points to struct with computed results
 217:Ourtasks/adcparamsinit.c ****  * @param	: plc = points to parameter struct for this sensor
 218:Ourtasks/adcparamsinit.c ****  * *************************************************************************/
 219:Ourtasks/adcparamsinit.c **** static void ratiometric_cal(struct ADCRATIOMETRIC* p, struct ADCCALHE* plc)
 220:Ourtasks/adcparamsinit.c **** {
 147              		.loc 1 220 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              	.LVL17:
 152 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 153              	.LCFI1:
 154              		.cfi_def_cfa_offset 32
 155              		.cfi_offset 3, -32
 156              		.cfi_offset 4, -28
 157              		.cfi_offset 5, -24
 158              		.cfi_offset 6, -20
 159              		.cfi_offset 7, -16
 160              		.cfi_offset 8, -12
 161              		.cfi_offset 9, -8
 162              		.cfi_offset 14, -4
 163 0004 0546     		mov	r5, r0
 164 0006 0C46     		mov	r4, r1
 221:Ourtasks/adcparamsinit.c **** /* Reproduced for convenience
 222:Ourtasks/adcparamsinit.c **** struct ADCRATIOMETRIC
 223:Ourtasks/adcparamsinit.c **** {
 224:Ourtasks/adcparamsinit.c **** 	struct IIRFILTERL iir;    // Intermediate filter params
 225:Ourtasks/adcparamsinit.c **** 	double drko;      // Offset ratio: double (~0.5)
 226:Ourtasks/adcparamsinit.c **** 	double dscale;    // Scale factor
 227:Ourtasks/adcparamsinit.c **** 	uint32_t adcfil;  // Filtered ADC reading
 228:Ourtasks/adcparamsinit.c **** 	int32_t irko;     // Offset ratio: scale int (~32768)
 229:Ourtasks/adcparamsinit.c **** 	int32_t iI;       // integer result w offset, not final scaling
 230:Ourtasks/adcparamsinit.c **** }; */
 231:Ourtasks/adcparamsinit.c **** 
 232:Ourtasks/adcparamsinit.c **** 	p->iir.pprm = &plc->iir; // Filter param pointer
 165              		.loc 1 232 0
 166 0008 2961     		str	r1, [r5, #16]
 233:Ourtasks/adcparamsinit.c **** 	
 234:Ourtasks/adcparamsinit.c **** 	// Sensor connected, no current -> offset ratio (~ 0.50)
 235:Ourtasks/adcparamsinit.c **** 	p->drko  = ((double)plc->zeroadcve / (double)plc->zeroadc5) ;
ARM GAS  /tmp/ccVwgg6a.s 			page 8


 167              		.loc 1 235 0
 168 000a 0869     		ldr	r0, [r1, #16]
 169              	.LVL18:
 170 000c FFF7FEFF 		bl	__aeabi_ui2d
 171              	.LVL19:
 172 0010 0646     		mov	r6, r0
 173 0012 0F46     		mov	r7, r1
 174 0014 6069     		ldr	r0, [r4, #20]
 175 0016 FFF7FEFF 		bl	__aeabi_ui2d
 176              	.LVL20:
 177 001a 0246     		mov	r2, r0
 178 001c 0B46     		mov	r3, r1
 179 001e 3046     		mov	r0, r6
 180 0020 3946     		mov	r1, r7
 181 0022 FFF7FEFF 		bl	__aeabi_ddiv
 182              	.LVL21:
 183 0026 0646     		mov	r6, r0
 184 0028 0F46     		mov	r7, r1
 185 002a C5E90667 		strd	r6, [r5, #24]
 236:Ourtasks/adcparamsinit.c **** 	p->irko  = (p->drko * (1 << ADCSCALEbits) );
 186              		.loc 1 236 0
 187 002e 0022     		movs	r2, #0
 188 0030 104B     		ldr	r3, .L10
 189 0032 FFF7FEFF 		bl	__aeabi_dmul
 190              	.LVL22:
 191 0036 FFF7FEFF 		bl	__aeabi_d2iz
 192              	.LVL23:
 193 003a E862     		str	r0, [r5, #44]
 237:Ourtasks/adcparamsinit.c **** 
 238:Ourtasks/adcparamsinit.c **** 	// Sensor connected, test current applied with maybe more than one turn through sensor
 239:Ourtasks/adcparamsinit.c **** 	// dscale = amp-turns / ((calibration ADC ratio - offset ratio) * divider ratio);
 240:Ourtasks/adcparamsinit.c **** 	double dtmp = ( (double)plc->caladcve / (double)plc->zeroadc5 ) - p->drko ;
 194              		.loc 1 240 0
 195 003c A069     		ldr	r0, [r4, #24]
 196 003e FFF7FEFF 		bl	__aeabi_ui2d
 197              	.LVL24:
 198 0042 8046     		mov	r8, r0
 199 0044 8946     		mov	r9, r1
 200 0046 6069     		ldr	r0, [r4, #20]
 201 0048 FFF7FEFF 		bl	__aeabi_ui2d
 202              	.LVL25:
 203 004c 0246     		mov	r2, r0
 204 004e 0B46     		mov	r3, r1
 205 0050 4046     		mov	r0, r8
 206 0052 4946     		mov	r1, r9
 207 0054 FFF7FEFF 		bl	__aeabi_ddiv
 208              	.LVL26:
 209 0058 3246     		mov	r2, r6
 210 005a 3B46     		mov	r3, r7
 211 005c FFF7FEFF 		bl	__aeabi_dsub
 212              	.LVL27:
 241:Ourtasks/adcparamsinit.c **** 	p->dscale = plc->dcalcur / dtmp;
 213              		.loc 1 241 0
 214 0060 0246     		mov	r2, r0
 215 0062 0B46     		mov	r3, r1
 216 0064 D4E90801 		ldrd	r0, [r4, #32]
 217              	.LVL28:
ARM GAS  /tmp/ccVwgg6a.s 			page 9


 218 0068 FFF7FEFF 		bl	__aeabi_ddiv
 219              	.LVL29:
 220 006c C5E90801 		strd	r0, [r5, #32]
 221 0070 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 222              	.LVL30:
 223              	.L11:
 224              		.align	2
 225              	.L10:
 226 0074 0000E040 		.word	1088421888
 227              		.cfi_endproc
 228              	.LFE73:
 230              		.global	__aeabi_d2uiz
 231              		.section	.text.adcparamsinit_init,"ax",%progbits
 232              		.align	2
 233              		.global	adcparamsinit_init
 234              		.thumb
 235              		.thumb_func
 237              	adcparamsinit_init:
 238              	.LFB69:
  61:Ourtasks/adcparamsinit.c **** /* Reproduced for convenience 
 239              		.loc 1 61 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              	.LVL31:
 244 0000 2DE9D04F 		push	{r4, r6, r7, r8, r9, r10, fp, lr}
 245              	.LCFI2:
 246              		.cfi_def_cfa_offset 32
 247              		.cfi_offset 4, -32
 248              		.cfi_offset 6, -28
 249              		.cfi_offset 7, -24
 250              		.cfi_offset 8, -20
 251              		.cfi_offset 9, -16
 252              		.cfi_offset 10, -12
 253              		.cfi_offset 11, -8
 254              		.cfi_offset 14, -4
 255 0004 0446     		mov	r4, r0
  99:Ourtasks/adcparamsinit.c **** 	p->intern.iiradctemp.pprm = &p->lc.calintern.iiradctemp;
 256              		.loc 1 99 0
 257 0006 00F11003 		add	r3, r0, #16
 258 000a C0F8E030 		str	r3, [r0, #224]
 100:Ourtasks/adcparamsinit.c **** 
 259              		.loc 1 100 0
 260 000e 00F11803 		add	r3, r0, #24
 261 0012 C0F8F830 		str	r3, [r0, #248]
 103:Ourtasks/adcparamsinit.c **** 	p->intern.dvref = p->lc.calintern.dvdd * (dadc / 65520.0);
 262              		.loc 1 103 0
 263 0016 806C     		ldr	r0, [r0, #72]
 264              	.LVL32:
 265 0018 FFF7FEFF 		bl	__aeabi_ui2d
 266              	.LVL33:
 267 001c 8246     		mov	r10, r0
 268 001e 8B46     		mov	fp, r1
 269              	.LVL34:
 104:Ourtasks/adcparamsinit.c **** 	p->intern.vref  = (p->intern.dvref * (1 << ADCSCALEbits) ); // Scaled uint32_t; 
 270              		.loc 1 104 0
 271 0020 D4E90C89 		ldrd	r8, [r4, #48]
ARM GAS  /tmp/ccVwgg6a.s 			page 10


 272 0024 88A3     		adr	r3, .L17
 273 0026 D3E90023 		ldrd	r2, [r3]
 274 002a FFF7FEFF 		bl	__aeabi_ddiv
 275              	.LVL35:
 276 002e 0246     		mov	r2, r0
 277 0030 0B46     		mov	r3, r1
 278 0032 4046     		mov	r0, r8
 279 0034 4946     		mov	r1, r9
 280 0036 FFF7FEFF 		bl	__aeabi_dmul
 281              	.LVL36:
 282 003a 0646     		mov	r6, r0
 283 003c 0F46     		mov	r7, r1
 284 003e 04F58873 		add	r3, r4, #272
 285 0042 C3E90067 		strd	r6, [r3]
 105:Ourtasks/adcparamsinit.c **** 	p->intern.adcvref = (65520.0 * p->intern.dvref) / p->lc.calintern.dvdd;
 286              		.loc 1 105 0
 287 0046 0022     		movs	r2, #0
 288 0048 894B     		ldr	r3, .L17+40
 289 004a FFF7FEFF 		bl	__aeabi_dmul
 290              	.LVL37:
 291 004e FFF7FEFF 		bl	__aeabi_d2uiz
 292              	.LVL38:
 293 0052 C4F81801 		str	r0, [r4, #280]
 106:Ourtasks/adcparamsinit.c **** 
 294              		.loc 1 106 0
 295 0056 7CA3     		adr	r3, .L17
 296 0058 D3E90023 		ldrd	r2, [r3]
 297 005c 3046     		mov	r0, r6
 298 005e 3946     		mov	r1, r7
 299 0060 FFF7FEFF 		bl	__aeabi_dmul
 300              	.LVL39:
 301 0064 4246     		mov	r2, r8
 302 0066 4B46     		mov	r3, r9
 303 0068 FFF7FEFF 		bl	__aeabi_ddiv
 304              	.LVL40:
 305 006c FFF7FEFF 		bl	__aeabi_d2uiz
 306              	.LVL41:
 307 0070 C4F80801 		str	r0, [r4, #264]
 109:Ourtasks/adcparamsinit.c **** 	{
 308              		.loc 1 109 0
 309 0074 76A3     		adr	r3, .L17+8
 310 0076 D3E90023 		ldrd	r2, [r3]
 311 007a 3046     		mov	r0, r6
 312 007c 3946     		mov	r1, r7
 313 007e FFF7FEFF 		bl	__aeabi_dcmplt
 314              	.LVL42:
 315 0082 38B9     		cbnz	r0, .L13
 109:Ourtasks/adcparamsinit.c **** 	{
 316              		.loc 1 109 0 is_stmt 0 discriminator 1
 317 0084 74A3     		adr	r3, .L17+16
 318 0086 D3E90023 		ldrd	r2, [r3]
 319 008a 3046     		mov	r0, r6
 320 008c 3946     		mov	r1, r7
 321 008e FFF7FEFF 		bl	__aeabi_dcmpgt
 322              	.LVL43:
 323 0092 10B1     		cbz	r0, .L14
 324              	.L13:
ARM GAS  /tmp/ccVwgg6a.s 			page 11


 111:Ourtasks/adcparamsinit.c **** 	}
 325              		.loc 1 111 0 is_stmt 1
 326 0094 5120     		movs	r0, #81
 327 0096 FFF7FEFF 		bl	morse_trap
 328              	.LVL44:
 329              	.L14:
 113:Ourtasks/adcparamsinit.c **** 	p->chan[ADC1IDX_INTERNALVREF].dscale = 1.0;
 330              		.loc 1 113 0
 331 009a 6BA3     		adr	r3, .L17
 332 009c D3E90023 		ldrd	r2, [r3]
 333 00a0 D4E90C01 		ldrd	r0, [r4, #48]
 334 00a4 FFF7FEFF 		bl	__aeabi_ddiv
 335              	.LVL45:
 336 00a8 04F55673 		add	r3, r4, #856
 337 00ac C3E90001 		strd	r0, [r3]
 114:Ourtasks/adcparamsinit.c **** 
 338              		.loc 1 114 0
 339 00b0 04F56A73 		add	r3, r4, #936
 340 00b4 0020     		movs	r0, #0
 341 00b6 6F49     		ldr	r1, .L17+44
 342 00b8 C3E90001 		strd	r0, [r3]
 117:Ourtasks/adcparamsinit.c **** 
 343              		.loc 1 117 0
 344 00bc D4E90E67 		ldrd	r6, [r4, #56]
 345 00c0 3246     		mov	r2, r6
 346 00c2 3B46     		mov	r3, r7
 347 00c4 66A1     		adr	r1, .L17+24
 348 00c6 D1E90001 		ldrd	r0, [r1]
 349 00ca FFF7FEFF 		bl	__aeabi_ddiv
 350              	.LVL46:
 351 00ce FFF7FEFF 		bl	__aeabi_d2uiz
 352              	.LVL47:
 353 00d2 C4F81C01 		str	r0, [r4, #284]
 130:Ourtasks/adcparamsinit.c **** 	
 354              		.loc 1 130 0
 355 00d6 0022     		movs	r2, #0
 356 00d8 654B     		ldr	r3, .L17+40
 357 00da D4E90801 		ldrd	r0, [r4, #32]
 358 00de FFF7FEFF 		bl	__aeabi_dmul
 359              	.LVL48:
 360 00e2 FFF7FEFF 		bl	__aeabi_d2uiz
 361              	.LVL49:
 362 00e6 C4F83801 		str	r0, [r4, #312]
 132:Ourtasks/adcparamsinit.c **** 
 363              		.loc 1 132 0
 364 00ea 3246     		mov	r2, r6
 365 00ec 3B46     		mov	r3, r7
 366 00ee 0020     		movs	r0, #0
 367 00f0 6149     		ldr	r1, .L17+48
 368 00f2 FFF7FEFF 		bl	__aeabi_ddiv
 369              	.LVL50:
 370 00f6 FFF7FEFF 		bl	__aeabi_d2uiz
 371              	.LVL51:
 372 00fa C4F84001 		str	r0, [r4, #320]
 134:Ourtasks/adcparamsinit.c **** 
 373              		.loc 1 134 0
 374 00fe D4E90A67 		ldrd	r6, [r4, #40]
ARM GAS  /tmp/ccVwgg6a.s 			page 12


 375 0102 0022     		movs	r2, #0
 376 0104 5D4B     		ldr	r3, .L17+52
 377 0106 3046     		mov	r0, r6
 378 0108 3946     		mov	r1, r7
 379 010a FFF7FEFF 		bl	__aeabi_dmul
 380              	.LVL52:
 381 010e FFF7FEFF 		bl	__aeabi_d2uiz
 382              	.LVL53:
 383 0112 C4F84401 		str	r0, [r4, #324]
 136:Ourtasks/adcparamsinit.c **** 
 384              		.loc 1 136 0
 385 0116 54A3     		adr	r3, .L17+32
 386 0118 D3E90023 		ldrd	r2, [r3]
 387 011c 3046     		mov	r0, r6
 388 011e 3946     		mov	r1, r7
 389 0120 FFF7FEFF 		bl	__aeabi_dmul
 390              	.LVL54:
 391 0124 04F59473 		add	r3, r4, #296
 392 0128 C3E90001 		strd	r0, [r3]
 138:Ourtasks/adcparamsinit.c **** 
 393              		.loc 1 138 0
 394 012c 04F58873 		add	r3, r4, #272
 395 0130 D3E90067 		ldrd	r6, [r3]
 396 0134 4CA3     		adr	r3, .L17+32
 397 0136 D3E90023 		ldrd	r2, [r3]
 398 013a 3046     		mov	r0, r6
 399 013c 3946     		mov	r1, r7
 400 013e FFF7FEFF 		bl	__aeabi_dmul
 401              	.LVL55:
 402 0142 04F59873 		add	r3, r4, #304
 403 0146 C3E90001 		strd	r0, [r3]
 150:Ourtasks/adcparamsinit.c **** 	p->v12.k   = (p->lc.cal_12v.dvn / p->intern.dvref) * (dadc / p->lc.cal_12v.adcvn);
 404              		.loc 1 150 0
 405 014a 04F1B803 		add	r3, r4, #184
 406 014e C4F85831 		str	r3, [r4, #344]
 151:Ourtasks/adcparamsinit.c **** 	p->v12.dscale = p->v12.k * p->intern.dvref;
 407              		.loc 1 151 0
 408 0152 3246     		mov	r2, r6
 409 0154 3B46     		mov	r3, r7
 410 0156 D4E93201 		ldrd	r0, [r4, #200]
 411 015a FFF7FEFF 		bl	__aeabi_ddiv
 412              	.LVL56:
 413 015e 8046     		mov	r8, r0
 414 0160 8946     		mov	r9, r1
 415 0162 D4F8C000 		ldr	r0, [r4, #192]
 416 0166 FFF7FEFF 		bl	__aeabi_ui2d
 417              	.LVL57:
 418 016a 0246     		mov	r2, r0
 419 016c 0B46     		mov	r3, r1
 420 016e 5046     		mov	r0, r10
 421 0170 5946     		mov	r1, fp
 422 0172 FFF7FEFF 		bl	__aeabi_ddiv
 423              	.LVL58:
 424 0176 0246     		mov	r2, r0
 425 0178 0B46     		mov	r3, r1
 426 017a 4046     		mov	r0, r8
 427 017c 4946     		mov	r1, r9
ARM GAS  /tmp/ccVwgg6a.s 			page 13


 428 017e FFF7FEFF 		bl	__aeabi_dmul
 429              	.LVL59:
 430 0182 8046     		mov	r8, r0
 431 0184 8946     		mov	r9, r1
 432 0186 04F5B473 		add	r3, r4, #360
 433 018a C3E90089 		strd	r8, [r3]
 152:Ourtasks/adcparamsinit.c **** 	p->chan[ADC1IDX_12VRAWSUPPLY].dscale = p->v12.k;
 434              		.loc 1 152 0
 435 018e 0246     		mov	r2, r0
 436 0190 0B46     		mov	r3, r1
 437 0192 3046     		mov	r0, r6
 438 0194 3946     		mov	r1, r7
 439 0196 FFF7FEFF 		bl	__aeabi_dmul
 440              	.LVL60:
 441 019a 04F5B073 		add	r3, r4, #352
 442 019e C3E90001 		strd	r0, [r3]
 153:Ourtasks/adcparamsinit.c **** 
 443              		.loc 1 153 0
 444 01a2 04F54273 		add	r3, r4, #776
 445 01a6 C3E90089 		strd	r8, [r3]
 156:Ourtasks/adcparamsinit.c **** 	p->v5.k   = (p->lc.cal_5v.dvn / p->intern.dvref) * (dadc / p->lc.cal_5v.adcvn);
 446              		.loc 1 156 0
 447 01aa 04F1A003 		add	r3, r4, #160
 448 01ae C4F88831 		str	r3, [r4, #392]
 157:Ourtasks/adcparamsinit.c **** 	p->v5.dscale = p->v5.k * p->intern.dvref;
 449              		.loc 1 157 0
 450 01b2 3246     		mov	r2, r6
 451 01b4 3B46     		mov	r3, r7
 452 01b6 D4E92C01 		ldrd	r0, [r4, #176]
 453 01ba FFF7FEFF 		bl	__aeabi_ddiv
 454              	.LVL61:
 455 01be 8046     		mov	r8, r0
 456 01c0 8946     		mov	r9, r1
 457 01c2 D4F8A800 		ldr	r0, [r4, #168]
 458 01c6 FFF7FEFF 		bl	__aeabi_ui2d
 459              	.LVL62:
 460 01ca 0246     		mov	r2, r0
 461 01cc 0B46     		mov	r3, r1
 462 01ce 5046     		mov	r0, r10
 463 01d0 5946     		mov	r1, fp
 464 01d2 FFF7FEFF 		bl	__aeabi_ddiv
 465              	.LVL63:
 466 01d6 0246     		mov	r2, r0
 467 01d8 0B46     		mov	r3, r1
 468 01da 4046     		mov	r0, r8
 469 01dc 4946     		mov	r1, r9
 470 01de FFF7FEFF 		bl	__aeabi_dmul
 471              	.LVL64:
 472 01e2 0246     		mov	r2, r0
 473 01e4 0B46     		mov	r3, r1
 474 01e6 04F5CC71 		add	r1, r4, #408
 475 01ea C1E90023 		strd	r2, [r1]
 158:Ourtasks/adcparamsinit.c **** 	p->chan[ADC1IDX_5VOLTSUPPLY].dscale = p->v5.dscale;
 476              		.loc 1 158 0
 477 01ee 3046     		mov	r0, r6
 478 01f0 3946     		mov	r1, r7
 479 01f2 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/ccVwgg6a.s 			page 14


 480              	.LVL65:
 481 01f6 04F5C873 		add	r3, r4, #400
 482 01fa C3E90001 		strd	r0, [r3]
 159:Ourtasks/adcparamsinit.c **** 
 483              		.loc 1 159 0
 484 01fe 04F50673 		add	r3, r4, #536
 485 0202 C3E90001 		strd	r0, [r3]
 162:Ourtasks/adcparamsinit.c **** 	p->chan[ADC1IDX_CURRENTTOTAL].dscale = p->cur1.dscale; // For convenient access
 486              		.loc 1 162 0
 487 0206 04F15001 		add	r1, r4, #80
 488 020a 04F5D470 		add	r0, r4, #424
 489 020e FFF7FEFF 		bl	ratiometric_cal
 490              	.LVL66:
 163:Ourtasks/adcparamsinit.c **** 
 491              		.loc 1 163 0
 492 0212 04F5E473 		add	r3, r4, #456
 493 0216 D3E90001 		ldrd	r0, [r3]
 494 021a 04F51A73 		add	r3, r4, #616
 495 021e C3E90001 		strd	r0, [r3]
 166:Ourtasks/adcparamsinit.c **** 	p->chan[ADC1IDX_CURRENTMOTOR].dscale = p->cur2.dscale; // For convenient access
 496              		.loc 1 166 0
 497 0222 04F17801 		add	r1, r4, #120
 498 0226 04F5F070 		add	r0, r4, #480
 499 022a FFF7FEFF 		bl	ratiometric_cal
 500              	.LVL67:
 167:Ourtasks/adcparamsinit.c **** 
 501              		.loc 1 167 0
 502 022e 04F50073 		add	r3, r4, #512
 503 0232 D3E90023 		ldrd	r2, [r3]
 504 0236 04F52E74 		add	r4, r4, #696
 505              	.LVL68:
 506 023a C4E90023 		strd	r2, [r4]
 507 023e BDE8D08F 		pop	{r4, r6, r7, r8, r9, r10, fp, pc}
 508              	.LVL69:
 509              	.L18:
 510 0242 00BFAFF3 		.align	3
 510      0080
 511              	.L17:
 512 0248 00000000 		.word	0
 513 024c 00FEEF40 		.word	1089469952
 514 0250 66666666 		.word	1717986918
 515 0254 6666F23F 		.word	1072850534
 516 0258 52B81E85 		.word	-2061584302
 517 025c EB51F43F 		.word	1072976363
 518 0260 00000000 		.word	0
 519 0264 00407F41 		.word	1098858496
 520 0268 C41D7147 		.word	1198595524
 521 026c DC116D40 		.word	1080889820
 522 0270 0000E040 		.word	1088421888
 523 0274 0000F03F 		.word	1072693248
 524 0278 0040FF40 		.word	1090469888
 525 027c 00006040 		.word	1080033280
 526              		.cfi_endproc
 527              	.LFE69:
 529              		.section	.text.ratiometric_cal_zero_CURRENTTOTAL,"ax",%progbits
 530              		.align	2
 531              		.global	ratiometric_cal_zero_CURRENTTOTAL
ARM GAS  /tmp/ccVwgg6a.s 			page 15


 532              		.thumb
 533              		.thumb_func
 535              	ratiometric_cal_zero_CURRENTTOTAL:
 536              	.LFB71:
 205:Ourtasks/adcparamsinit.c **** 	return ratiometric_cal_zero(p, &p->cur1, ADC1IDX_CURRENTTOTAL);
 537              		.loc 1 205 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541              	.LVL70:
 542 0000 08B5     		push	{r3, lr}
 543              	.LCFI3:
 544              		.cfi_def_cfa_offset 8
 545              		.cfi_offset 3, -8
 546              		.cfi_offset 14, -4
 206:Ourtasks/adcparamsinit.c **** }
 547              		.loc 1 206 0
 548 0002 0122     		movs	r2, #1
 549 0004 00F5D471 		add	r1, r0, #424
 550 0008 FFF7FEFF 		bl	ratiometric_cal_zero
 551              	.LVL71:
 207:Ourtasks/adcparamsinit.c **** int16_t ratiometric_cal_zero_CURRENTMOTOR(struct ADCFUNCTION* p)
 552              		.loc 1 207 0
 553 000c 08BD     		pop	{r3, pc}
 554              		.cfi_endproc
 555              	.LFE71:
 557 000e 00BF     		.section	.text.ratiometric_cal_zero_CURRENTMOTOR,"ax",%progbits
 558              		.align	2
 559              		.global	ratiometric_cal_zero_CURRENTMOTOR
 560              		.thumb
 561              		.thumb_func
 563              	ratiometric_cal_zero_CURRENTMOTOR:
 564              	.LFB72:
 209:Ourtasks/adcparamsinit.c **** 	return ratiometric_cal_zero(p, &p->cur1, ADC1IDX_CURRENTMOTOR);
 565              		.loc 1 209 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              	.LVL72:
 570 0000 08B5     		push	{r3, lr}
 571              	.LCFI4:
 572              		.cfi_def_cfa_offset 8
 573              		.cfi_offset 3, -8
 574              		.cfi_offset 14, -4
 210:Ourtasks/adcparamsinit.c **** }
 575              		.loc 1 210 0
 576 0002 0222     		movs	r2, #2
 577 0004 00F5D471 		add	r1, r0, #424
 578 0008 FFF7FEFF 		bl	ratiometric_cal_zero
 579              	.LVL73:
 211:Ourtasks/adcparamsinit.c **** 
 580              		.loc 1 211 0
 581 000c 08BD     		pop	{r3, pc}
 582              		.cfi_endproc
 583              	.LFE72:
 585              		.comm	adcdtmp,8,8
 586 000e 00BF     		.text
ARM GAS  /tmp/ccVwgg6a.s 			page 16


 587              	.Letext0:
 588              		.file 2 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_t
 589              		.file 3 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 590              		.file 4 "Ourtasks/iir_filter_lx.h"
 591              		.file 5 "Ourtasks/adc_idx_v_struct.h"
 592              		.file 6 "Ourtasks/adcparams.h"
 593              		.file 7 "Ourtasks/cic_filter_l_N2_M3.h"
 594              		.file 8 "Drivers/CMSIS/Include/core_cm3.h"
 595              		.file 9 "Ourwares/morse.h"
ARM GAS  /tmp/ccVwgg6a.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 adcparamsinit.c
     /tmp/ccVwgg6a.s:26     .text.ratiometric_cal_zero:00000000 $t
     /tmp/ccVwgg6a.s:30     .text.ratiometric_cal_zero:00000000 ratiometric_cal_zero
     /tmp/ccVwgg6a.s:131    .text.ratiometric_cal_zero:000000a0 $d
     /tmp/ccVwgg6a.s:141    .text.ratiometric_cal:00000000 $t
     /tmp/ccVwgg6a.s:145    .text.ratiometric_cal:00000000 ratiometric_cal
     /tmp/ccVwgg6a.s:226    .text.ratiometric_cal:00000074 $d
     /tmp/ccVwgg6a.s:232    .text.adcparamsinit_init:00000000 $t
     /tmp/ccVwgg6a.s:237    .text.adcparamsinit_init:00000000 adcparamsinit_init
     /tmp/ccVwgg6a.s:512    .text.adcparamsinit_init:00000248 $d
     /tmp/ccVwgg6a.s:530    .text.ratiometric_cal_zero_CURRENTTOTAL:00000000 $t
     /tmp/ccVwgg6a.s:535    .text.ratiometric_cal_zero_CURRENTTOTAL:00000000 ratiometric_cal_zero_CURRENTTOTAL
     /tmp/ccVwgg6a.s:558    .text.ratiometric_cal_zero_CURRENTMOTOR:00000000 $t
     /tmp/ccVwgg6a.s:563    .text.ratiometric_cal_zero_CURRENTMOTOR:00000000 ratiometric_cal_zero_CURRENTMOTOR
                            *COM*:00000008 adcdtmp
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dcmpgt
__aeabi_dcmplt
__aeabi_d2iz
__aeabi_dsub
__aeabi_d2uiz
morse_trap
